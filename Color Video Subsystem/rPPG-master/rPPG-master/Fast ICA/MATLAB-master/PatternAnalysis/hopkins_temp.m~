function [xH, H, HNMax, HNMin] = hopkins_main (dataXY_all, xlim1, xlim2, ylim1, ylim2, Klim, nSteps, envelopes, Nsimul, filename)
h = waitbar(0,'Computing Hopkins...');
    for ii=1:Hopp.N
        HopD(jj,ii) = hopkins(simData, Hopp.xlim1, Hopp.xlim2, Hopp.ylim1, Hopp.ylim2, Hopp.m);
        waitbar(ii/Hopp.N,h)
    end
    close (h)
    Hopp.Npoints = length(simData);
    %envelops
%     [HoppMin(jj,:), HoppMax(jj,:), xHopp] = hopkinsEnv(Hopp.Npoints,
%     Hopp.xlim1, Hopp.xlim2, Hopp.ylim1, Hopp.ylim2, Hopp.m,Hopp.N,
%     [0:Hopp.binStep:1], Hopp.Niter);
    
    writeLogData2 (Hopp, CommentString, pathName, Hopp.nameF)


function [HhistMin, HhistMax, xHhist] = hopkinsEnv(Npoints, xlim1, xlim2, ylim1, ylim2, m,N, bins, Niter)
% function [HhistMin, HhistMax, xHhist] = hopkinsEnv(Npoints, xlim1, xlim2,
% ylim1, ylim2, m,N, bins, Niter)


h = waitbar(0,'Computing Hopkins Envelope...');
for ii=1 : Niter
    waitbar(ii/Niter,h)
    simNoise = generateNoise(Npoints, [xlim2-xlim1, ylim2-ylim1], [xlim1 ylim1]);
    for jj=1 : N
            H(jj) = hopkins (simNoise,xlim1, xlim2, ylim1, ylim2, m);
    end
    [Hhist, xHhist] = hist(H, bins);
    Hhist = Hhist/trapz(xHhist, Hhist); % normalization
    if ii==1
        HhistMin = Hhist;
        HhistMax = Hhist;
    else
        HhistMin = min(HhistMin, Hhist);
        HhistMax = max(HhistMax, Hhist);
    end
end
close (h)