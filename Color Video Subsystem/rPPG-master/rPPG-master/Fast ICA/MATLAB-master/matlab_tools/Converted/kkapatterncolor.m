%kkapatterncolor 'Substitute pixel with a certain color by a bilevel pattern '
% This MatLab function was automatically generated by a converter (KhorosToMatLab) from the Khoros kapatterncolor.pane file
%
% Parameters: 
% InputFile: i 'Input ', required: 'First Input data object'
% MultiChoice: pattern 'By Pattern', default: 1: 'List of available patterns for substitution'
%    Choices are:
%   1: 'pixmap:$ANNOTATE/objects/kroutine/kapatterncolor/pixmaps/pattern01.xpm'
%   2: 'pixmap:$ANNOTATE/objects/kroutine/kapatterncolor/pixmaps/pattern02.xpm'
%   3: 'pixmap:$ANNOTATE/objects/kroutine/kapatterncolor/pixmaps/pattern03.xpm'
%   4: 'pixmap:$ANNOTATE/objects/kroutine/kapatterncolor/pixmaps/pattern04.xpm'
%   5: 'pixmap:$ANNOTATE/objects/kroutine/kapatterncolor/pixmaps/pattern05.xpm'
%   6: 'pixmap:$ANNOTATE/objects/kroutine/kapatterncolor/pixmaps/pattern06.xpm'
%   7: 'pixmap:$ANNOTATE/objects/kroutine/kapatterncolor/pixmaps/pattern07.xpm'
%   8: 'pixmap:$ANNOTATE/objects/kroutine/kapatterncolor/pixmaps/pattern08.xpm'
%   9: 'pixmap:$ANNOTATE/objects/kroutine/kapatterncolor/pixmaps/pattern09.xpm'
%   10: 'pixmap:$ANNOTATE/objects/kroutine/kapatterncolor/pixmaps/pattern10.xpm'
%   11: 'pixmap:$ANNOTATE/objects/kroutine/kapatterncolor/pixmaps/pattern11.xpm'
%   12: 'pixmap:$ANNOTATE/objects/kroutine/kapatterncolor/pixmaps/pattern12.xpm'
%   13: 'pixmap:$ANNOTATE/objects/kroutine/kapatterncolor/pixmaps/pattern13.xpm'
%   14: 'pixmap:$ANNOTATE/objects/kroutine/kapatterncolor/pixmaps/pattern14.xpm'
%   15: 'pixmap:$ANNOTATE/objects/kroutine/kapatterncolor/pixmaps/pattern15.xpm'
%   16: 'pixmap:$ANNOTATE/objects/kroutine/kapatterncolor/pixmaps/pattern16.xpm'
%   17: 'pixmap:$ANNOTATE/objects/kroutine/kapatterncolor/pixmaps/pattern17.xpm'
%   18: 'pixmap:$ANNOTATE/objects/kroutine/kapatterncolor/pixmaps/pattern18.xpm'
%   19: 'pixmap:$ANNOTATE/objects/kroutine/kapatterncolor/pixmaps/pattern19.xpm'
%   20: 'pixmap:$ANNOTATE/objects/kroutine/kapatterncolor/pixmaps/pattern20.xpm'
%   21: 'pixmap:$ANNOTATE/objects/kroutine/kapatterncolor/pixmaps/pattern21.xpm'
%   22: 'pixmap:$ANNOTATE/objects/kroutine/kapatterncolor/pixmaps/pattern22.xpm'
%   23: 'pixmap:$ANNOTATE/objects/kroutine/kapatterncolor/pixmaps/pattern23.xpm'
%   24: 'pixmap:$ANNOTATE/objects/kroutine/kapatterncolor/pixmaps/pattern24.xpm'
%   25: 'pixmap:$ANNOTATE/objects/kroutine/kapatterncolor/pixmaps/pattern25.xpm'
%   26: 'pixmap:$ANNOTATE/objects/kroutine/kapatterncolor/pixmaps/pattern26.xpm'
%   27: 'pixmap:$ANNOTATE/objects/kroutine/kapatterncolor/pixmaps/pattern27.xpm'
%   28: 'pixmap:$ANNOTATE/objects/kroutine/kapatterncolor/pixmaps/pattern28.xpm'
%   29: 'pixmap:$ANNOTATE/objects/kroutine/kapatterncolor/pixmaps/pattern29.xpm'
%   30: 'pixmap:$ANNOTATE/objects/kroutine/kapatterncolor/pixmaps/pattern30.xpm'
%   31: 'pixmap:$ANNOTATE/objects/kroutine/kapatterncolor/pixmaps/pattern31.xpm'
%   32: 'pixmap:$ANNOTATE/objects/kroutine/kapatterncolor/pixmaps/pattern32.xpm'
%   33: 'pixmap:$ANNOTATE/objects/kroutine/kapatterncolor/pixmaps/pattern33.xpm'
%   34: 'pixmap:$ANNOTATE/objects/kroutine/kapatterncolor/pixmaps/pattern34.xpm'
%   35: 'pixmap:$ANNOTATE/objects/kroutine/kapatterncolor/pixmaps/pattern35.xpm'
%   36: 'pixmap:$ANNOTATE/objects/kroutine/kapatterncolor/pixmaps/pattern36.xpm'
%   37: 'pixmap:$ANNOTATE/objects/kroutine/kapatterncolor/pixmaps/pattern37.xpm'
%   38: 'pixmap:$ANNOTATE/objects/kroutine/kapatterncolor/pixmaps/pattern38.xpm'
%   39: 'pixmap:$ANNOTATE/objects/kroutine/kapatterncolor/pixmaps/pattern39.xpm'
%   40: 'pixmap:$ANNOTATE/objects/kroutine/kapatterncolor/pixmaps/pattern40.xpm'
% OutputFile: o 'Output', required: 'Resulting output data object'
%
% Example: o = kkapatterncolor(i, {'i','';'pattern',1;'o',''})
%
% Khoros helpfile follows below:
%
%  PROGRAM
% kapatterncolor - Substitute pixel with a certain color by a bilevel pattern
%
%  DESCRIPTION
% This kroutine will scan the object specified with the [-i] parameters for pixels in a specific color (specified with the [-color] parameter) and substitute these pixels with a simple binary pattern (specified with the [-pattern] parameter). The pattern can have foreground and background colors (specified with the [-fore] and [-back] parameters) different from black and white, for special effects.
% Original mask, if existing, will be preserved and pixels which are masked won't be touched. The routine will scan all depth and time planes for the substitution.
%
%  
%
%  EXAMPLES
% All examples for the Annotate toolbox are listed on the $ANNOTATE/manual/index.html on-line manual.
%
%  "SEE ALSO"
% kman page for ka_color_decodecolor and on-line manual for information on the color specification schemes.
%
%  RESTRICTIONS 
%
%  REFERENCES 
% All references for the Annotate toolbox are listed on the $ANNOTATE/manual/index.html on-line manual.
%
%  COPYRIGHT
% Annotate Toolbox v1.0 Copyright (C) 1997, Rafael Santos.
% 


function varargout = kkapatterncolor(varargin)
if nargin ==0
  Inputs={};arglist={'',''};
elseif nargin ==1
  Inputs=varargin{1};arglist={'',''};
elseif nargin ==2
  Inputs=varargin{1}; arglist=varargin{2};
else error('Usage: [out1,..] = kkapatterncolor(Inputs,arglist).');
end
if size(arglist,2)~=2
  error('arglist must be of form {''ParameterTag1'',value1;''ParameterTag2'',value2}')
 end
narglist={'i', '__input';'pattern', 1;'o', '__output'};
maxval={0,0,0};
minval={0,0,0};
istoggle=[0,0,0];
was_set=istoggle * 0;
paramtype={'InputFile','MultiChoice','OutputFile'};
% identify the input arrays and assign them to the arguments as stated by the user
if ~iscell(Inputs)
Inputs = {Inputs};
end
NumReqOutputs=1; nextinput=1; nextoutput=1;
  for ii=1:size(arglist,1)
  wasmatched=0;
  for jj=1:size(narglist,1)
   if strcmp(arglist{ii,1},narglist{jj,1})  % a given argument was matched to the possible arguments
     wasmatched = 1;
     was_set(jj) = 1;
     if strcmp(narglist{jj,2}, '__input')
      if (nextinput > length(Inputs)) 
        error(['Input ' narglist{jj,1} ' has no corresponding input!']); 
      end
      narglist{jj,2} = 'OK_in';
      nextinput = nextinput + 1;
     elseif strcmp(narglist{jj,2}, '__output')
      if (nextoutput > nargout) 
        error(['Output nr. ' narglist{jj,1} ' is not present in the assignment list of outputs !']); 
      end
      if (isempty(arglist{ii,2}))
        narglist{jj,2} = 'OK_out';
      else
        narglist{jj,2} = arglist{ii,2};
      end

      nextoutput = nextoutput + 1;
      if (minval{jj} == 0)  
         NumReqOutputs = NumReqOutputs - 1;
      end
     elseif isstr(arglist{ii,2})
      narglist{jj,2} = arglist{ii,2};
     else
        if strcmp(paramtype{jj}, 'Integer') & (round(arglist{ii,2}) ~= arglist{ii,2})
            error(['Argument ' arglist{ii,1} ' is of integer type but non-integer number ' arglist{ii,2} ' was supplied']);
        end
        if (minval{jj} ~= 0 | maxval{jj} ~= 0)
          if (minval{jj} == 1 & maxval{jj} == 1 & arglist{ii,2} < 0)
            error(['Argument ' arglist{ii,1} ' must be bigger or equal to zero!']);
          elseif (minval{jj} == -1 & maxval{jj} == -1 & arglist{ii,2} > 0)
            error(['Argument ' arglist{ii,1} ' must be smaller or equal to zero!']);
          elseif (minval{jj} == 2 & maxval{jj} == 2 & arglist{ii,2} <= 0)
            error(['Argument ' arglist{ii,1} ' must be bigger than zero!']);
          elseif (minval{jj} == -2 & maxval{jj} == -2 & arglist{ii,2} >= 0)
            error(['Argument ' arglist{ii,1} ' must be smaller than zero!']);
          elseif (minval{jj} ~= maxval{jj} & arglist{ii,2} < minval{jj})
            error(['Argument ' arglist{ii,1} ' must be bigger than ' num2str(minval{jj})]);
          elseif (minval{jj} ~= maxval{jj} & arglist{ii,2} > maxval{jj})
            error(['Argument ' arglist{ii,1} ' must be smaller than ' num2str(maxval{jj})]);
          end
        end
     end
     if ~strcmp(narglist{jj,2},'OK_out') &  ~strcmp(narglist{jj,2},'OK_in') 
       narglist{jj,2} = arglist{ii,2};
     end
   end
   end
   if (wasmatched == 0 & ~strcmp(arglist{ii,1},''))
        error(['Argument ' arglist{ii,1} ' is not a valid argument for this function']);
   end
end
% match the remaining inputs/outputs to the unused arguments and test for missing required inputs
 for jj=1:size(narglist,1)
     if  strcmp(paramtype{jj}, 'Toggle')
        if (narglist{jj,2} ==0)
          narglist{jj,1} = ''; 
        end;
        narglist{jj,2} = ''; 
     end;
     if  ~strcmp(narglist{jj,2},'__input') && ~strcmp(narglist{jj,2},'__output') && istoggle(jj) && ~ was_set(jj)
          narglist{jj,1} = ''; 
          narglist{jj,2} = ''; 
     end;
     if strcmp(narglist{jj,2}, '__input')
      if (minval{jj} == 0)  % meaning this input is required
        if (nextinput > size(Inputs)) 
           error(['Required input ' narglist{jj,1} ' has no corresponding input in the list!']); 
        else
          narglist{jj,2} = 'OK_in';
          nextinput = nextinput + 1;
        end
      else  % this is an optional input
        if (nextinput <= length(Inputs)) 
          narglist{jj,2} = 'OK_in';
          nextinput = nextinput + 1;
        else 
          narglist{jj,1} = '';
          narglist{jj,2} = '';
        end;
      end;
     else 
     if strcmp(narglist{jj,2}, '__output')
      if (minval{jj} == 0) % this is a required output
        if (nextoutput > nargout & nargout > 1) 
           error(['Required output ' narglist{jj,1} ' is not stated in the assignment list!']); 
        else
          narglist{jj,2} = 'OK_out';
          nextoutput = nextoutput + 1;
          NumReqOutputs = NumReqOutputs-1;
        end
      else % this is an optional output
        if (nargout - nextoutput >= NumReqOutputs) 
          narglist{jj,2} = 'OK_out';
          nextoutput = nextoutput + 1;
        else 
          narglist{jj,1} = '';
          narglist{jj,2} = '';
        end;
      end
     end
  end
end
if nargout
   varargout = cell(1,nargout);
else
  varargout = cell(1,1);
end
global KhorosRoot
if exist('KhorosRoot') && ~isempty(KhorosRoot)
w=['"' KhorosRoot];
else
if ispc
  w='"C:\Program Files\dip\khorosBin\';
else
[s,w] = system('which cantata');
w=['"' w(1:end-8)];
end
end
[varargout{:}]=callKhoros([w 'kapatterncolor"  '],Inputs,narglist);
