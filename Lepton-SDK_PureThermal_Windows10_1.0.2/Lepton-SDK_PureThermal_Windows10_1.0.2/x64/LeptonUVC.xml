<?xml version="1.0"?>
<doc>
    <assembly>
        "LeptonUVC"
    </assembly>
    <members>
        <member name="M:LEP_CalcVidBoresightAlignment(LEP_VID_BORESIGHT_COORDINATES_T_TAG,LEP_VID_TARGET_POSITION_T_TAG*)">
PRIVATE MODULE FUNCTIONS                                                 *
</member>
        <member name="M:Lepton.CCI.Vid.SetVideoOutputFormatChecked(Lepton.CCI.Vid.VideoOutputFormat)">
            <summary>VID Video Output Format<para>This function provides the method to specify or retrieve the current video output format. In the current revision, only RGB888 and RAW14 are valid formats.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_VID_VIDEO_OUTPUT_FORMAT_RAW8</term>
                        <term>LEP_VID_VIDEO_OUTPUT_FORMAT_RAW8_6</term>
                        <term>LEP_VID_VIDEO_OUTPUT_FORMAT_RAW14</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> VID <strong>0x0300</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x30</strong></para>
                <para>With Set <strong>0x31</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.0, 3.5</term>
                        <term>
                            <strong>LEP_GetVidVideoOutputFormat()</strong>
                        </term>
                        <term>Updates <strong>vidVideoOutputFormatPtr</strong> with the Camera’s current video ouput format</term>
                    </item>
                    <item>
                        <term>Lepton 2.5, 3.0, 3.5</term>
                        <term>
                            <strong>LEP_SetVidVideoOutputFormat()</strong>
                        </term>
                        <term>Updates the Camera’s Camera’s current video ouput format with the contents of <strong>vidVideoOutputFormat</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetVidVideoOutputFormat( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_VID_VIDEO_OUTPUT_FORMAT_E_PTR vidVideoOutputFormatPtr )
LEP_RESULT LEP_SetVidVideoOutputFormat( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_VID_VIDEO_OUTPUT_FORMAT_E vidVideoOutputFormat )
/* Video Output Format
*/
typedef struct LEP_VID_VIDEO_OUTPUT_FORMAT_TAG
{
LEP_VID_VIDEO_OUTPUT_FORMAT_RAW8 = 0, // To be supported in later release
LEP_VID_VIDEO_OUTPUT_FORMAT_RAW10, // To be supported in later release
LEP_VID_VIDEO_OUTPUT_FORMAT_RAW12, // To be supported in later release
LEP_VID_VIDEO_OUTPUT_FORMAT_RGB888, // To be supported in later release
LEP_VID_VIDEO_OUTPUT_FORMAT_RGB666, // To be supported in later release
LEP_VID_VIDEO_OUTPUT_FORMAT_RGB565, // To be supported in later release
LEP_VID_VIDEO_OUTPUT_FORMAT_YUV422_8BIT, // To be supported in later release
LEP_VID_VIDEO_OUTPUT_FORMAT_RAW14, // SUPPORTED in this release
LEP_VID_VIDEO_OUTPUT_FORMAT_YUV422_10BIT, // To be supported in later release
LEP_VID_VIDEO_OUTPUT_FORMAT_USER_DEFINED, // To be supported in later release
LEP_VID_VIDEO_OUTPUT_FORMAT_RAW8_2, // To be supported in later release
LEP_VID_VIDEO_OUTPUT_FORMAT_RAW8_3, // To be supported in later release
LEP_VID_VIDEO_OUTPUT_FORMAT_RAW8_4, // To be supported in later release
LEP_VID_VIDEO_OUTPUT_FORMAT_RAW8_5, // To be supported in later release
LEP_VID_VIDEO_OUTPUT_FORMAT_RAW8_6, // To be supported in later release
LEP_END_VID_VIDEO_OUTPUT_FORMAT
}LEP_VID_VIDEO_OUTPUT_FORMAT_E, *LEP_VID_VIDEO_OUTPUT_FORMAT_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Vid.SetVideoOutputFormat(Lepton.CCI.Vid.VideoOutputFormat)">
            <summary>VID Video Output Format<para>This function provides the method to specify or retrieve the current video output format. In the current revision, only RGB888 and RAW14 are valid formats.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_VID_VIDEO_OUTPUT_FORMAT_RAW8</term>
                        <term>LEP_VID_VIDEO_OUTPUT_FORMAT_RAW8_6</term>
                        <term>LEP_VID_VIDEO_OUTPUT_FORMAT_RAW14</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> VID <strong>0x0300</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x30</strong></para>
                <para>With Set <strong>0x31</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.0, 3.5</term>
                        <term>
                            <strong>LEP_GetVidVideoOutputFormat()</strong>
                        </term>
                        <term>Updates <strong>vidVideoOutputFormatPtr</strong> with the Camera’s current video ouput format</term>
                    </item>
                    <item>
                        <term>Lepton 2.5, 3.0, 3.5</term>
                        <term>
                            <strong>LEP_SetVidVideoOutputFormat()</strong>
                        </term>
                        <term>Updates the Camera’s Camera’s current video ouput format with the contents of <strong>vidVideoOutputFormat</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetVidVideoOutputFormat( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_VID_VIDEO_OUTPUT_FORMAT_E_PTR vidVideoOutputFormatPtr )
LEP_RESULT LEP_SetVidVideoOutputFormat( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_VID_VIDEO_OUTPUT_FORMAT_E vidVideoOutputFormat )
/* Video Output Format
*/
typedef struct LEP_VID_VIDEO_OUTPUT_FORMAT_TAG
{
LEP_VID_VIDEO_OUTPUT_FORMAT_RAW8 = 0, // To be supported in later release
LEP_VID_VIDEO_OUTPUT_FORMAT_RAW10, // To be supported in later release
LEP_VID_VIDEO_OUTPUT_FORMAT_RAW12, // To be supported in later release
LEP_VID_VIDEO_OUTPUT_FORMAT_RGB888, // To be supported in later release
LEP_VID_VIDEO_OUTPUT_FORMAT_RGB666, // To be supported in later release
LEP_VID_VIDEO_OUTPUT_FORMAT_RGB565, // To be supported in later release
LEP_VID_VIDEO_OUTPUT_FORMAT_YUV422_8BIT, // To be supported in later release
LEP_VID_VIDEO_OUTPUT_FORMAT_RAW14, // SUPPORTED in this release
LEP_VID_VIDEO_OUTPUT_FORMAT_YUV422_10BIT, // To be supported in later release
LEP_VID_VIDEO_OUTPUT_FORMAT_USER_DEFINED, // To be supported in later release
LEP_VID_VIDEO_OUTPUT_FORMAT_RAW8_2, // To be supported in later release
LEP_VID_VIDEO_OUTPUT_FORMAT_RAW8_3, // To be supported in later release
LEP_VID_VIDEO_OUTPUT_FORMAT_RAW8_4, // To be supported in later release
LEP_VID_VIDEO_OUTPUT_FORMAT_RAW8_5, // To be supported in later release
LEP_VID_VIDEO_OUTPUT_FORMAT_RAW8_6, // To be supported in later release
LEP_END_VID_VIDEO_OUTPUT_FORMAT
}LEP_VID_VIDEO_OUTPUT_FORMAT_E, *LEP_VID_VIDEO_OUTPUT_FORMAT_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Vid.SetFreezeEnableStateChecked(Lepton.CCI.Vid.FreezeEnable)">
            <summary>VID Video Freeze Enable State<para>This function allows the current frame to be repeated in lieu of a live video stream. When enabled, live video is halted from the camera. When disabled, live video resumes.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_VID_FREEZE_DISABLE</term>
                        <term>LEP_VID_FREEZE_ENABLE</term>
                        <term>LEP_VID_FREEZE_DISABLE</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> VID <strong>0x0300</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x24</strong></para>
                <para>With Set <strong>0x25</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetVidFreezeEnableState()</strong>
                        </term>
                        <term>Updates <strong>vidFreezeEnableStatePtr</strong> with the Camera’s current Video Freeze enable state</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetVidFreezeEnableState()</strong>
                        </term>
                        <term>Updates the Camera’s current Video Freeze enable state with the contents of <strong>vidFreezeEnableState</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetVidFreezeEnableState(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_VID_FREEZE_ENABLE_E_PTR vidFreezeEnableStatePtr)
LEP_RESULT LEP_SetVidFreezeEnableState(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_VID_FREEZE_ENABLE_E vidFreezeEnableState)
/* Video Freeze Output Enable Enum
*/
typedef enum LEP_VID_FREEZE_ENABLE_TAG
{
LEP_VID_FREEZE_DISABLE = 0,
LEP_VID_FREEZE_ENABLE,
LEP_VID_END_FREEZE_ENABLE
}LEP_VID_FREEZE_ENABLE_E, *LEP_VID_FREEZE_ENABLE_E_PTR ;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Vid.SetFreezeEnableState(Lepton.CCI.Vid.FreezeEnable)">
            <summary>VID Video Freeze Enable State<para>This function allows the current frame to be repeated in lieu of a live video stream. When enabled, live video is halted from the camera. When disabled, live video resumes.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_VID_FREEZE_DISABLE</term>
                        <term>LEP_VID_FREEZE_ENABLE</term>
                        <term>LEP_VID_FREEZE_DISABLE</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> VID <strong>0x0300</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x24</strong></para>
                <para>With Set <strong>0x25</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetVidFreezeEnableState()</strong>
                        </term>
                        <term>Updates <strong>vidFreezeEnableStatePtr</strong> with the Camera’s current Video Freeze enable state</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetVidFreezeEnableState()</strong>
                        </term>
                        <term>Updates the Camera’s current Video Freeze enable state with the contents of <strong>vidFreezeEnableState</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetVidFreezeEnableState(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_VID_FREEZE_ENABLE_E_PTR vidFreezeEnableStatePtr)
LEP_RESULT LEP_SetVidFreezeEnableState(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_VID_FREEZE_ENABLE_E vidFreezeEnableState)
/* Video Freeze Output Enable Enum
*/
typedef enum LEP_VID_FREEZE_ENABLE_TAG
{
LEP_VID_FREEZE_DISABLE = 0,
LEP_VID_FREEZE_ENABLE,
LEP_VID_END_FREEZE_ENABLE
}LEP_VID_FREEZE_ENABLE_E, *LEP_VID_FREEZE_ENABLE_E_PTR ;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Vid.SetFocusMetricThresholdChecked(System.UInt32)">
            <summary>VID Focus Metric Threshold<para>This function specifies the focus metric threshold. The focus metric evaluates image gradients and counts the number of gradient magnitudes that exceed the focus metric threshold. Therefore, larger values of the threshold imply the focus metric is counting gradients with larger magnitudes in effect filtering out small gradients in the image (pixel noise, for example). The Focus Metric uses the Tenengrad method which is an edge-based metric that measures the sum of the horizontal and vertical gradients using Sobel operators. The Focus Metric Threshold is applied to the sum of gradients. Gradients that exceed this threshold are then summed and counted and the Focus metric is computed from these.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>0</term>
                        <term>4294967295</term>
                        <term>30</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> VID <strong>0x0300</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x14</strong></para>
                <para>With Set <strong>0x15</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size of <strong>LEP_VID_FOCUS_METRIC_THRESHOLD_T</strong> data type</para>
                <para>Set <strong>2</strong> size of <strong>LEP_VID_FOCUS_METRIC_THRESHOLD_T</strong> data type</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetVidFocusMetricThreshold()</strong>
                        </term>
                        <term>Updates <strong>vidFocusMetricThresholdPtr</strong> with the Camera’s current video focus metric threshold.</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetVidFocusMetricThreshold()</strong>
                        </term>
                        <term>Updates the Camera’s current video focus metric threshold with the contents of <strong>vidFocusMetricThreshold</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetVidFocusMetricThreshold(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_VID_FOCUS_METRIC_THRESHOLD_T_PTR vidFocusMetricThresholdPtr)
LEP_RESULT LEP_SetVidFocusMetricThreshold(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_VID_FOCUS_METRIC_THRESHOLD_T vidFocusMetricThreshold)
typedef LEP_UINT32 LEP_VID_FOCUS_METRIC_THRESHOLD_T, *LEP_VID_FOCUS_METRIC_THRESHOLD_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Vid.SetFocusMetricThreshold(System.UInt32)">
            <summary>VID Focus Metric Threshold<para>This function specifies the focus metric threshold. The focus metric evaluates image gradients and counts the number of gradient magnitudes that exceed the focus metric threshold. Therefore, larger values of the threshold imply the focus metric is counting gradients with larger magnitudes in effect filtering out small gradients in the image (pixel noise, for example). The Focus Metric uses the Tenengrad method which is an edge-based metric that measures the sum of the horizontal and vertical gradients using Sobel operators. The Focus Metric Threshold is applied to the sum of gradients. Gradients that exceed this threshold are then summed and counted and the Focus metric is computed from these.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>0</term>
                        <term>4294967295</term>
                        <term>30</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> VID <strong>0x0300</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x14</strong></para>
                <para>With Set <strong>0x15</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size of <strong>LEP_VID_FOCUS_METRIC_THRESHOLD_T</strong> data type</para>
                <para>Set <strong>2</strong> size of <strong>LEP_VID_FOCUS_METRIC_THRESHOLD_T</strong> data type</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetVidFocusMetricThreshold()</strong>
                        </term>
                        <term>Updates <strong>vidFocusMetricThresholdPtr</strong> with the Camera’s current video focus metric threshold.</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetVidFocusMetricThreshold()</strong>
                        </term>
                        <term>Updates the Camera’s current video focus metric threshold with the contents of <strong>vidFocusMetricThreshold</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetVidFocusMetricThreshold(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_VID_FOCUS_METRIC_THRESHOLD_T_PTR vidFocusMetricThresholdPtr)
LEP_RESULT LEP_SetVidFocusMetricThreshold(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_VID_FOCUS_METRIC_THRESHOLD_T vidFocusMetricThreshold)
typedef LEP_UINT32 LEP_VID_FOCUS_METRIC_THRESHOLD_T, *LEP_VID_FOCUS_METRIC_THRESHOLD_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Vid.SetFocusCalcEnableStateChecked(Lepton.CCI.Vid.FocusCalcEnable)">
            <summary>VID Focus Calculation Enable State<para>The camera can calculate a video scene focus metric (also useful as a metric of contrast). This function specifies whether or not the camera is to make these calculations on the input video. When enabled, the camera will calculate the video scene focus metric on each frame processed and make the result available in the focus metric. See section 4.5.6. When disabled, the camera does not execute the focus metric calculation.</para><para>Note that AGC (See 4.4.1) must be disabled when the focus metric is enabled.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_VID_FOCUS_CALC_DISABLE</term>
                        <term>LEP_VID_FOCUS_CALC_ENABLE</term>
                        <term>LEP_VID_FOCUS_CALC_DISABLE</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> VID <strong>0x0300</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x0C</strong></para>
                <para>With Set <strong>0x0D</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetVidFocusCalcEnableState()</strong>
                        </term>
                        <term>Updates <strong>vidEnableFocusCalcStatePtr</strong> with the Camera’s current video focus calculation enable state.</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetVidFocusCalcEnableState()</strong>
                        </term>
                        <term>Updates the Camera’s current video focus calculation enable state with the contents of <strong>vidFocusCalcEnableState</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetVidFocusCalcEnableState(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
vidEnableFocusCalcStatePtr)
LEP_RESULT LEP_SetVidFocusCalcEnableState(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
vidFocusCalcEnableState)
/* Video Focus Metric Calculation Enable Enum
*/
typedef enum LEP_VID_ENABLE_TAG
{
LEP_VID_FOCUS_CALC_DISABLE=0,
LEP_VID_FOCUS_CALC_ENABLE,
LEP_VID_END_FOCUS_CALC_ENABLE
}LEP_VID_FOCUS_CALC_ENABLE_E, *LEP_VID_FOCUS_CALC_ENABLE_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Vid.SetFocusCalcEnableState(Lepton.CCI.Vid.FocusCalcEnable)">
            <summary>VID Focus Calculation Enable State<para>The camera can calculate a video scene focus metric (also useful as a metric of contrast). This function specifies whether or not the camera is to make these calculations on the input video. When enabled, the camera will calculate the video scene focus metric on each frame processed and make the result available in the focus metric. See section 4.5.6. When disabled, the camera does not execute the focus metric calculation.</para><para>Note that AGC (See 4.4.1) must be disabled when the focus metric is enabled.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_VID_FOCUS_CALC_DISABLE</term>
                        <term>LEP_VID_FOCUS_CALC_ENABLE</term>
                        <term>LEP_VID_FOCUS_CALC_DISABLE</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> VID <strong>0x0300</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x0C</strong></para>
                <para>With Set <strong>0x0D</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetVidFocusCalcEnableState()</strong>
                        </term>
                        <term>Updates <strong>vidEnableFocusCalcStatePtr</strong> with the Camera’s current video focus calculation enable state.</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetVidFocusCalcEnableState()</strong>
                        </term>
                        <term>Updates the Camera’s current video focus calculation enable state with the contents of <strong>vidFocusCalcEnableState</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetVidFocusCalcEnableState(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
vidEnableFocusCalcStatePtr)
LEP_RESULT LEP_SetVidFocusCalcEnableState(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
vidFocusCalcEnableState)
/* Video Focus Metric Calculation Enable Enum
*/
typedef enum LEP_VID_ENABLE_TAG
{
LEP_VID_FOCUS_CALC_DISABLE=0,
LEP_VID_FOCUS_CALC_ENABLE,
LEP_VID_END_FOCUS_CALC_ENABLE
}LEP_VID_FOCUS_CALC_ENABLE_E, *LEP_VID_FOCUS_CALC_ENABLE_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Vid.SetUserLutChecked(Lepton.CCI.Vid.LutBuffer)">
            <summary>VID User Pseudo-Color Look-Up Table Upload/Download<para>This function allows uploading (SET to the camera), and downloading (GET from the camera) a user-defined video output pseudo-color LUT. This LUT applies to the video processed by camera post AGC application before output. Does not apply to raw video output. The format of the pseudo-color LUT is 256 x 32-bits.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Parameter</strong>
                        </term>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>reserved</term>
                        <term>0</term>
                        <term>0</term>
                        <term>N/A</term>
                        <term>N/A</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>red</term>
                        <term>0</term>
                        <term>255</term>
                        <term>N/A</term>
                        <term>N/A</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>green</term>
                        <term>0</term>
                        <term>255</term>
                        <term>N/A</term>
                        <term>N/A</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>blue</term>
                        <term>0</term>
                        <term>255</term>
                        <term>N/A</term>
                        <term>N/A</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> VID <strong>0x0300</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x08</strong></para>
                <para>With Set <strong>0x09</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>512</strong> size of <strong>LEP_VID_LUT_BUFFER_T</strong> data type</para>
                <para>Set <strong>512</strong> size of <strong>LEP_VID_LUT_BUFFER_T</strong> data type</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetVidUserLut()</strong>
                        </term>
                        <term>Updates <strong>vidUserLutBufPtr</strong> with the Camera’s current user-defined video pseudo-color LUT data. Length of the LUT is 1024 bytes supporting a 256 x 32-bit LUT format and passed as value in <strong>vidUserLutBufLen.</strong></term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetVidUserLut()</strong>
                        </term>
                        <term>Updates the Camera’s current user-defined video pseudo-color LUT data with the contents of <strong>vidUserLutBufPtr</strong>. Length of the LUT is 1024 bytes supporting 256 x 32-bit LUT format and passed as value in <strong>vidUserLutBufLen.</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetVidUserLut(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_UINT8 *vidUserLutBufPtr, LEP_UINT16 vidUserLutBufLen)
LEP_RESULT LEP_SetVidUserLut(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_UINT8 *vidUserLutBufPtr, LEP_UINT16 vidUserLutBufLen)
/* User-Defined color look-up table (LUT)
*/
typedef struct LEP_VID_LUT_PIXEL_T_TAG
{
LEP_UINT8 reserved;
LEP_UINT8 red;
LEP_UINT8 green;
LEP_UINT8 blue;
} LEP_VID_LUT_PIXEL_T, *LEP_VID_LUT_PIXEL_T_PTR;
typedef struct LEP_VID_LUT_BUFFER_T_TAG
{
LEP_VID_LUT_PIXEL_T bin[256];
} LEP_VID_LUT_BUFFER_T, *LEP_VID_LUT_BUFFER_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Vid.SetUserLut(Lepton.CCI.Vid.LutBuffer)">
            <summary>VID User Pseudo-Color Look-Up Table Upload/Download<para>This function allows uploading (SET to the camera), and downloading (GET from the camera) a user-defined video output pseudo-color LUT. This LUT applies to the video processed by camera post AGC application before output. Does not apply to raw video output. The format of the pseudo-color LUT is 256 x 32-bits.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Parameter</strong>
                        </term>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>reserved</term>
                        <term>0</term>
                        <term>0</term>
                        <term>N/A</term>
                        <term>N/A</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>red</term>
                        <term>0</term>
                        <term>255</term>
                        <term>N/A</term>
                        <term>N/A</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>green</term>
                        <term>0</term>
                        <term>255</term>
                        <term>N/A</term>
                        <term>N/A</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>blue</term>
                        <term>0</term>
                        <term>255</term>
                        <term>N/A</term>
                        <term>N/A</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> VID <strong>0x0300</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x08</strong></para>
                <para>With Set <strong>0x09</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>512</strong> size of <strong>LEP_VID_LUT_BUFFER_T</strong> data type</para>
                <para>Set <strong>512</strong> size of <strong>LEP_VID_LUT_BUFFER_T</strong> data type</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetVidUserLut()</strong>
                        </term>
                        <term>Updates <strong>vidUserLutBufPtr</strong> with the Camera’s current user-defined video pseudo-color LUT data. Length of the LUT is 1024 bytes supporting a 256 x 32-bit LUT format and passed as value in <strong>vidUserLutBufLen.</strong></term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetVidUserLut()</strong>
                        </term>
                        <term>Updates the Camera’s current user-defined video pseudo-color LUT data with the contents of <strong>vidUserLutBufPtr</strong>. Length of the LUT is 1024 bytes supporting 256 x 32-bit LUT format and passed as value in <strong>vidUserLutBufLen.</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetVidUserLut(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_UINT8 *vidUserLutBufPtr, LEP_UINT16 vidUserLutBufLen)
LEP_RESULT LEP_SetVidUserLut(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_UINT8 *vidUserLutBufPtr, LEP_UINT16 vidUserLutBufLen)
/* User-Defined color look-up table (LUT)
*/
typedef struct LEP_VID_LUT_PIXEL_T_TAG
{
LEP_UINT8 reserved;
LEP_UINT8 red;
LEP_UINT8 green;
LEP_UINT8 blue;
} LEP_VID_LUT_PIXEL_T, *LEP_VID_LUT_PIXEL_T_PTR;
typedef struct LEP_VID_LUT_BUFFER_T_TAG
{
LEP_VID_LUT_PIXEL_T bin[256];
} LEP_VID_LUT_BUFFER_T, *LEP_VID_LUT_BUFFER_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Vid.SetLowGainPcolorLutChecked(Lepton.CCI.Vid.PcolorLut)">
            <summary>VID Low Gain Pseudo-Color Look-Up Table Select<para>This function allows selection of the video output pseudo-color LUT to be used when the camera is in Low Gain Mode. This LUT applies to the video processed by camera post AGC application before output. Color LUTs do not apply to raw video output of any format. Requires using the video output format of 24-bit R, G, B (See 4.6.7), AGC enabled and scaled to 8-bit output (See 4.4.1).</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <strong>LEP_VID_GREYSCALE_LUT</strong>
                        </term>
                        <term>
                            <strong>LEP_VID_USER_LUT</strong>
                        </term>
                        <term>
                            <strong>LEP_VID_GREYSCALE_LUT</strong>
                        </term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> VID <strong>0x0300</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x34</strong></para>
                <para>With Set <strong>0x35</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_GetVidLowGainPcolorLut()</strong>
                        </term>
                        <term>Updates <strong>vidPcolorLutPtr</strong> with the Camera’s current video pseudo-color LUT selection.</term>
                    </item>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_SetLowGainVidPcolorLut()</strong>
                        </term>
                        <term>Sets Camera’s current video pseudo-color LUT selection to <strong>vidPcolorLut</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetVidLowGainPcolorLut(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_PCOLOR_LUT_E_PTR vidPcolorLutPtr)
LEP_RESULT LEP_SetVidLowGainPcolorLut(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_PCOLOR_LUT_E vidPcolorLut)
/* Video Pseudo-Color LUT Enum
*/
typedef enum LEP_PCOLOR_LUT_E_TAG
{
LEP_VID_WHEEL6_LUT=0,
LEP_VID_FUSION_LUT,
LEP_VID_RAINBOW_LUT,
LEP_VID_GLOBOW_LUT,
LEP_VID_SEPIA_LUT,
LEP_VID_COLOR_LUT,
LEP_VID_ICE_FIRE_LUT,
LEP_VID_RAIN_LUT,
LEP_VID_USER_LUT,
LEP_VID_END_PCOLOR_LUT
}LEP_PCOLOR_LUT_E, *LEP_PCOLOR_LUT_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Vid.SetLowGainPcolorLut(Lepton.CCI.Vid.PcolorLut)">
            <summary>VID Low Gain Pseudo-Color Look-Up Table Select<para>This function allows selection of the video output pseudo-color LUT to be used when the camera is in Low Gain Mode. This LUT applies to the video processed by camera post AGC application before output. Color LUTs do not apply to raw video output of any format. Requires using the video output format of 24-bit R, G, B (See 4.6.7), AGC enabled and scaled to 8-bit output (See 4.4.1).</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <strong>LEP_VID_GREYSCALE_LUT</strong>
                        </term>
                        <term>
                            <strong>LEP_VID_USER_LUT</strong>
                        </term>
                        <term>
                            <strong>LEP_VID_GREYSCALE_LUT</strong>
                        </term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> VID <strong>0x0300</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x34</strong></para>
                <para>With Set <strong>0x35</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_GetVidLowGainPcolorLut()</strong>
                        </term>
                        <term>Updates <strong>vidPcolorLutPtr</strong> with the Camera’s current video pseudo-color LUT selection.</term>
                    </item>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_SetLowGainVidPcolorLut()</strong>
                        </term>
                        <term>Sets Camera’s current video pseudo-color LUT selection to <strong>vidPcolorLut</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetVidLowGainPcolorLut(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_PCOLOR_LUT_E_PTR vidPcolorLutPtr)
LEP_RESULT LEP_SetVidLowGainPcolorLut(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_PCOLOR_LUT_E vidPcolorLut)
/* Video Pseudo-Color LUT Enum
*/
typedef enum LEP_PCOLOR_LUT_E_TAG
{
LEP_VID_WHEEL6_LUT=0,
LEP_VID_FUSION_LUT,
LEP_VID_RAINBOW_LUT,
LEP_VID_GLOBOW_LUT,
LEP_VID_SEPIA_LUT,
LEP_VID_COLOR_LUT,
LEP_VID_ICE_FIRE_LUT,
LEP_VID_RAIN_LUT,
LEP_VID_USER_LUT,
LEP_VID_END_PCOLOR_LUT
}LEP_PCOLOR_LUT_E, *LEP_PCOLOR_LUT_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Vid.SetPcolorLutChecked(Lepton.CCI.Vid.PcolorLut)">
            <summary>VID Pseudo-Color Look-Up Table Select<para>This function allows selection of the video output pseudo-color LUT. This LUT applies to the video processed by camera post AGC application before output. Color LUTs do not apply to raw video output of any format. Requires using the video output format of 24-bit R, G, B (See 4.6.7), AGC enabled and scaled to 8-bit output (See 4.4.1).</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <strong>LEP_VID_GREYSCALE_LUT</strong>
                        </term>
                        <term>
                            <strong>LEP_VID_USER_LUT</strong>
                        </term>
                        <term>
                            <strong>LEP_VID_GREYSCALE_LUT</strong>
                        </term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> VID <strong>0x0300</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x04</strong></para>
                <para>With Set <strong>0x05</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetVidPcolorLut()</strong>
                        </term>
                        <term>Updates <strong>vidPcolorLutPtr</strong> with the Camera’s current video pseudo-color LUT selection.</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetVidPcolorLut()</strong>
                        </term>
                        <term>Sets Camera’s current video pseudo-color LUT selection to <strong>vidPcolorLut</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetVidPcolorLut(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_PCOLOR_LUT_E_PTR vidPcolorLutPtr)
LEP_RESULT LEP_SetVidPcolorLut(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_PCOLOR_LUT_E vidPcolorLut)
/* Video Pseudo-Color LUT Enum
*/
typedef enum LEP_PCOLOR_LUT_E_TAG
{
LEP_VID_WHEEL6_LUT=0,
LEP_VID_FUSION_LUT,
LEP_VID_RAINBOW_LUT,
LEP_VID_GLOBOW_LUT,
LEP_VID_SEPIA_LUT,
LEP_VID_COLOR_LUT,
LEP_VID_ICE_FIRE_LUT,
LEP_VID_RAIN_LUT,
LEP_VID_USER_LUT,
LEP_VID_END_PCOLOR_LUT
}LEP_PCOLOR_LUT_E, *LEP_PCOLOR_LUT_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Vid.SetPcolorLut(Lepton.CCI.Vid.PcolorLut)">
            <summary>VID Pseudo-Color Look-Up Table Select<para>This function allows selection of the video output pseudo-color LUT. This LUT applies to the video processed by camera post AGC application before output. Color LUTs do not apply to raw video output of any format. Requires using the video output format of 24-bit R, G, B (See 4.6.7), AGC enabled and scaled to 8-bit output (See 4.4.1).</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <strong>LEP_VID_GREYSCALE_LUT</strong>
                        </term>
                        <term>
                            <strong>LEP_VID_USER_LUT</strong>
                        </term>
                        <term>
                            <strong>LEP_VID_GREYSCALE_LUT</strong>
                        </term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> VID <strong>0x0300</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x04</strong></para>
                <para>With Set <strong>0x05</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetVidPcolorLut()</strong>
                        </term>
                        <term>Updates <strong>vidPcolorLutPtr</strong> with the Camera’s current video pseudo-color LUT selection.</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetVidPcolorLut()</strong>
                        </term>
                        <term>Sets Camera’s current video pseudo-color LUT selection to <strong>vidPcolorLut</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetVidPcolorLut(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_PCOLOR_LUT_E_PTR vidPcolorLutPtr)
LEP_RESULT LEP_SetVidPcolorLut(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_PCOLOR_LUT_E vidPcolorLut)
/* Video Pseudo-Color LUT Enum
*/
typedef enum LEP_PCOLOR_LUT_E_TAG
{
LEP_VID_WHEEL6_LUT=0,
LEP_VID_FUSION_LUT,
LEP_VID_RAINBOW_LUT,
LEP_VID_GLOBOW_LUT,
LEP_VID_SEPIA_LUT,
LEP_VID_COLOR_LUT,
LEP_VID_ICE_FIRE_LUT,
LEP_VID_RAIN_LUT,
LEP_VID_USER_LUT,
LEP_VID_END_PCOLOR_LUT
}LEP_PCOLOR_LUT_E, *LEP_PCOLOR_LUT_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Vid.GetVideoOutputFormatChecked">
            <summary>VID Video Output Format<para>This function provides the method to specify or retrieve the current video output format. In the current revision, only RGB888 and RAW14 are valid formats.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_VID_VIDEO_OUTPUT_FORMAT_RAW8</term>
                        <term>LEP_VID_VIDEO_OUTPUT_FORMAT_RAW8_6</term>
                        <term>LEP_VID_VIDEO_OUTPUT_FORMAT_RAW14</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> VID <strong>0x0300</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x30</strong></para>
                <para>With Set <strong>0x31</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.0, 3.5</term>
                        <term>
                            <strong>LEP_GetVidVideoOutputFormat()</strong>
                        </term>
                        <term>Updates <strong>vidVideoOutputFormatPtr</strong> with the Camera’s current video ouput format</term>
                    </item>
                    <item>
                        <term>Lepton 2.5, 3.0, 3.5</term>
                        <term>
                            <strong>LEP_SetVidVideoOutputFormat()</strong>
                        </term>
                        <term>Updates the Camera’s Camera’s current video ouput format with the contents of <strong>vidVideoOutputFormat</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetVidVideoOutputFormat( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_VID_VIDEO_OUTPUT_FORMAT_E_PTR vidVideoOutputFormatPtr )
LEP_RESULT LEP_SetVidVideoOutputFormat( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_VID_VIDEO_OUTPUT_FORMAT_E vidVideoOutputFormat )
/* Video Output Format
*/
typedef struct LEP_VID_VIDEO_OUTPUT_FORMAT_TAG
{
LEP_VID_VIDEO_OUTPUT_FORMAT_RAW8 = 0, // To be supported in later release
LEP_VID_VIDEO_OUTPUT_FORMAT_RAW10, // To be supported in later release
LEP_VID_VIDEO_OUTPUT_FORMAT_RAW12, // To be supported in later release
LEP_VID_VIDEO_OUTPUT_FORMAT_RGB888, // To be supported in later release
LEP_VID_VIDEO_OUTPUT_FORMAT_RGB666, // To be supported in later release
LEP_VID_VIDEO_OUTPUT_FORMAT_RGB565, // To be supported in later release
LEP_VID_VIDEO_OUTPUT_FORMAT_YUV422_8BIT, // To be supported in later release
LEP_VID_VIDEO_OUTPUT_FORMAT_RAW14, // SUPPORTED in this release
LEP_VID_VIDEO_OUTPUT_FORMAT_YUV422_10BIT, // To be supported in later release
LEP_VID_VIDEO_OUTPUT_FORMAT_USER_DEFINED, // To be supported in later release
LEP_VID_VIDEO_OUTPUT_FORMAT_RAW8_2, // To be supported in later release
LEP_VID_VIDEO_OUTPUT_FORMAT_RAW8_3, // To be supported in later release
LEP_VID_VIDEO_OUTPUT_FORMAT_RAW8_4, // To be supported in later release
LEP_VID_VIDEO_OUTPUT_FORMAT_RAW8_5, // To be supported in later release
LEP_VID_VIDEO_OUTPUT_FORMAT_RAW8_6, // To be supported in later release
LEP_END_VID_VIDEO_OUTPUT_FORMAT
}LEP_VID_VIDEO_OUTPUT_FORMAT_E, *LEP_VID_VIDEO_OUTPUT_FORMAT_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Vid.GetVideoOutputFormat">
            <summary>VID Video Output Format<para>This function provides the method to specify or retrieve the current video output format. In the current revision, only RGB888 and RAW14 are valid formats.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_VID_VIDEO_OUTPUT_FORMAT_RAW8</term>
                        <term>LEP_VID_VIDEO_OUTPUT_FORMAT_RAW8_6</term>
                        <term>LEP_VID_VIDEO_OUTPUT_FORMAT_RAW14</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> VID <strong>0x0300</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x30</strong></para>
                <para>With Set <strong>0x31</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.0, 3.5</term>
                        <term>
                            <strong>LEP_GetVidVideoOutputFormat()</strong>
                        </term>
                        <term>Updates <strong>vidVideoOutputFormatPtr</strong> with the Camera’s current video ouput format</term>
                    </item>
                    <item>
                        <term>Lepton 2.5, 3.0, 3.5</term>
                        <term>
                            <strong>LEP_SetVidVideoOutputFormat()</strong>
                        </term>
                        <term>Updates the Camera’s Camera’s current video ouput format with the contents of <strong>vidVideoOutputFormat</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetVidVideoOutputFormat( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_VID_VIDEO_OUTPUT_FORMAT_E_PTR vidVideoOutputFormatPtr )
LEP_RESULT LEP_SetVidVideoOutputFormat( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_VID_VIDEO_OUTPUT_FORMAT_E vidVideoOutputFormat )
/* Video Output Format
*/
typedef struct LEP_VID_VIDEO_OUTPUT_FORMAT_TAG
{
LEP_VID_VIDEO_OUTPUT_FORMAT_RAW8 = 0, // To be supported in later release
LEP_VID_VIDEO_OUTPUT_FORMAT_RAW10, // To be supported in later release
LEP_VID_VIDEO_OUTPUT_FORMAT_RAW12, // To be supported in later release
LEP_VID_VIDEO_OUTPUT_FORMAT_RGB888, // To be supported in later release
LEP_VID_VIDEO_OUTPUT_FORMAT_RGB666, // To be supported in later release
LEP_VID_VIDEO_OUTPUT_FORMAT_RGB565, // To be supported in later release
LEP_VID_VIDEO_OUTPUT_FORMAT_YUV422_8BIT, // To be supported in later release
LEP_VID_VIDEO_OUTPUT_FORMAT_RAW14, // SUPPORTED in this release
LEP_VID_VIDEO_OUTPUT_FORMAT_YUV422_10BIT, // To be supported in later release
LEP_VID_VIDEO_OUTPUT_FORMAT_USER_DEFINED, // To be supported in later release
LEP_VID_VIDEO_OUTPUT_FORMAT_RAW8_2, // To be supported in later release
LEP_VID_VIDEO_OUTPUT_FORMAT_RAW8_3, // To be supported in later release
LEP_VID_VIDEO_OUTPUT_FORMAT_RAW8_4, // To be supported in later release
LEP_VID_VIDEO_OUTPUT_FORMAT_RAW8_5, // To be supported in later release
LEP_VID_VIDEO_OUTPUT_FORMAT_RAW8_6, // To be supported in later release
LEP_END_VID_VIDEO_OUTPUT_FORMAT
}LEP_VID_VIDEO_OUTPUT_FORMAT_E, *LEP_VID_VIDEO_OUTPUT_FORMAT_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Vid.GetFreezeEnableStateChecked">
            <summary>VID Video Freeze Enable State<para>This function allows the current frame to be repeated in lieu of a live video stream. When enabled, live video is halted from the camera. When disabled, live video resumes.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_VID_FREEZE_DISABLE</term>
                        <term>LEP_VID_FREEZE_ENABLE</term>
                        <term>LEP_VID_FREEZE_DISABLE</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> VID <strong>0x0300</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x24</strong></para>
                <para>With Set <strong>0x25</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetVidFreezeEnableState()</strong>
                        </term>
                        <term>Updates <strong>vidFreezeEnableStatePtr</strong> with the Camera’s current Video Freeze enable state</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetVidFreezeEnableState()</strong>
                        </term>
                        <term>Updates the Camera’s current Video Freeze enable state with the contents of <strong>vidFreezeEnableState</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetVidFreezeEnableState(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_VID_FREEZE_ENABLE_E_PTR vidFreezeEnableStatePtr)
LEP_RESULT LEP_SetVidFreezeEnableState(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_VID_FREEZE_ENABLE_E vidFreezeEnableState)
/* Video Freeze Output Enable Enum
*/
typedef enum LEP_VID_FREEZE_ENABLE_TAG
{
LEP_VID_FREEZE_DISABLE = 0,
LEP_VID_FREEZE_ENABLE,
LEP_VID_END_FREEZE_ENABLE
}LEP_VID_FREEZE_ENABLE_E, *LEP_VID_FREEZE_ENABLE_E_PTR ;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Vid.GetFreezeEnableState">
            <summary>VID Video Freeze Enable State<para>This function allows the current frame to be repeated in lieu of a live video stream. When enabled, live video is halted from the camera. When disabled, live video resumes.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_VID_FREEZE_DISABLE</term>
                        <term>LEP_VID_FREEZE_ENABLE</term>
                        <term>LEP_VID_FREEZE_DISABLE</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> VID <strong>0x0300</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x24</strong></para>
                <para>With Set <strong>0x25</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetVidFreezeEnableState()</strong>
                        </term>
                        <term>Updates <strong>vidFreezeEnableStatePtr</strong> with the Camera’s current Video Freeze enable state</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetVidFreezeEnableState()</strong>
                        </term>
                        <term>Updates the Camera’s current Video Freeze enable state with the contents of <strong>vidFreezeEnableState</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetVidFreezeEnableState(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_VID_FREEZE_ENABLE_E_PTR vidFreezeEnableStatePtr)
LEP_RESULT LEP_SetVidFreezeEnableState(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_VID_FREEZE_ENABLE_E vidFreezeEnableState)
/* Video Freeze Output Enable Enum
*/
typedef enum LEP_VID_FREEZE_ENABLE_TAG
{
LEP_VID_FREEZE_DISABLE = 0,
LEP_VID_FREEZE_ENABLE,
LEP_VID_END_FREEZE_ENABLE
}LEP_VID_FREEZE_ENABLE_E, *LEP_VID_FREEZE_ENABLE_E_PTR ;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Vid.GetFocusMetricThresholdChecked">
            <summary>VID Focus Metric Threshold<para>This function specifies the focus metric threshold. The focus metric evaluates image gradients and counts the number of gradient magnitudes that exceed the focus metric threshold. Therefore, larger values of the threshold imply the focus metric is counting gradients with larger magnitudes in effect filtering out small gradients in the image (pixel noise, for example). The Focus Metric uses the Tenengrad method which is an edge-based metric that measures the sum of the horizontal and vertical gradients using Sobel operators. The Focus Metric Threshold is applied to the sum of gradients. Gradients that exceed this threshold are then summed and counted and the Focus metric is computed from these.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>0</term>
                        <term>4294967295</term>
                        <term>30</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> VID <strong>0x0300</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x14</strong></para>
                <para>With Set <strong>0x15</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size of <strong>LEP_VID_FOCUS_METRIC_THRESHOLD_T</strong> data type</para>
                <para>Set <strong>2</strong> size of <strong>LEP_VID_FOCUS_METRIC_THRESHOLD_T</strong> data type</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetVidFocusMetricThreshold()</strong>
                        </term>
                        <term>Updates <strong>vidFocusMetricThresholdPtr</strong> with the Camera’s current video focus metric threshold.</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetVidFocusMetricThreshold()</strong>
                        </term>
                        <term>Updates the Camera’s current video focus metric threshold with the contents of <strong>vidFocusMetricThreshold</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetVidFocusMetricThreshold(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_VID_FOCUS_METRIC_THRESHOLD_T_PTR vidFocusMetricThresholdPtr)
LEP_RESULT LEP_SetVidFocusMetricThreshold(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_VID_FOCUS_METRIC_THRESHOLD_T vidFocusMetricThreshold)
typedef LEP_UINT32 LEP_VID_FOCUS_METRIC_THRESHOLD_T, *LEP_VID_FOCUS_METRIC_THRESHOLD_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Vid.GetFocusMetricThreshold">
            <summary>VID Focus Metric Threshold<para>This function specifies the focus metric threshold. The focus metric evaluates image gradients and counts the number of gradient magnitudes that exceed the focus metric threshold. Therefore, larger values of the threshold imply the focus metric is counting gradients with larger magnitudes in effect filtering out small gradients in the image (pixel noise, for example). The Focus Metric uses the Tenengrad method which is an edge-based metric that measures the sum of the horizontal and vertical gradients using Sobel operators. The Focus Metric Threshold is applied to the sum of gradients. Gradients that exceed this threshold are then summed and counted and the Focus metric is computed from these.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>0</term>
                        <term>4294967295</term>
                        <term>30</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> VID <strong>0x0300</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x14</strong></para>
                <para>With Set <strong>0x15</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size of <strong>LEP_VID_FOCUS_METRIC_THRESHOLD_T</strong> data type</para>
                <para>Set <strong>2</strong> size of <strong>LEP_VID_FOCUS_METRIC_THRESHOLD_T</strong> data type</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetVidFocusMetricThreshold()</strong>
                        </term>
                        <term>Updates <strong>vidFocusMetricThresholdPtr</strong> with the Camera’s current video focus metric threshold.</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetVidFocusMetricThreshold()</strong>
                        </term>
                        <term>Updates the Camera’s current video focus metric threshold with the contents of <strong>vidFocusMetricThreshold</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetVidFocusMetricThreshold(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_VID_FOCUS_METRIC_THRESHOLD_T_PTR vidFocusMetricThresholdPtr)
LEP_RESULT LEP_SetVidFocusMetricThreshold(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_VID_FOCUS_METRIC_THRESHOLD_T vidFocusMetricThreshold)
typedef LEP_UINT32 LEP_VID_FOCUS_METRIC_THRESHOLD_T, *LEP_VID_FOCUS_METRIC_THRESHOLD_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Vid.GetFocusMetricChecked">
            <summary>VID Focus Metric<para>This function returns the most recently calculated scene focus metric. The focus metric calculation counts image gradients that exceed the focus metric threshold. Larger values imply better scene focus due the presence of more large gradients. The focus metric is not defined if the video scene focus metric calculations are not enabled. . The focus metric uses the Tenengrad method, an edge-based metric that measures the sum of the horizontal and vertical gradients using Sobel operators. The focus metric threshold is applied to the sum of gradients. Gradients that exceed this threshold are then summed and counted and the Focus metric is computed from these.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>0</term>
                        <term>4294967295</term>
                        <term>N/A</term>
                        <term>none</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> VID <strong>0x0300</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x18</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size of <strong>LEP_VID_FOCUS_METRIC_T</strong> data type</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetVidFocusMetric()</strong>
                        </term>
                        <term>Updates <strong>vidFocusMetricPtr</strong> with the Camera’s current video focus value. Not defined if focus calculation is not enabled.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetVidFocusMetric(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_VID_FOCUS_METRIC_T_PTR vidFocusMetricPtr)
typedef LEP_UINT32 LEP_VID_FOCUS_METRIC_T, *LEP_VID_FOCUS_METRIC_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Vid.GetFocusMetric">
            <summary>VID Focus Metric<para>This function returns the most recently calculated scene focus metric. The focus metric calculation counts image gradients that exceed the focus metric threshold. Larger values imply better scene focus due the presence of more large gradients. The focus metric is not defined if the video scene focus metric calculations are not enabled. . The focus metric uses the Tenengrad method, an edge-based metric that measures the sum of the horizontal and vertical gradients using Sobel operators. The focus metric threshold is applied to the sum of gradients. Gradients that exceed this threshold are then summed and counted and the Focus metric is computed from these.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>0</term>
                        <term>4294967295</term>
                        <term>N/A</term>
                        <term>none</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> VID <strong>0x0300</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x18</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size of <strong>LEP_VID_FOCUS_METRIC_T</strong> data type</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetVidFocusMetric()</strong>
                        </term>
                        <term>Updates <strong>vidFocusMetricPtr</strong> with the Camera’s current video focus value. Not defined if focus calculation is not enabled.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetVidFocusMetric(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_VID_FOCUS_METRIC_T_PTR vidFocusMetricPtr)
typedef LEP_UINT32 LEP_VID_FOCUS_METRIC_T, *LEP_VID_FOCUS_METRIC_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Vid.GetFocusCalcEnableStateChecked">
            <summary>VID Focus Calculation Enable State<para>The camera can calculate a video scene focus metric (also useful as a metric of contrast). This function specifies whether or not the camera is to make these calculations on the input video. When enabled, the camera will calculate the video scene focus metric on each frame processed and make the result available in the focus metric. See section 4.5.6. When disabled, the camera does not execute the focus metric calculation.</para><para>Note that AGC (See 4.4.1) must be disabled when the focus metric is enabled.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_VID_FOCUS_CALC_DISABLE</term>
                        <term>LEP_VID_FOCUS_CALC_ENABLE</term>
                        <term>LEP_VID_FOCUS_CALC_DISABLE</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> VID <strong>0x0300</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x0C</strong></para>
                <para>With Set <strong>0x0D</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetVidFocusCalcEnableState()</strong>
                        </term>
                        <term>Updates <strong>vidEnableFocusCalcStatePtr</strong> with the Camera’s current video focus calculation enable state.</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetVidFocusCalcEnableState()</strong>
                        </term>
                        <term>Updates the Camera’s current video focus calculation enable state with the contents of <strong>vidFocusCalcEnableState</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetVidFocusCalcEnableState(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
vidEnableFocusCalcStatePtr)
LEP_RESULT LEP_SetVidFocusCalcEnableState(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
vidFocusCalcEnableState)
/* Video Focus Metric Calculation Enable Enum
*/
typedef enum LEP_VID_ENABLE_TAG
{
LEP_VID_FOCUS_CALC_DISABLE=0,
LEP_VID_FOCUS_CALC_ENABLE,
LEP_VID_END_FOCUS_CALC_ENABLE
}LEP_VID_FOCUS_CALC_ENABLE_E, *LEP_VID_FOCUS_CALC_ENABLE_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Vid.GetFocusCalcEnableState">
            <summary>VID Focus Calculation Enable State<para>The camera can calculate a video scene focus metric (also useful as a metric of contrast). This function specifies whether or not the camera is to make these calculations on the input video. When enabled, the camera will calculate the video scene focus metric on each frame processed and make the result available in the focus metric. See section 4.5.6. When disabled, the camera does not execute the focus metric calculation.</para><para>Note that AGC (See 4.4.1) must be disabled when the focus metric is enabled.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_VID_FOCUS_CALC_DISABLE</term>
                        <term>LEP_VID_FOCUS_CALC_ENABLE</term>
                        <term>LEP_VID_FOCUS_CALC_DISABLE</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> VID <strong>0x0300</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x0C</strong></para>
                <para>With Set <strong>0x0D</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetVidFocusCalcEnableState()</strong>
                        </term>
                        <term>Updates <strong>vidEnableFocusCalcStatePtr</strong> with the Camera’s current video focus calculation enable state.</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetVidFocusCalcEnableState()</strong>
                        </term>
                        <term>Updates the Camera’s current video focus calculation enable state with the contents of <strong>vidFocusCalcEnableState</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetVidFocusCalcEnableState(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
vidEnableFocusCalcStatePtr)
LEP_RESULT LEP_SetVidFocusCalcEnableState(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
vidFocusCalcEnableState)
/* Video Focus Metric Calculation Enable Enum
*/
typedef enum LEP_VID_ENABLE_TAG
{
LEP_VID_FOCUS_CALC_DISABLE=0,
LEP_VID_FOCUS_CALC_ENABLE,
LEP_VID_END_FOCUS_CALC_ENABLE
}LEP_VID_FOCUS_CALC_ENABLE_E, *LEP_VID_FOCUS_CALC_ENABLE_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Vid.GetUserLutChecked">
            <summary>VID User Pseudo-Color Look-Up Table Upload/Download<para>This function allows uploading (SET to the camera), and downloading (GET from the camera) a user-defined video output pseudo-color LUT. This LUT applies to the video processed by camera post AGC application before output. Does not apply to raw video output. The format of the pseudo-color LUT is 256 x 32-bits.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Parameter</strong>
                        </term>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>reserved</term>
                        <term>0</term>
                        <term>0</term>
                        <term>N/A</term>
                        <term>N/A</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>red</term>
                        <term>0</term>
                        <term>255</term>
                        <term>N/A</term>
                        <term>N/A</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>green</term>
                        <term>0</term>
                        <term>255</term>
                        <term>N/A</term>
                        <term>N/A</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>blue</term>
                        <term>0</term>
                        <term>255</term>
                        <term>N/A</term>
                        <term>N/A</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> VID <strong>0x0300</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x08</strong></para>
                <para>With Set <strong>0x09</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>512</strong> size of <strong>LEP_VID_LUT_BUFFER_T</strong> data type</para>
                <para>Set <strong>512</strong> size of <strong>LEP_VID_LUT_BUFFER_T</strong> data type</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetVidUserLut()</strong>
                        </term>
                        <term>Updates <strong>vidUserLutBufPtr</strong> with the Camera’s current user-defined video pseudo-color LUT data. Length of the LUT is 1024 bytes supporting a 256 x 32-bit LUT format and passed as value in <strong>vidUserLutBufLen.</strong></term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetVidUserLut()</strong>
                        </term>
                        <term>Updates the Camera’s current user-defined video pseudo-color LUT data with the contents of <strong>vidUserLutBufPtr</strong>. Length of the LUT is 1024 bytes supporting 256 x 32-bit LUT format and passed as value in <strong>vidUserLutBufLen.</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetVidUserLut(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_UINT8 *vidUserLutBufPtr, LEP_UINT16 vidUserLutBufLen)
LEP_RESULT LEP_SetVidUserLut(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_UINT8 *vidUserLutBufPtr, LEP_UINT16 vidUserLutBufLen)
/* User-Defined color look-up table (LUT)
*/
typedef struct LEP_VID_LUT_PIXEL_T_TAG
{
LEP_UINT8 reserved;
LEP_UINT8 red;
LEP_UINT8 green;
LEP_UINT8 blue;
} LEP_VID_LUT_PIXEL_T, *LEP_VID_LUT_PIXEL_T_PTR;
typedef struct LEP_VID_LUT_BUFFER_T_TAG
{
LEP_VID_LUT_PIXEL_T bin[256];
} LEP_VID_LUT_BUFFER_T, *LEP_VID_LUT_BUFFER_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Vid.GetUserLut">
            <summary>VID User Pseudo-Color Look-Up Table Upload/Download<para>This function allows uploading (SET to the camera), and downloading (GET from the camera) a user-defined video output pseudo-color LUT. This LUT applies to the video processed by camera post AGC application before output. Does not apply to raw video output. The format of the pseudo-color LUT is 256 x 32-bits.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Parameter</strong>
                        </term>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>reserved</term>
                        <term>0</term>
                        <term>0</term>
                        <term>N/A</term>
                        <term>N/A</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>red</term>
                        <term>0</term>
                        <term>255</term>
                        <term>N/A</term>
                        <term>N/A</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>green</term>
                        <term>0</term>
                        <term>255</term>
                        <term>N/A</term>
                        <term>N/A</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>blue</term>
                        <term>0</term>
                        <term>255</term>
                        <term>N/A</term>
                        <term>N/A</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> VID <strong>0x0300</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x08</strong></para>
                <para>With Set <strong>0x09</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>512</strong> size of <strong>LEP_VID_LUT_BUFFER_T</strong> data type</para>
                <para>Set <strong>512</strong> size of <strong>LEP_VID_LUT_BUFFER_T</strong> data type</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetVidUserLut()</strong>
                        </term>
                        <term>Updates <strong>vidUserLutBufPtr</strong> with the Camera’s current user-defined video pseudo-color LUT data. Length of the LUT is 1024 bytes supporting a 256 x 32-bit LUT format and passed as value in <strong>vidUserLutBufLen.</strong></term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetVidUserLut()</strong>
                        </term>
                        <term>Updates the Camera’s current user-defined video pseudo-color LUT data with the contents of <strong>vidUserLutBufPtr</strong>. Length of the LUT is 1024 bytes supporting 256 x 32-bit LUT format and passed as value in <strong>vidUserLutBufLen.</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetVidUserLut(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_UINT8 *vidUserLutBufPtr, LEP_UINT16 vidUserLutBufLen)
LEP_RESULT LEP_SetVidUserLut(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_UINT8 *vidUserLutBufPtr, LEP_UINT16 vidUserLutBufLen)
/* User-Defined color look-up table (LUT)
*/
typedef struct LEP_VID_LUT_PIXEL_T_TAG
{
LEP_UINT8 reserved;
LEP_UINT8 red;
LEP_UINT8 green;
LEP_UINT8 blue;
} LEP_VID_LUT_PIXEL_T, *LEP_VID_LUT_PIXEL_T_PTR;
typedef struct LEP_VID_LUT_BUFFER_T_TAG
{
LEP_VID_LUT_PIXEL_T bin[256];
} LEP_VID_LUT_BUFFER_T, *LEP_VID_LUT_BUFFER_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Vid.GetLowGainPcolorLutChecked">
            <summary>VID Low Gain Pseudo-Color Look-Up Table Select<para>This function allows selection of the video output pseudo-color LUT to be used when the camera is in Low Gain Mode. This LUT applies to the video processed by camera post AGC application before output. Color LUTs do not apply to raw video output of any format. Requires using the video output format of 24-bit R, G, B (See 4.6.7), AGC enabled and scaled to 8-bit output (See 4.4.1).</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <strong>LEP_VID_GREYSCALE_LUT</strong>
                        </term>
                        <term>
                            <strong>LEP_VID_USER_LUT</strong>
                        </term>
                        <term>
                            <strong>LEP_VID_GREYSCALE_LUT</strong>
                        </term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> VID <strong>0x0300</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x34</strong></para>
                <para>With Set <strong>0x35</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_GetVidLowGainPcolorLut()</strong>
                        </term>
                        <term>Updates <strong>vidPcolorLutPtr</strong> with the Camera’s current video pseudo-color LUT selection.</term>
                    </item>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_SetLowGainVidPcolorLut()</strong>
                        </term>
                        <term>Sets Camera’s current video pseudo-color LUT selection to <strong>vidPcolorLut</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetVidLowGainPcolorLut(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_PCOLOR_LUT_E_PTR vidPcolorLutPtr)
LEP_RESULT LEP_SetVidLowGainPcolorLut(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_PCOLOR_LUT_E vidPcolorLut)
/* Video Pseudo-Color LUT Enum
*/
typedef enum LEP_PCOLOR_LUT_E_TAG
{
LEP_VID_WHEEL6_LUT=0,
LEP_VID_FUSION_LUT,
LEP_VID_RAINBOW_LUT,
LEP_VID_GLOBOW_LUT,
LEP_VID_SEPIA_LUT,
LEP_VID_COLOR_LUT,
LEP_VID_ICE_FIRE_LUT,
LEP_VID_RAIN_LUT,
LEP_VID_USER_LUT,
LEP_VID_END_PCOLOR_LUT
}LEP_PCOLOR_LUT_E, *LEP_PCOLOR_LUT_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Vid.GetLowGainPcolorLut">
            <summary>VID Low Gain Pseudo-Color Look-Up Table Select<para>This function allows selection of the video output pseudo-color LUT to be used when the camera is in Low Gain Mode. This LUT applies to the video processed by camera post AGC application before output. Color LUTs do not apply to raw video output of any format. Requires using the video output format of 24-bit R, G, B (See 4.6.7), AGC enabled and scaled to 8-bit output (See 4.4.1).</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <strong>LEP_VID_GREYSCALE_LUT</strong>
                        </term>
                        <term>
                            <strong>LEP_VID_USER_LUT</strong>
                        </term>
                        <term>
                            <strong>LEP_VID_GREYSCALE_LUT</strong>
                        </term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> VID <strong>0x0300</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x34</strong></para>
                <para>With Set <strong>0x35</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_GetVidLowGainPcolorLut()</strong>
                        </term>
                        <term>Updates <strong>vidPcolorLutPtr</strong> with the Camera’s current video pseudo-color LUT selection.</term>
                    </item>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_SetLowGainVidPcolorLut()</strong>
                        </term>
                        <term>Sets Camera’s current video pseudo-color LUT selection to <strong>vidPcolorLut</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetVidLowGainPcolorLut(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_PCOLOR_LUT_E_PTR vidPcolorLutPtr)
LEP_RESULT LEP_SetVidLowGainPcolorLut(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_PCOLOR_LUT_E vidPcolorLut)
/* Video Pseudo-Color LUT Enum
*/
typedef enum LEP_PCOLOR_LUT_E_TAG
{
LEP_VID_WHEEL6_LUT=0,
LEP_VID_FUSION_LUT,
LEP_VID_RAINBOW_LUT,
LEP_VID_GLOBOW_LUT,
LEP_VID_SEPIA_LUT,
LEP_VID_COLOR_LUT,
LEP_VID_ICE_FIRE_LUT,
LEP_VID_RAIN_LUT,
LEP_VID_USER_LUT,
LEP_VID_END_PCOLOR_LUT
}LEP_PCOLOR_LUT_E, *LEP_PCOLOR_LUT_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Vid.GetPcolorLutChecked">
            <summary>VID Pseudo-Color Look-Up Table Select<para>This function allows selection of the video output pseudo-color LUT. This LUT applies to the video processed by camera post AGC application before output. Color LUTs do not apply to raw video output of any format. Requires using the video output format of 24-bit R, G, B (See 4.6.7), AGC enabled and scaled to 8-bit output (See 4.4.1).</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <strong>LEP_VID_GREYSCALE_LUT</strong>
                        </term>
                        <term>
                            <strong>LEP_VID_USER_LUT</strong>
                        </term>
                        <term>
                            <strong>LEP_VID_GREYSCALE_LUT</strong>
                        </term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> VID <strong>0x0300</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x04</strong></para>
                <para>With Set <strong>0x05</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetVidPcolorLut()</strong>
                        </term>
                        <term>Updates <strong>vidPcolorLutPtr</strong> with the Camera’s current video pseudo-color LUT selection.</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetVidPcolorLut()</strong>
                        </term>
                        <term>Sets Camera’s current video pseudo-color LUT selection to <strong>vidPcolorLut</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetVidPcolorLut(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_PCOLOR_LUT_E_PTR vidPcolorLutPtr)
LEP_RESULT LEP_SetVidPcolorLut(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_PCOLOR_LUT_E vidPcolorLut)
/* Video Pseudo-Color LUT Enum
*/
typedef enum LEP_PCOLOR_LUT_E_TAG
{
LEP_VID_WHEEL6_LUT=0,
LEP_VID_FUSION_LUT,
LEP_VID_RAINBOW_LUT,
LEP_VID_GLOBOW_LUT,
LEP_VID_SEPIA_LUT,
LEP_VID_COLOR_LUT,
LEP_VID_ICE_FIRE_LUT,
LEP_VID_RAIN_LUT,
LEP_VID_USER_LUT,
LEP_VID_END_PCOLOR_LUT
}LEP_PCOLOR_LUT_E, *LEP_PCOLOR_LUT_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Vid.GetPcolorLut">
            <summary>VID Pseudo-Color Look-Up Table Select<para>This function allows selection of the video output pseudo-color LUT. This LUT applies to the video processed by camera post AGC application before output. Color LUTs do not apply to raw video output of any format. Requires using the video output format of 24-bit R, G, B (See 4.6.7), AGC enabled and scaled to 8-bit output (See 4.4.1).</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <strong>LEP_VID_GREYSCALE_LUT</strong>
                        </term>
                        <term>
                            <strong>LEP_VID_USER_LUT</strong>
                        </term>
                        <term>
                            <strong>LEP_VID_GREYSCALE_LUT</strong>
                        </term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> VID <strong>0x0300</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x04</strong></para>
                <para>With Set <strong>0x05</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetVidPcolorLut()</strong>
                        </term>
                        <term>Updates <strong>vidPcolorLutPtr</strong> with the Camera’s current video pseudo-color LUT selection.</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetVidPcolorLut()</strong>
                        </term>
                        <term>Sets Camera’s current video pseudo-color LUT selection to <strong>vidPcolorLut</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetVidPcolorLut(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_PCOLOR_LUT_E_PTR vidPcolorLutPtr)
LEP_RESULT LEP_SetVidPcolorLut(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_PCOLOR_LUT_E vidPcolorLut)
/* Video Pseudo-Color LUT Enum
*/
typedef enum LEP_PCOLOR_LUT_E_TAG
{
LEP_VID_WHEEL6_LUT=0,
LEP_VID_FUSION_LUT,
LEP_VID_RAINBOW_LUT,
LEP_VID_GLOBOW_LUT,
LEP_VID_SEPIA_LUT,
LEP_VID_COLOR_LUT,
LEP_VID_ICE_FIRE_LUT,
LEP_VID_RAIN_LUT,
LEP_VID_USER_LUT,
LEP_VID_END_PCOLOR_LUT
}LEP_PCOLOR_LUT_E, *LEP_PCOLOR_LUT_E_PTR;</code>
            </remarks>
        </member>
        <member name="T:Lepton.CCI.Vid">
            <summary>
This module provides command and control of the video data. Selection of the video polarity (white-hot or black-hot), video output color look-up table, and access to reading the focus metric are available through this module.
</summary>
        </member>
        <member name="M:Lepton.CCI.Sys.SetGainModeObjChecked(Lepton.CCI.Sys.GainModeObj)">
            <summary>SYS Gain Mode Object<para>This command gets or sets the gain mode object. Set the ROI, temperature thresholds (in Celsius for TLinear disabled mode and Kelvin for TLinear enabled mode), and percentages of the ROI that must meet the temperature threshold criteria for both high to low and low to high automatic gain mode switching.</para><para><strong>Lepton 1.5, 1.6, 2.0, 2.5</strong></para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Field</strong>
                        </term>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Lepton 2.5 Factory Default</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <para>
                                <para>sysGainModeROI</para>
                            </para>
                        </term>
                        <term>0,0,0,0</term>
                        <term>59,59,79,79</term>
                        <term>0,0,59,79</term>
                        <term>0,0,59,79</term>
                        <term>Pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>sys_P_high_to_low</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>100</term>
                        <term>20</term>
                        <term>25</term>
                        <term>Percent</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>sys_P_low_to_high</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>100</term>
                        <term>95</term>
                        <term>90</term>
                        <term>Percent</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>sys_C_high_to_low</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>600</term>
                        <term>110</term>
                        <term>115</term>
                        <term>Celsius</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>sys_C_low_to_high</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>600</term>
                        <term>90</term>
                        <term>85</term>
                        <term>Celsius</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>sys_T_high_to_low</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>900</term>
                        <term>383</term>
                        <term>388</term>
                        <term>Kelvin</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>sys_T_low_to_high</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>900</term>
                        <term>363</term>
                        <term>358</term>
                        <term>Kelvin</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>sysGainRoiPopulation</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>4800</term>
                        <term>4800</term>
                        <term>4800</term>
                        <term>Pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>sysGainModeTempEnabled</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>1</term>
                        <term>0</term>
                        <term>0</term>
                        <term>Boolean</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>sysGainModeFluxThresholdLow</term>
                        <term>0</term>
                        <term>16383</term>
                        <term>8765</term>
                        <term>Calibrated per camera</term>
                        <term>Counts</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>sysGainModeFluxThresholdHigh</term>
                        <term>0</term>
                        <term>16383</term>
                        <term>9876</term>
                        <term>Calibrated per camera</term>
                        <term>Counts</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>Lepton 3.0, 3.5</strong>
                </para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Field</strong>
                        </term>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Lepton 3.5 Factory Default</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <para>
                                <para>sysGainModeROI</para>
                            </para>
                        </term>
                        <term>0,0,0,0</term>
                        <term>119,119,159,159</term>
                        <term>0,0,119,159</term>
                        <term>0,0,119,159</term>
                        <term>Pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>sys_P_high_to_low</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>100</term>
                        <term>20</term>
                        <term>25</term>
                        <term>Percent</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>sys_P_low_to_high</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>100</term>
                        <term>95</term>
                        <term>90</term>
                        <term>Percent</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>sys_C_high_to_low</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>600</term>
                        <term>110</term>
                        <term>115</term>
                        <term>Celsius</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>sys_C_low_to_high</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>600</term>
                        <term>90</term>
                        <term>85</term>
                        <term>Celsius</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>sys_T_high_to_low</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>900</term>
                        <term>383</term>
                        <term>388</term>
                        <term>Kelvin</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>sys_T_low_to_high</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>900</term>
                        <term>363</term>
                        <term>358</term>
                        <term>Kelvin</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>sysGainRoiPopulation</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>19200</term>
                        <term>19200</term>
                        <term>19200</term>
                        <term>Pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>sysGainModeTempEnabled</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>1</term>
                        <term>0</term>
                        <term>0</term>
                        <term>Boolean</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>sysGainModeFluxThresholdLow</term>
                        <term>0</term>
                        <term>16383</term>
                        <term>8765</term>
                        <term>Calibrated per camera</term>
                        <term>Counts</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>sysGainModeFluxThresholdHigh</term>
                        <term>0</term>
                        <term>16383</term>
                        <term>9876</term>
                        <term>Calibrated per camera</term>
                        <term>Counts</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> SYS <strong>0x0200</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong />With Set <strong>0x51</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>14</strong> size of <strong>LEP_SYS_GAIN_MODE_OBJ_T</strong>
Set <strong>14</strong> size of <strong>LEP_SYS_GAIN_MODE_OBJ_T</strong> data type</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_GetSysGainModeObj()</strong>
                        </term>
                        <term>Returns the Lepton Camera’s current Gain mode in <strong>gainModeObjPtr</strong></term>
                    </item>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_SetSysGainModeObj()</strong>
                        </term>
                        <term>Sets the Lepton Camera’s current Gain mode to <strong>gainModeObj</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetSysGainModeObj( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_SYS_GAIN_MODE_OBJ_T_PTR gainModeObjPtr )
LEP_RESULT LEP_SetSysGainModeObj( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_SYS_GAIN_MODE_OBJ_T gainModeObj )
/* Gain Mode Object
*/
typedef struct LEP_SYS_GAIN_MODE_OBJ_T_TAG
{
/* Specified ROI to use for Gain Mode switching */
/* Set of threshold triggers */
/* Population size in pixels within the ROI */
/* True if T-Linear is implemented */
/* calculated from desired temp */
/* calculated from desired temp */
}LEP_SYS_GAIN_MODE_OBJ_T, *LEP_SYS_GAIN_MODE_OBJ_T_PTR;
/* System Gain Mode ROI Structure
*/
typedef struct LEP_SYS_GAIN_MODE_ROI_T_TAG
{
LEP_UINT16 startCol;
LEP_UINT16 startRow;
LEP_UINT16 endCol;
LEP_UINT16 endRow;
}LEP_SYS_GAIN_MODE_ROI_T, *LEP_SYS_GAIN_MODE_ROI_T_PTR;
/* Gain Mode Support
*/
typedef struct LEP_SYS_GAIN_MODE_THRESHOLDS_T_TAG
{
/* Range: [0 - 100], percent */
/* Range: [0 - 100], percent */
/* Range: [0 - 600], degrees C */
/* Range: [0 - 600], degrees C */
/* Range: [0 - 900], Kelvin */
/* Range: [0 - 900], Kelvin */
}LEP_SYS_GAIN_MODE_THRESHOLDS_T, *LEP_SYS_GAIN_MODE_THRESHOLDS_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Sys.SetGainModeObj(Lepton.CCI.Sys.GainModeObj)">
            <summary>SYS Gain Mode Object<para>This command gets or sets the gain mode object. Set the ROI, temperature thresholds (in Celsius for TLinear disabled mode and Kelvin for TLinear enabled mode), and percentages of the ROI that must meet the temperature threshold criteria for both high to low and low to high automatic gain mode switching.</para><para><strong>Lepton 1.5, 1.6, 2.0, 2.5</strong></para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Field</strong>
                        </term>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Lepton 2.5 Factory Default</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <para>
                                <para>sysGainModeROI</para>
                            </para>
                        </term>
                        <term>0,0,0,0</term>
                        <term>59,59,79,79</term>
                        <term>0,0,59,79</term>
                        <term>0,0,59,79</term>
                        <term>Pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>sys_P_high_to_low</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>100</term>
                        <term>20</term>
                        <term>25</term>
                        <term>Percent</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>sys_P_low_to_high</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>100</term>
                        <term>95</term>
                        <term>90</term>
                        <term>Percent</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>sys_C_high_to_low</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>600</term>
                        <term>110</term>
                        <term>115</term>
                        <term>Celsius</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>sys_C_low_to_high</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>600</term>
                        <term>90</term>
                        <term>85</term>
                        <term>Celsius</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>sys_T_high_to_low</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>900</term>
                        <term>383</term>
                        <term>388</term>
                        <term>Kelvin</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>sys_T_low_to_high</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>900</term>
                        <term>363</term>
                        <term>358</term>
                        <term>Kelvin</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>sysGainRoiPopulation</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>4800</term>
                        <term>4800</term>
                        <term>4800</term>
                        <term>Pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>sysGainModeTempEnabled</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>1</term>
                        <term>0</term>
                        <term>0</term>
                        <term>Boolean</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>sysGainModeFluxThresholdLow</term>
                        <term>0</term>
                        <term>16383</term>
                        <term>8765</term>
                        <term>Calibrated per camera</term>
                        <term>Counts</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>sysGainModeFluxThresholdHigh</term>
                        <term>0</term>
                        <term>16383</term>
                        <term>9876</term>
                        <term>Calibrated per camera</term>
                        <term>Counts</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>Lepton 3.0, 3.5</strong>
                </para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Field</strong>
                        </term>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Lepton 3.5 Factory Default</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <para>
                                <para>sysGainModeROI</para>
                            </para>
                        </term>
                        <term>0,0,0,0</term>
                        <term>119,119,159,159</term>
                        <term>0,0,119,159</term>
                        <term>0,0,119,159</term>
                        <term>Pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>sys_P_high_to_low</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>100</term>
                        <term>20</term>
                        <term>25</term>
                        <term>Percent</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>sys_P_low_to_high</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>100</term>
                        <term>95</term>
                        <term>90</term>
                        <term>Percent</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>sys_C_high_to_low</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>600</term>
                        <term>110</term>
                        <term>115</term>
                        <term>Celsius</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>sys_C_low_to_high</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>600</term>
                        <term>90</term>
                        <term>85</term>
                        <term>Celsius</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>sys_T_high_to_low</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>900</term>
                        <term>383</term>
                        <term>388</term>
                        <term>Kelvin</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>sys_T_low_to_high</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>900</term>
                        <term>363</term>
                        <term>358</term>
                        <term>Kelvin</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>sysGainRoiPopulation</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>19200</term>
                        <term>19200</term>
                        <term>19200</term>
                        <term>Pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>sysGainModeTempEnabled</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>1</term>
                        <term>0</term>
                        <term>0</term>
                        <term>Boolean</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>sysGainModeFluxThresholdLow</term>
                        <term>0</term>
                        <term>16383</term>
                        <term>8765</term>
                        <term>Calibrated per camera</term>
                        <term>Counts</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>sysGainModeFluxThresholdHigh</term>
                        <term>0</term>
                        <term>16383</term>
                        <term>9876</term>
                        <term>Calibrated per camera</term>
                        <term>Counts</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> SYS <strong>0x0200</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong />With Set <strong>0x51</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>14</strong> size of <strong>LEP_SYS_GAIN_MODE_OBJ_T</strong>
Set <strong>14</strong> size of <strong>LEP_SYS_GAIN_MODE_OBJ_T</strong> data type</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_GetSysGainModeObj()</strong>
                        </term>
                        <term>Returns the Lepton Camera’s current Gain mode in <strong>gainModeObjPtr</strong></term>
                    </item>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_SetSysGainModeObj()</strong>
                        </term>
                        <term>Sets the Lepton Camera’s current Gain mode to <strong>gainModeObj</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetSysGainModeObj( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_SYS_GAIN_MODE_OBJ_T_PTR gainModeObjPtr )
LEP_RESULT LEP_SetSysGainModeObj( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_SYS_GAIN_MODE_OBJ_T gainModeObj )
/* Gain Mode Object
*/
typedef struct LEP_SYS_GAIN_MODE_OBJ_T_TAG
{
/* Specified ROI to use for Gain Mode switching */
/* Set of threshold triggers */
/* Population size in pixels within the ROI */
/* True if T-Linear is implemented */
/* calculated from desired temp */
/* calculated from desired temp */
}LEP_SYS_GAIN_MODE_OBJ_T, *LEP_SYS_GAIN_MODE_OBJ_T_PTR;
/* System Gain Mode ROI Structure
*/
typedef struct LEP_SYS_GAIN_MODE_ROI_T_TAG
{
LEP_UINT16 startCol;
LEP_UINT16 startRow;
LEP_UINT16 endCol;
LEP_UINT16 endRow;
}LEP_SYS_GAIN_MODE_ROI_T, *LEP_SYS_GAIN_MODE_ROI_T_PTR;
/* Gain Mode Support
*/
typedef struct LEP_SYS_GAIN_MODE_THRESHOLDS_T_TAG
{
/* Range: [0 - 100], percent */
/* Range: [0 - 100], percent */
/* Range: [0 - 600], degrees C */
/* Range: [0 - 600], degrees C */
/* Range: [0 - 900], Kelvin */
/* Range: [0 - 900], Kelvin */
}LEP_SYS_GAIN_MODE_THRESHOLDS_T, *LEP_SYS_GAIN_MODE_THRESHOLDS_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Sys.SetGainModeChecked(Lepton.CCI.Sys.GainMode)">
            <summary>SYS Gain Mode<para>This command sets the gain state of the camera. High gain mode provides higher responsivity and lower noise metrics for normal operation (default). Low gain mode provides lower responsivity and higher noise metrics, but with the benefit of increased intra-scene range necessary to view hotter scenes. Auto gain mode allows the camera to automatically switch the gain mode based on the temperature of the scene and thresholds configurable by the user in the “SYS Gain Mode Object” command. Auto gain mode can only be enabled when radiometry mode is enabled due to the temperature measurement dependency.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_SYS_GAIN_MODE_HIGH</term>
                        <term>LEP_SYS_GAIN_MODE_AUTO</term>
                        <term>LEP_SYS_GAIN_MODE_HIGH</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> SYS <strong>0x0200</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong />With Set <strong>0x49</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong>
Set <strong>2</strong> size of an Enum on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_GetSysGainMode()</strong>
                        </term>
                        <term>Returns the Lepton Camera’s current Gain mode in <strong>gainModePtr</strong></term>
                    </item>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_SetSysGainMode()</strong>
                        </term>
                        <term>Sets the Lepton Camera’s current Gain mode to <strong>gainMode</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetSysGainMode( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_SYS_GAIN_MODE_E_PTR gainModePtr)
LEP_RESULT LEP_SetSysGainMode( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_SYS_GAIN_MODE_E gainMode)
typedef enum LEP_SYS_GAIN_MODE_E_TAG
{
LEP_SYS_GAIN_MODE_HIGH = 0,
LEP_SYS_GAIN_MODE_LOW,
LEP_SYS_GAIN_MODE_AUTO,
LEP_SYS_END_GAIN_MODE,
} LEP_SYS_GAIN_MODE_E, *LEP_SYS_GAIN_MODE_E_PTR;;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Sys.SetGainMode(Lepton.CCI.Sys.GainMode)">
            <summary>SYS Gain Mode<para>This command sets the gain state of the camera. High gain mode provides higher responsivity and lower noise metrics for normal operation (default). Low gain mode provides lower responsivity and higher noise metrics, but with the benefit of increased intra-scene range necessary to view hotter scenes. Auto gain mode allows the camera to automatically switch the gain mode based on the temperature of the scene and thresholds configurable by the user in the “SYS Gain Mode Object” command. Auto gain mode can only be enabled when radiometry mode is enabled due to the temperature measurement dependency.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_SYS_GAIN_MODE_HIGH</term>
                        <term>LEP_SYS_GAIN_MODE_AUTO</term>
                        <term>LEP_SYS_GAIN_MODE_HIGH</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> SYS <strong>0x0200</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong />With Set <strong>0x49</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong>
Set <strong>2</strong> size of an Enum on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_GetSysGainMode()</strong>
                        </term>
                        <term>Returns the Lepton Camera’s current Gain mode in <strong>gainModePtr</strong></term>
                    </item>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_SetSysGainMode()</strong>
                        </term>
                        <term>Sets the Lepton Camera’s current Gain mode to <strong>gainMode</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetSysGainMode( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_SYS_GAIN_MODE_E_PTR gainModePtr)
LEP_RESULT LEP_SetSysGainMode( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_SYS_GAIN_MODE_E gainMode)
typedef enum LEP_SYS_GAIN_MODE_E_TAG
{
LEP_SYS_GAIN_MODE_HIGH = 0,
LEP_SYS_GAIN_MODE_LOW,
LEP_SYS_GAIN_MODE_AUTO,
LEP_SYS_END_GAIN_MODE,
} LEP_SYS_GAIN_MODE_E, *LEP_SYS_GAIN_MODE_E_PTR;;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Sys.SetSceneRoiChecked(Lepton.CCI.Sys.VideoRoi)">
            <summary>SYS Scene ROI Select<para>The camera supports processing of pixels contained within a specified rectangular window or Region of Interest (ROI) to calculate scene statistics (See 4.4.23). This region is defined by 4 parameters: start column, start row, end column, and end row. The region is adjustable to a sub-window. Maximum extents must exclude a 1-pixel boundary from any edge.</para><para><strong>Lepton 1.5, 1.6, 2.0, 2.5</strong></para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Dimension</strong>
                        </term>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Value</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <para>
                                <para>start column</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>&lt; end column</term>
                        <term>0</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>start row</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>&lt; end row</term>
                        <term>0</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>end column</para>
                            </para>
                        </term>
                        <term>&gt; start column</term>
                        <term>79</term>
                        <term>79</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>end row</para>
                            </para>
                        </term>
                        <term>&gt; start row</term>
                        <term>59</term>
                        <term>59</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>Lepton 3.0, 3.5</strong>
                </para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Dimension</strong>
                        </term>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Value</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <para>
                                <para>start column</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>&lt; end column</term>
                        <term>0</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>start row</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>&lt; end row</term>
                        <term>0</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>end column</para>
                            </para>
                        </term>
                        <term>&gt; start column</term>
                        <term>159</term>
                        <term>159</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>end row</para>
                            </para>
                        </term>
                        <term>&gt; start row</term>
                        <term>119</term>
                        <term>119</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> VID <strong>0x0200</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x30</strong></para>
                <para>With Set <strong>0x31</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>4</strong> size of <strong>LEP_SYS_VIDEO_ROI_T</strong> data type</para>
                <para>Set <strong>4</strong> size of <strong>LEP_SYS_VIDEO_ROI_T</strong> data type</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetSysSceneRoi()</strong>
                        </term>
                        <term>Updates <strong>sceneRoiPtr</strong> with the Camera’s current Scene ROI</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_</strong>
                            <strong>SetSysSceneRoi()</strong>
                        </term>
                        <term>Sets Camera’s current Scene ROI to <strong>sceneRoi</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetSysSceneRoi(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_SYS_VIDEO_ROI_T_PTR sceneRoiPtr)
LEP_RESULT LEP_SetSysSceneRoi(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_SYS_VIDEO_ROI_T sceneRoi)
/* SYS Scene ROI Structure
*/
typedef struct LEP_SYS_VIDEO_ROI_T_TAG
{
LEP_UINT16 startCol;
LEP_UINT16 startRow;
LEP_UINT16 endCol;
LEP_UINT16 endRow;
} LEP_SYS_VIDEO_ROI_T, *LEP_SYS_VIDEO_ROI_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Sys.SetSceneRoi(Lepton.CCI.Sys.VideoRoi)">
            <summary>SYS Scene ROI Select<para>The camera supports processing of pixels contained within a specified rectangular window or Region of Interest (ROI) to calculate scene statistics (See 4.4.23). This region is defined by 4 parameters: start column, start row, end column, and end row. The region is adjustable to a sub-window. Maximum extents must exclude a 1-pixel boundary from any edge.</para><para><strong>Lepton 1.5, 1.6, 2.0, 2.5</strong></para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Dimension</strong>
                        </term>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Value</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <para>
                                <para>start column</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>&lt; end column</term>
                        <term>0</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>start row</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>&lt; end row</term>
                        <term>0</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>end column</para>
                            </para>
                        </term>
                        <term>&gt; start column</term>
                        <term>79</term>
                        <term>79</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>end row</para>
                            </para>
                        </term>
                        <term>&gt; start row</term>
                        <term>59</term>
                        <term>59</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>Lepton 3.0, 3.5</strong>
                </para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Dimension</strong>
                        </term>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Value</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <para>
                                <para>start column</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>&lt; end column</term>
                        <term>0</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>start row</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>&lt; end row</term>
                        <term>0</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>end column</para>
                            </para>
                        </term>
                        <term>&gt; start column</term>
                        <term>159</term>
                        <term>159</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>end row</para>
                            </para>
                        </term>
                        <term>&gt; start row</term>
                        <term>119</term>
                        <term>119</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> VID <strong>0x0200</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x30</strong></para>
                <para>With Set <strong>0x31</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>4</strong> size of <strong>LEP_SYS_VIDEO_ROI_T</strong> data type</para>
                <para>Set <strong>4</strong> size of <strong>LEP_SYS_VIDEO_ROI_T</strong> data type</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetSysSceneRoi()</strong>
                        </term>
                        <term>Updates <strong>sceneRoiPtr</strong> with the Camera’s current Scene ROI</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_</strong>
                            <strong>SetSysSceneRoi()</strong>
                        </term>
                        <term>Sets Camera’s current Scene ROI to <strong>sceneRoi</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetSysSceneRoi(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_SYS_VIDEO_ROI_T_PTR sceneRoiPtr)
LEP_RESULT LEP_SetSysSceneRoi(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_SYS_VIDEO_ROI_T sceneRoi)
/* SYS Scene ROI Structure
*/
typedef struct LEP_SYS_VIDEO_ROI_T_TAG
{
LEP_UINT16 startCol;
LEP_UINT16 startRow;
LEP_UINT16 endCol;
LEP_UINT16 endRow;
} LEP_SYS_VIDEO_ROI_T, *LEP_SYS_VIDEO_ROI_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Sys.SetTelemetryLocationChecked(Lepton.CCI.Sys.TelemetryLocation)">
            <summary>SYS Telemetry Location<para>This command Sets and Gets the Telemetry Location.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_TELEMETRY_LOCATION_HEADER</term>
                        <term>LEP_TELEMETRY_LOCATION_FOOTER</term>
                        <term>LEP_TELEMETRY_LOCATION_FOOTER</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> SYS <strong>0x0200</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong />With Set <strong>0x1D</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong>
Set <strong>2</strong> size of an Enum on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_</strong>
                            <strong>GetSysTelemetryLocation()</strong>
                        </term>
                        <term>Returns the location of Telemetry data as an enum</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_</strong>
                            <strong>SetSysTelemetryLocation()</strong>
                        </term>
                        <term>Sets the location of Telemetry data as an enum</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetSysTelemetryLocation(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_SYS_TELEMETRY_LOCATION_E_PTR telemetryLocationPtr)
LEP_RESULT LEP_SetSysTelemetryLocation(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_SYS_TELEMETRY_LOCATION_E telemetryLocation)
typedef enum LEP_SYS_TELEMETRY_LOCATION_E_TAG
{
LEP_TELEMETRY_LOCATION_HEADER=0,
LEP_TELEMETRY_LOCATION_FOOTER,
LEP_END_TELEMETRY_LOCATION
}LEP_SYS_TELEMETRY_LOCATION_E, *LEP_SYS_TELEMETRY_LOCATION_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Sys.SetTelemetryLocation(Lepton.CCI.Sys.TelemetryLocation)">
            <summary>SYS Telemetry Location<para>This command Sets and Gets the Telemetry Location.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_TELEMETRY_LOCATION_HEADER</term>
                        <term>LEP_TELEMETRY_LOCATION_FOOTER</term>
                        <term>LEP_TELEMETRY_LOCATION_FOOTER</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> SYS <strong>0x0200</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong />With Set <strong>0x1D</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong>
Set <strong>2</strong> size of an Enum on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_</strong>
                            <strong>GetSysTelemetryLocation()</strong>
                        </term>
                        <term>Returns the location of Telemetry data as an enum</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_</strong>
                            <strong>SetSysTelemetryLocation()</strong>
                        </term>
                        <term>Sets the location of Telemetry data as an enum</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetSysTelemetryLocation(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_SYS_TELEMETRY_LOCATION_E_PTR telemetryLocationPtr)
LEP_RESULT LEP_SetSysTelemetryLocation(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_SYS_TELEMETRY_LOCATION_E telemetryLocation)
typedef enum LEP_SYS_TELEMETRY_LOCATION_E_TAG
{
LEP_TELEMETRY_LOCATION_HEADER=0,
LEP_TELEMETRY_LOCATION_FOOTER,
LEP_END_TELEMETRY_LOCATION
}LEP_SYS_TELEMETRY_LOCATION_E, *LEP_SYS_TELEMETRY_LOCATION_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Sys.SetTelemetryEnableStateChecked(Lepton.CCI.Sys.TelemetryEnableState)">
            <summary>SYS Telemetry Enable State<para>This command returns the Telemetry Enabled State as an Enum.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_TELEMETRY_DISABLED</term>
                        <term>LEP_TELEMETRY_ENABLED</term>
                        <term>LEP_TELEMETRY_DISABLED</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> SYS <strong>0x0200</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong />With Set <strong>0x19</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong>
Set <strong>2</strong> size of an Enum on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_</strong>
                            <strong>GetSysTelemetryEnableState()</strong>
                        </term>
                        <term>Returns the Lepton Camera’s Telemetry Enable State</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_</strong>
                            <strong>SetSysTelemetryEnableState()</strong>
                        </term>
                        <term>Sets the Lepton Camera’s Telemetry Enabled State</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetSysTelemetryEnableState(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_SYS_TELEMETRY_ENABLE_STATE_E_PTR enableStatePtr)
LEP_RESULT LEP_SetSysTelemetryEnableState(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_SYS_TELEMETRY_ENABLE_STATE_E enableState)
typedef enum LEP_SYS_TELEMETRY_ENABLE_STATE_E_TAG
{
LEP_TELEMETRY_DISABLED=0,
LEP_TELEMETRY_ENABLED,
LEP_END_TELEMETRY_ENABLE_STATE
}LEP_SYS_TELEMETRY_ENABLE_STATE_E, *LEP_SYS_TELEMETRY_ENABLE_STATE_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Sys.SetTelemetryEnableState(Lepton.CCI.Sys.TelemetryEnableState)">
            <summary>SYS Telemetry Enable State<para>This command returns the Telemetry Enabled State as an Enum.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_TELEMETRY_DISABLED</term>
                        <term>LEP_TELEMETRY_ENABLED</term>
                        <term>LEP_TELEMETRY_DISABLED</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> SYS <strong>0x0200</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong />With Set <strong>0x19</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong>
Set <strong>2</strong> size of an Enum on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_</strong>
                            <strong>GetSysTelemetryEnableState()</strong>
                        </term>
                        <term>Returns the Lepton Camera’s Telemetry Enable State</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_</strong>
                            <strong>SetSysTelemetryEnableState()</strong>
                        </term>
                        <term>Sets the Lepton Camera’s Telemetry Enabled State</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetSysTelemetryEnableState(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_SYS_TELEMETRY_ENABLE_STATE_E_PTR enableStatePtr)
LEP_RESULT LEP_SetSysTelemetryEnableState(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_SYS_TELEMETRY_ENABLE_STATE_E enableState)
typedef enum LEP_SYS_TELEMETRY_ENABLE_STATE_E_TAG
{
LEP_TELEMETRY_DISABLED=0,
LEP_TELEMETRY_ENABLED,
LEP_END_TELEMETRY_ENABLE_STATE
}LEP_SYS_TELEMETRY_ENABLE_STATE_E, *LEP_SYS_TELEMETRY_ENABLE_STATE_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Sys.GetGainModeObjChecked">
            <summary>SYS Gain Mode Object<para>This command gets or sets the gain mode object. Set the ROI, temperature thresholds (in Celsius for TLinear disabled mode and Kelvin for TLinear enabled mode), and percentages of the ROI that must meet the temperature threshold criteria for both high to low and low to high automatic gain mode switching.</para><para><strong>Lepton 1.5, 1.6, 2.0, 2.5</strong></para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Field</strong>
                        </term>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Lepton 2.5 Factory Default</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <para>
                                <para>sysGainModeROI</para>
                            </para>
                        </term>
                        <term>0,0,0,0</term>
                        <term>59,59,79,79</term>
                        <term>0,0,59,79</term>
                        <term>0,0,59,79</term>
                        <term>Pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>sys_P_high_to_low</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>100</term>
                        <term>20</term>
                        <term>25</term>
                        <term>Percent</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>sys_P_low_to_high</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>100</term>
                        <term>95</term>
                        <term>90</term>
                        <term>Percent</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>sys_C_high_to_low</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>600</term>
                        <term>110</term>
                        <term>115</term>
                        <term>Celsius</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>sys_C_low_to_high</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>600</term>
                        <term>90</term>
                        <term>85</term>
                        <term>Celsius</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>sys_T_high_to_low</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>900</term>
                        <term>383</term>
                        <term>388</term>
                        <term>Kelvin</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>sys_T_low_to_high</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>900</term>
                        <term>363</term>
                        <term>358</term>
                        <term>Kelvin</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>sysGainRoiPopulation</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>4800</term>
                        <term>4800</term>
                        <term>4800</term>
                        <term>Pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>sysGainModeTempEnabled</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>1</term>
                        <term>0</term>
                        <term>0</term>
                        <term>Boolean</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>sysGainModeFluxThresholdLow</term>
                        <term>0</term>
                        <term>16383</term>
                        <term>8765</term>
                        <term>Calibrated per camera</term>
                        <term>Counts</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>sysGainModeFluxThresholdHigh</term>
                        <term>0</term>
                        <term>16383</term>
                        <term>9876</term>
                        <term>Calibrated per camera</term>
                        <term>Counts</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>Lepton 3.0, 3.5</strong>
                </para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Field</strong>
                        </term>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Lepton 3.5 Factory Default</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <para>
                                <para>sysGainModeROI</para>
                            </para>
                        </term>
                        <term>0,0,0,0</term>
                        <term>119,119,159,159</term>
                        <term>0,0,119,159</term>
                        <term>0,0,119,159</term>
                        <term>Pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>sys_P_high_to_low</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>100</term>
                        <term>20</term>
                        <term>25</term>
                        <term>Percent</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>sys_P_low_to_high</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>100</term>
                        <term>95</term>
                        <term>90</term>
                        <term>Percent</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>sys_C_high_to_low</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>600</term>
                        <term>110</term>
                        <term>115</term>
                        <term>Celsius</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>sys_C_low_to_high</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>600</term>
                        <term>90</term>
                        <term>85</term>
                        <term>Celsius</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>sys_T_high_to_low</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>900</term>
                        <term>383</term>
                        <term>388</term>
                        <term>Kelvin</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>sys_T_low_to_high</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>900</term>
                        <term>363</term>
                        <term>358</term>
                        <term>Kelvin</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>sysGainRoiPopulation</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>19200</term>
                        <term>19200</term>
                        <term>19200</term>
                        <term>Pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>sysGainModeTempEnabled</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>1</term>
                        <term>0</term>
                        <term>0</term>
                        <term>Boolean</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>sysGainModeFluxThresholdLow</term>
                        <term>0</term>
                        <term>16383</term>
                        <term>8765</term>
                        <term>Calibrated per camera</term>
                        <term>Counts</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>sysGainModeFluxThresholdHigh</term>
                        <term>0</term>
                        <term>16383</term>
                        <term>9876</term>
                        <term>Calibrated per camera</term>
                        <term>Counts</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> SYS <strong>0x0200</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong />With Set <strong>0x51</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>14</strong> size of <strong>LEP_SYS_GAIN_MODE_OBJ_T</strong>
Set <strong>14</strong> size of <strong>LEP_SYS_GAIN_MODE_OBJ_T</strong> data type</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_GetSysGainModeObj()</strong>
                        </term>
                        <term>Returns the Lepton Camera’s current Gain mode in <strong>gainModeObjPtr</strong></term>
                    </item>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_SetSysGainModeObj()</strong>
                        </term>
                        <term>Sets the Lepton Camera’s current Gain mode to <strong>gainModeObj</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetSysGainModeObj( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_SYS_GAIN_MODE_OBJ_T_PTR gainModeObjPtr )
LEP_RESULT LEP_SetSysGainModeObj( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_SYS_GAIN_MODE_OBJ_T gainModeObj )
/* Gain Mode Object
*/
typedef struct LEP_SYS_GAIN_MODE_OBJ_T_TAG
{
/* Specified ROI to use for Gain Mode switching */
/* Set of threshold triggers */
/* Population size in pixels within the ROI */
/* True if T-Linear is implemented */
/* calculated from desired temp */
/* calculated from desired temp */
}LEP_SYS_GAIN_MODE_OBJ_T, *LEP_SYS_GAIN_MODE_OBJ_T_PTR;
/* System Gain Mode ROI Structure
*/
typedef struct LEP_SYS_GAIN_MODE_ROI_T_TAG
{
LEP_UINT16 startCol;
LEP_UINT16 startRow;
LEP_UINT16 endCol;
LEP_UINT16 endRow;
}LEP_SYS_GAIN_MODE_ROI_T, *LEP_SYS_GAIN_MODE_ROI_T_PTR;
/* Gain Mode Support
*/
typedef struct LEP_SYS_GAIN_MODE_THRESHOLDS_T_TAG
{
/* Range: [0 - 100], percent */
/* Range: [0 - 100], percent */
/* Range: [0 - 600], degrees C */
/* Range: [0 - 600], degrees C */
/* Range: [0 - 900], Kelvin */
/* Range: [0 - 900], Kelvin */
}LEP_SYS_GAIN_MODE_THRESHOLDS_T, *LEP_SYS_GAIN_MODE_THRESHOLDS_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Sys.GetGainModeObj">
            <summary>SYS Gain Mode Object<para>This command gets or sets the gain mode object. Set the ROI, temperature thresholds (in Celsius for TLinear disabled mode and Kelvin for TLinear enabled mode), and percentages of the ROI that must meet the temperature threshold criteria for both high to low and low to high automatic gain mode switching.</para><para><strong>Lepton 1.5, 1.6, 2.0, 2.5</strong></para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Field</strong>
                        </term>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Lepton 2.5 Factory Default</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <para>
                                <para>sysGainModeROI</para>
                            </para>
                        </term>
                        <term>0,0,0,0</term>
                        <term>59,59,79,79</term>
                        <term>0,0,59,79</term>
                        <term>0,0,59,79</term>
                        <term>Pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>sys_P_high_to_low</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>100</term>
                        <term>20</term>
                        <term>25</term>
                        <term>Percent</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>sys_P_low_to_high</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>100</term>
                        <term>95</term>
                        <term>90</term>
                        <term>Percent</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>sys_C_high_to_low</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>600</term>
                        <term>110</term>
                        <term>115</term>
                        <term>Celsius</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>sys_C_low_to_high</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>600</term>
                        <term>90</term>
                        <term>85</term>
                        <term>Celsius</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>sys_T_high_to_low</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>900</term>
                        <term>383</term>
                        <term>388</term>
                        <term>Kelvin</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>sys_T_low_to_high</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>900</term>
                        <term>363</term>
                        <term>358</term>
                        <term>Kelvin</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>sysGainRoiPopulation</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>4800</term>
                        <term>4800</term>
                        <term>4800</term>
                        <term>Pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>sysGainModeTempEnabled</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>1</term>
                        <term>0</term>
                        <term>0</term>
                        <term>Boolean</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>sysGainModeFluxThresholdLow</term>
                        <term>0</term>
                        <term>16383</term>
                        <term>8765</term>
                        <term>Calibrated per camera</term>
                        <term>Counts</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>sysGainModeFluxThresholdHigh</term>
                        <term>0</term>
                        <term>16383</term>
                        <term>9876</term>
                        <term>Calibrated per camera</term>
                        <term>Counts</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>Lepton 3.0, 3.5</strong>
                </para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Field</strong>
                        </term>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Lepton 3.5 Factory Default</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <para>
                                <para>sysGainModeROI</para>
                            </para>
                        </term>
                        <term>0,0,0,0</term>
                        <term>119,119,159,159</term>
                        <term>0,0,119,159</term>
                        <term>0,0,119,159</term>
                        <term>Pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>sys_P_high_to_low</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>100</term>
                        <term>20</term>
                        <term>25</term>
                        <term>Percent</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>sys_P_low_to_high</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>100</term>
                        <term>95</term>
                        <term>90</term>
                        <term>Percent</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>sys_C_high_to_low</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>600</term>
                        <term>110</term>
                        <term>115</term>
                        <term>Celsius</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>sys_C_low_to_high</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>600</term>
                        <term>90</term>
                        <term>85</term>
                        <term>Celsius</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>sys_T_high_to_low</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>900</term>
                        <term>383</term>
                        <term>388</term>
                        <term>Kelvin</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>sys_T_low_to_high</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>900</term>
                        <term>363</term>
                        <term>358</term>
                        <term>Kelvin</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>sysGainRoiPopulation</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>19200</term>
                        <term>19200</term>
                        <term>19200</term>
                        <term>Pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>sysGainModeTempEnabled</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>1</term>
                        <term>0</term>
                        <term>0</term>
                        <term>Boolean</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>sysGainModeFluxThresholdLow</term>
                        <term>0</term>
                        <term>16383</term>
                        <term>8765</term>
                        <term>Calibrated per camera</term>
                        <term>Counts</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>sysGainModeFluxThresholdHigh</term>
                        <term>0</term>
                        <term>16383</term>
                        <term>9876</term>
                        <term>Calibrated per camera</term>
                        <term>Counts</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> SYS <strong>0x0200</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong />With Set <strong>0x51</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>14</strong> size of <strong>LEP_SYS_GAIN_MODE_OBJ_T</strong>
Set <strong>14</strong> size of <strong>LEP_SYS_GAIN_MODE_OBJ_T</strong> data type</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_GetSysGainModeObj()</strong>
                        </term>
                        <term>Returns the Lepton Camera’s current Gain mode in <strong>gainModeObjPtr</strong></term>
                    </item>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_SetSysGainModeObj()</strong>
                        </term>
                        <term>Sets the Lepton Camera’s current Gain mode to <strong>gainModeObj</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetSysGainModeObj( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_SYS_GAIN_MODE_OBJ_T_PTR gainModeObjPtr )
LEP_RESULT LEP_SetSysGainModeObj( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_SYS_GAIN_MODE_OBJ_T gainModeObj )
/* Gain Mode Object
*/
typedef struct LEP_SYS_GAIN_MODE_OBJ_T_TAG
{
/* Specified ROI to use for Gain Mode switching */
/* Set of threshold triggers */
/* Population size in pixels within the ROI */
/* True if T-Linear is implemented */
/* calculated from desired temp */
/* calculated from desired temp */
}LEP_SYS_GAIN_MODE_OBJ_T, *LEP_SYS_GAIN_MODE_OBJ_T_PTR;
/* System Gain Mode ROI Structure
*/
typedef struct LEP_SYS_GAIN_MODE_ROI_T_TAG
{
LEP_UINT16 startCol;
LEP_UINT16 startRow;
LEP_UINT16 endCol;
LEP_UINT16 endRow;
}LEP_SYS_GAIN_MODE_ROI_T, *LEP_SYS_GAIN_MODE_ROI_T_PTR;
/* Gain Mode Support
*/
typedef struct LEP_SYS_GAIN_MODE_THRESHOLDS_T_TAG
{
/* Range: [0 - 100], percent */
/* Range: [0 - 100], percent */
/* Range: [0 - 600], degrees C */
/* Range: [0 - 600], degrees C */
/* Range: [0 - 900], Kelvin */
/* Range: [0 - 900], Kelvin */
}LEP_SYS_GAIN_MODE_THRESHOLDS_T, *LEP_SYS_GAIN_MODE_THRESHOLDS_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Sys.GetFFCStatesChecked">
            <summary>SYS FFC States<para>This command gets the current FFC state in the camera.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_SYS_FFC_NEVER_COMMANDED</term>
                        <term>LEP_SYS_FFC_IN_PROCESS</term>
                        <term>LEP_SYS_FFC_NEVER_COMMANDED</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> SYS <strong>0x0200</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong />With Set <strong>0x4D</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong>
Set <strong>2</strong> size of an Enum on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.0, 3.5</term>
                        <term>
                            <strong>LEP_GetSysFFCStates()</strong>
                        </term>
                        <term>Returns the Lepton Camera’s current FFC state <strong>ffcStatePtr</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetSysFFCStates( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_SYS_FFC_STATES_E_PTR ffcStatePtr )
/* SYS FFC States Enum
Captures the current camera FFC operation state
*/
typedef enum LEP_SYS_FFC_STATES_E_TAG
{
LEP_SYS_FFC_NEVER_COMMANDED = 0,
LEP_SYS_FFC_IMMINENT,
LEP_SYS_FFC_IN_PROCESS,
LEP_SYS_FFC_DONE,
LEP_SYS_END_FFC_STATES
}LEP_SYS_FFC_STATES_E, *LEP_SYS_FFC_STATES_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Sys.GetFFCStates">
            <summary>SYS FFC States<para>This command gets the current FFC state in the camera.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_SYS_FFC_NEVER_COMMANDED</term>
                        <term>LEP_SYS_FFC_IN_PROCESS</term>
                        <term>LEP_SYS_FFC_NEVER_COMMANDED</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> SYS <strong>0x0200</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong />With Set <strong>0x4D</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong>
Set <strong>2</strong> size of an Enum on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.0, 3.5</term>
                        <term>
                            <strong>LEP_GetSysFFCStates()</strong>
                        </term>
                        <term>Returns the Lepton Camera’s current FFC state <strong>ffcStatePtr</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetSysFFCStates( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_SYS_FFC_STATES_E_PTR ffcStatePtr )
/* SYS FFC States Enum
Captures the current camera FFC operation state
*/
typedef enum LEP_SYS_FFC_STATES_E_TAG
{
LEP_SYS_FFC_NEVER_COMMANDED = 0,
LEP_SYS_FFC_IMMINENT,
LEP_SYS_FFC_IN_PROCESS,
LEP_SYS_FFC_DONE,
LEP_SYS_END_FFC_STATES
}LEP_SYS_FFC_STATES_E, *LEP_SYS_FFC_STATES_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Sys.GetGainModeChecked">
            <summary>SYS Gain Mode<para>This command sets the gain state of the camera. High gain mode provides higher responsivity and lower noise metrics for normal operation (default). Low gain mode provides lower responsivity and higher noise metrics, but with the benefit of increased intra-scene range necessary to view hotter scenes. Auto gain mode allows the camera to automatically switch the gain mode based on the temperature of the scene and thresholds configurable by the user in the “SYS Gain Mode Object” command. Auto gain mode can only be enabled when radiometry mode is enabled due to the temperature measurement dependency.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_SYS_GAIN_MODE_HIGH</term>
                        <term>LEP_SYS_GAIN_MODE_AUTO</term>
                        <term>LEP_SYS_GAIN_MODE_HIGH</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> SYS <strong>0x0200</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong />With Set <strong>0x49</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong>
Set <strong>2</strong> size of an Enum on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_GetSysGainMode()</strong>
                        </term>
                        <term>Returns the Lepton Camera’s current Gain mode in <strong>gainModePtr</strong></term>
                    </item>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_SetSysGainMode()</strong>
                        </term>
                        <term>Sets the Lepton Camera’s current Gain mode to <strong>gainMode</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetSysGainMode( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_SYS_GAIN_MODE_E_PTR gainModePtr)
LEP_RESULT LEP_SetSysGainMode( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_SYS_GAIN_MODE_E gainMode)
typedef enum LEP_SYS_GAIN_MODE_E_TAG
{
LEP_SYS_GAIN_MODE_HIGH = 0,
LEP_SYS_GAIN_MODE_LOW,
LEP_SYS_GAIN_MODE_AUTO,
LEP_SYS_END_GAIN_MODE,
} LEP_SYS_GAIN_MODE_E, *LEP_SYS_GAIN_MODE_E_PTR;;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Sys.GetGainMode">
            <summary>SYS Gain Mode<para>This command sets the gain state of the camera. High gain mode provides higher responsivity and lower noise metrics for normal operation (default). Low gain mode provides lower responsivity and higher noise metrics, but with the benefit of increased intra-scene range necessary to view hotter scenes. Auto gain mode allows the camera to automatically switch the gain mode based on the temperature of the scene and thresholds configurable by the user in the “SYS Gain Mode Object” command. Auto gain mode can only be enabled when radiometry mode is enabled due to the temperature measurement dependency.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_SYS_GAIN_MODE_HIGH</term>
                        <term>LEP_SYS_GAIN_MODE_AUTO</term>
                        <term>LEP_SYS_GAIN_MODE_HIGH</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> SYS <strong>0x0200</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong />With Set <strong>0x49</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong>
Set <strong>2</strong> size of an Enum on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_GetSysGainMode()</strong>
                        </term>
                        <term>Returns the Lepton Camera’s current Gain mode in <strong>gainModePtr</strong></term>
                    </item>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_SetSysGainMode()</strong>
                        </term>
                        <term>Sets the Lepton Camera’s current Gain mode to <strong>gainMode</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetSysGainMode( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_SYS_GAIN_MODE_E_PTR gainModePtr)
LEP_RESULT LEP_SetSysGainMode( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_SYS_GAIN_MODE_E gainMode)
typedef enum LEP_SYS_GAIN_MODE_E_TAG
{
LEP_SYS_GAIN_MODE_HIGH = 0,
LEP_SYS_GAIN_MODE_LOW,
LEP_SYS_GAIN_MODE_AUTO,
LEP_SYS_END_GAIN_MODE,
} LEP_SYS_GAIN_MODE_E, *LEP_SYS_GAIN_MODE_E_PTR;;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Sys.GetFFCStatusChecked">
            <summary>SYS FFC Status<para>This command returns the Flat-Field Correction normalization (FFC) status.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Dimension</strong>
                        </term>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Value</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <para>
                                <para>
                                    <strong>ffcStatusPtr</strong>
                                </para>
                            </para>
                        </term>
                        <term>LEP_SYS_STATUS_WRITE_ERROR</term>
                        <term>LEP_SYS_FRAME_AVERAGE_COLLECTING_FRAMES</term>
                        <term>LEP_SYS_STATUS_READY</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> SYS <strong>0x0200</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x44</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size of an Enum on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetSysFFCStatus()</strong>
                        </term>
                        <term>Returns the current status of the FFC operation in <strong>ffcStatusPtr</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetSysFFCStatus( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr, LEP_SYS_STATUS_E_PTR ffcStatusPtr ))
typedef enum
{
LEP_SYS_STATUS_WRITE_ERROR = -2, //
LEP_SYS_STATUS_ERROR = -1,
LEP_SYS_STATUS_READY = 0,
LEP_SYS_STATUS_BUSY,
LEP_SYS_FRAME_AVERAGE_COLLECTING_FRAMES,
LEP_SYS_STATUS_END
} LEP_SYS_STATUS_E, *LEP_SYS_STATUS_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Sys.GetFFCStatus">
            <summary>SYS FFC Status<para>This command returns the Flat-Field Correction normalization (FFC) status.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Dimension</strong>
                        </term>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Value</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <para>
                                <para>
                                    <strong>ffcStatusPtr</strong>
                                </para>
                            </para>
                        </term>
                        <term>LEP_SYS_STATUS_WRITE_ERROR</term>
                        <term>LEP_SYS_FRAME_AVERAGE_COLLECTING_FRAMES</term>
                        <term>LEP_SYS_STATUS_READY</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> SYS <strong>0x0200</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x44</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size of an Enum on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetSysFFCStatus()</strong>
                        </term>
                        <term>Returns the current status of the FFC operation in <strong>ffcStatusPtr</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetSysFFCStatus( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr, LEP_SYS_STATUS_E_PTR ffcStatusPtr ))
typedef enum
{
LEP_SYS_STATUS_WRITE_ERROR = -2, //
LEP_SYS_STATUS_ERROR = -1,
LEP_SYS_STATUS_READY = 0,
LEP_SYS_STATUS_BUSY,
LEP_SYS_FRAME_AVERAGE_COLLECTING_FRAMES,
LEP_SYS_STATUS_END
} LEP_SYS_STATUS_E, *LEP_SYS_STATUS_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Sys.GetThermalShutdownCountChecked">
            <summary>SYS Thermal Shutdown Count<para>This command returns the current number of frames remaining before a thermal shutdown is executed once the camera temperature exceeds a high-temperature threshold (around 80 degrees C). Once the camera detects the camera exceeded the thermal threshold, this counter begins to count down until zero. When the count reaches ZERO, the camera will shut itself down. A host can use this value to determine when the camera shuts down due to thermal conditions. The default value of 270 is just over 10 seconds at 26 Hz video.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Dimension</strong>
                        </term>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Value</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <para>
                                <para>thermalCounts</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>65535</term>
                        <term>270</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> SYS <strong>0x0200</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x34</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>1</strong> Returns one 16-bit value</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetSysThermalShutdownCount()</strong>
                        </term>
                        <term>Updates <strong>thermalCountsPtr</strong> with the Camera’s current thermal shut down count value.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetSysThermalShutdownCount(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_SYS_THERMAL_SHUTDOWN_COUNTS_T_PTR thermalCountsPtr)
LEP_SYS_THERMAL_SHUTDOWN_COUNTS_T, *LEP_SYS_THERMAL_SHUTDOWN_COUNTS_T_PTR</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Sys.GetThermalShutdownCount">
            <summary>SYS Thermal Shutdown Count<para>This command returns the current number of frames remaining before a thermal shutdown is executed once the camera temperature exceeds a high-temperature threshold (around 80 degrees C). Once the camera detects the camera exceeded the thermal threshold, this counter begins to count down until zero. When the count reaches ZERO, the camera will shut itself down. A host can use this value to determine when the camera shuts down due to thermal conditions. The default value of 270 is just over 10 seconds at 26 Hz video.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Dimension</strong>
                        </term>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Value</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <para>
                                <para>thermalCounts</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>65535</term>
                        <term>270</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> SYS <strong>0x0200</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x34</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>1</strong> Returns one 16-bit value</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetSysThermalShutdownCount()</strong>
                        </term>
                        <term>Updates <strong>thermalCountsPtr</strong> with the Camera’s current thermal shut down count value.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetSysThermalShutdownCount(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_SYS_THERMAL_SHUTDOWN_COUNTS_T_PTR thermalCountsPtr)
LEP_SYS_THERMAL_SHUTDOWN_COUNTS_T, *LEP_SYS_THERMAL_SHUTDOWN_COUNTS_T_PTR</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Sys.GetSceneRoiChecked">
            <summary>SYS Scene ROI Select<para>The camera supports processing of pixels contained within a specified rectangular window or Region of Interest (ROI) to calculate scene statistics (See 4.4.23). This region is defined by 4 parameters: start column, start row, end column, and end row. The region is adjustable to a sub-window. Maximum extents must exclude a 1-pixel boundary from any edge.</para><para><strong>Lepton 1.5, 1.6, 2.0, 2.5</strong></para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Dimension</strong>
                        </term>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Value</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <para>
                                <para>start column</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>&lt; end column</term>
                        <term>0</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>start row</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>&lt; end row</term>
                        <term>0</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>end column</para>
                            </para>
                        </term>
                        <term>&gt; start column</term>
                        <term>79</term>
                        <term>79</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>end row</para>
                            </para>
                        </term>
                        <term>&gt; start row</term>
                        <term>59</term>
                        <term>59</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>Lepton 3.0, 3.5</strong>
                </para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Dimension</strong>
                        </term>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Value</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <para>
                                <para>start column</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>&lt; end column</term>
                        <term>0</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>start row</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>&lt; end row</term>
                        <term>0</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>end column</para>
                            </para>
                        </term>
                        <term>&gt; start column</term>
                        <term>159</term>
                        <term>159</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>end row</para>
                            </para>
                        </term>
                        <term>&gt; start row</term>
                        <term>119</term>
                        <term>119</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> VID <strong>0x0200</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x30</strong></para>
                <para>With Set <strong>0x31</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>4</strong> size of <strong>LEP_SYS_VIDEO_ROI_T</strong> data type</para>
                <para>Set <strong>4</strong> size of <strong>LEP_SYS_VIDEO_ROI_T</strong> data type</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetSysSceneRoi()</strong>
                        </term>
                        <term>Updates <strong>sceneRoiPtr</strong> with the Camera’s current Scene ROI</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_</strong>
                            <strong>SetSysSceneRoi()</strong>
                        </term>
                        <term>Sets Camera’s current Scene ROI to <strong>sceneRoi</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetSysSceneRoi(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_SYS_VIDEO_ROI_T_PTR sceneRoiPtr)
LEP_RESULT LEP_SetSysSceneRoi(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_SYS_VIDEO_ROI_T sceneRoi)
/* SYS Scene ROI Structure
*/
typedef struct LEP_SYS_VIDEO_ROI_T_TAG
{
LEP_UINT16 startCol;
LEP_UINT16 startRow;
LEP_UINT16 endCol;
LEP_UINT16 endRow;
} LEP_SYS_VIDEO_ROI_T, *LEP_SYS_VIDEO_ROI_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Sys.GetSceneRoi">
            <summary>SYS Scene ROI Select<para>The camera supports processing of pixels contained within a specified rectangular window or Region of Interest (ROI) to calculate scene statistics (See 4.4.23). This region is defined by 4 parameters: start column, start row, end column, and end row. The region is adjustable to a sub-window. Maximum extents must exclude a 1-pixel boundary from any edge.</para><para><strong>Lepton 1.5, 1.6, 2.0, 2.5</strong></para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Dimension</strong>
                        </term>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Value</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <para>
                                <para>start column</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>&lt; end column</term>
                        <term>0</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>start row</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>&lt; end row</term>
                        <term>0</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>end column</para>
                            </para>
                        </term>
                        <term>&gt; start column</term>
                        <term>79</term>
                        <term>79</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>end row</para>
                            </para>
                        </term>
                        <term>&gt; start row</term>
                        <term>59</term>
                        <term>59</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>Lepton 3.0, 3.5</strong>
                </para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Dimension</strong>
                        </term>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Value</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <para>
                                <para>start column</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>&lt; end column</term>
                        <term>0</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>start row</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>&lt; end row</term>
                        <term>0</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>end column</para>
                            </para>
                        </term>
                        <term>&gt; start column</term>
                        <term>159</term>
                        <term>159</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>end row</para>
                            </para>
                        </term>
                        <term>&gt; start row</term>
                        <term>119</term>
                        <term>119</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> VID <strong>0x0200</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x30</strong></para>
                <para>With Set <strong>0x31</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>4</strong> size of <strong>LEP_SYS_VIDEO_ROI_T</strong> data type</para>
                <para>Set <strong>4</strong> size of <strong>LEP_SYS_VIDEO_ROI_T</strong> data type</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetSysSceneRoi()</strong>
                        </term>
                        <term>Updates <strong>sceneRoiPtr</strong> with the Camera’s current Scene ROI</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_</strong>
                            <strong>SetSysSceneRoi()</strong>
                        </term>
                        <term>Sets Camera’s current Scene ROI to <strong>sceneRoi</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetSysSceneRoi(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_SYS_VIDEO_ROI_T_PTR sceneRoiPtr)
LEP_RESULT LEP_SetSysSceneRoi(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_SYS_VIDEO_ROI_T sceneRoi)
/* SYS Scene ROI Structure
*/
typedef struct LEP_SYS_VIDEO_ROI_T_TAG
{
LEP_UINT16 startCol;
LEP_UINT16 startRow;
LEP_UINT16 endCol;
LEP_UINT16 endRow;
} LEP_SYS_VIDEO_ROI_T, *LEP_SYS_VIDEO_ROI_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Sys.GetSceneStatisticsChecked">
            <summary>SYS Camera Video Scene Statistics<para>This command returns the current scene statistics for the video frame defined by the SYS ROI (see section 4.4.24 ). The statistics captured are scene mean intensity in counts, minimum and maximum intensity in counts, and the number of pixels in the ROI. Lepton scene intensities range from 0 to 16383. The range drops to 0 to 255 when in 8-bit AGC mode. Maximum number of pixels in the scene depends upon which camera, see below tables. When TLinear mode is enabled (available in the Radiometric releases), the camera output represents temperature values, and the scene statistics are reported in Kelvin x 100.</para><para><strong>Lepton 1.5, 1.6, 2.0, 2.5</strong></para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Dimension</strong>
                        </term>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <para>
                                <para>minimum intensity</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>2^14 -1</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>maximum intensity</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>2^14 -1</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>mean intensity</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>2^14 -1</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>number of pixels</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>4,800</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>Lepton 3.0, 3.5</strong>
                </para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Dimension</strong>
                        </term>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <para>
                                <para>minimum intensity</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>2^14 -1</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>maximum intensity</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>2^14 -1</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>mean intensity</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>2^14 -1</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>number of pixels</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>19,200</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> SYS <strong>0x0200</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x2C</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>4</strong> Returns four 16-bit values</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetSysSceneStatistics()</strong>
                        </term>
                        <term>Updates <strong>sceneStatisticsPtr</strong> with the Camera’s current scene statistics.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetSysSceneStatistics( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_SYS_SCENE_STATISTICS_T_PTR sceneStatisticsPtr )
typedef struct LEP_SYS_SCENE_STATISTICS_T_TAG
{
LEP_UINT16 meanIntensity;
LEP_UINT16 maxIntensity;
LEP_UINT16 minIntensity;
LEP_UINT16 numPixels;
} LEP_SYS_SCENE_STATISTICS_T, *LEP_SYS_SCENE_STATISTICS_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Sys.GetSceneStatistics">
            <summary>SYS Camera Video Scene Statistics<para>This command returns the current scene statistics for the video frame defined by the SYS ROI (see section 4.4.24 ). The statistics captured are scene mean intensity in counts, minimum and maximum intensity in counts, and the number of pixels in the ROI. Lepton scene intensities range from 0 to 16383. The range drops to 0 to 255 when in 8-bit AGC mode. Maximum number of pixels in the scene depends upon which camera, see below tables. When TLinear mode is enabled (available in the Radiometric releases), the camera output represents temperature values, and the scene statistics are reported in Kelvin x 100.</para><para><strong>Lepton 1.5, 1.6, 2.0, 2.5</strong></para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Dimension</strong>
                        </term>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <para>
                                <para>minimum intensity</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>2^14 -1</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>maximum intensity</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>2^14 -1</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>mean intensity</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>2^14 -1</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>number of pixels</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>4,800</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>Lepton 3.0, 3.5</strong>
                </para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Dimension</strong>
                        </term>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <para>
                                <para>minimum intensity</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>2^14 -1</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>maximum intensity</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>2^14 -1</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>mean intensity</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>2^14 -1</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>number of pixels</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>19,200</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> SYS <strong>0x0200</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x2C</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>4</strong> Returns four 16-bit values</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetSysSceneStatistics()</strong>
                        </term>
                        <term>Updates <strong>sceneStatisticsPtr</strong> with the Camera’s current scene statistics.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetSysSceneStatistics( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_SYS_SCENE_STATISTICS_T_PTR sceneStatisticsPtr )
typedef struct LEP_SYS_SCENE_STATISTICS_T_TAG
{
LEP_UINT16 meanIntensity;
LEP_UINT16 maxIntensity;
LEP_UINT16 minIntensity;
LEP_UINT16 numPixels;
} LEP_SYS_SCENE_STATISTICS_T, *LEP_SYS_SCENE_STATISTICS_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Sys.GetTelemetryLocationChecked">
            <summary>SYS Telemetry Location<para>This command Sets and Gets the Telemetry Location.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_TELEMETRY_LOCATION_HEADER</term>
                        <term>LEP_TELEMETRY_LOCATION_FOOTER</term>
                        <term>LEP_TELEMETRY_LOCATION_FOOTER</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> SYS <strong>0x0200</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong />With Set <strong>0x1D</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong>
Set <strong>2</strong> size of an Enum on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_</strong>
                            <strong>GetSysTelemetryLocation()</strong>
                        </term>
                        <term>Returns the location of Telemetry data as an enum</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_</strong>
                            <strong>SetSysTelemetryLocation()</strong>
                        </term>
                        <term>Sets the location of Telemetry data as an enum</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetSysTelemetryLocation(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_SYS_TELEMETRY_LOCATION_E_PTR telemetryLocationPtr)
LEP_RESULT LEP_SetSysTelemetryLocation(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_SYS_TELEMETRY_LOCATION_E telemetryLocation)
typedef enum LEP_SYS_TELEMETRY_LOCATION_E_TAG
{
LEP_TELEMETRY_LOCATION_HEADER=0,
LEP_TELEMETRY_LOCATION_FOOTER,
LEP_END_TELEMETRY_LOCATION
}LEP_SYS_TELEMETRY_LOCATION_E, *LEP_SYS_TELEMETRY_LOCATION_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Sys.GetTelemetryLocation">
            <summary>SYS Telemetry Location<para>This command Sets and Gets the Telemetry Location.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_TELEMETRY_LOCATION_HEADER</term>
                        <term>LEP_TELEMETRY_LOCATION_FOOTER</term>
                        <term>LEP_TELEMETRY_LOCATION_FOOTER</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> SYS <strong>0x0200</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong />With Set <strong>0x1D</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong>
Set <strong>2</strong> size of an Enum on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_</strong>
                            <strong>GetSysTelemetryLocation()</strong>
                        </term>
                        <term>Returns the location of Telemetry data as an enum</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_</strong>
                            <strong>SetSysTelemetryLocation()</strong>
                        </term>
                        <term>Sets the location of Telemetry data as an enum</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetSysTelemetryLocation(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_SYS_TELEMETRY_LOCATION_E_PTR telemetryLocationPtr)
LEP_RESULT LEP_SetSysTelemetryLocation(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_SYS_TELEMETRY_LOCATION_E telemetryLocation)
typedef enum LEP_SYS_TELEMETRY_LOCATION_E_TAG
{
LEP_TELEMETRY_LOCATION_HEADER=0,
LEP_TELEMETRY_LOCATION_FOOTER,
LEP_END_TELEMETRY_LOCATION
}LEP_SYS_TELEMETRY_LOCATION_E, *LEP_SYS_TELEMETRY_LOCATION_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Sys.GetTelemetryEnableStateChecked">
            <summary>SYS Telemetry Enable State<para>This command returns the Telemetry Enabled State as an Enum.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_TELEMETRY_DISABLED</term>
                        <term>LEP_TELEMETRY_ENABLED</term>
                        <term>LEP_TELEMETRY_DISABLED</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> SYS <strong>0x0200</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong />With Set <strong>0x19</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong>
Set <strong>2</strong> size of an Enum on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_</strong>
                            <strong>GetSysTelemetryEnableState()</strong>
                        </term>
                        <term>Returns the Lepton Camera’s Telemetry Enable State</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_</strong>
                            <strong>SetSysTelemetryEnableState()</strong>
                        </term>
                        <term>Sets the Lepton Camera’s Telemetry Enabled State</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetSysTelemetryEnableState(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_SYS_TELEMETRY_ENABLE_STATE_E_PTR enableStatePtr)
LEP_RESULT LEP_SetSysTelemetryEnableState(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_SYS_TELEMETRY_ENABLE_STATE_E enableState)
typedef enum LEP_SYS_TELEMETRY_ENABLE_STATE_E_TAG
{
LEP_TELEMETRY_DISABLED=0,
LEP_TELEMETRY_ENABLED,
LEP_END_TELEMETRY_ENABLE_STATE
}LEP_SYS_TELEMETRY_ENABLE_STATE_E, *LEP_SYS_TELEMETRY_ENABLE_STATE_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Sys.GetTelemetryEnableState">
            <summary>SYS Telemetry Enable State<para>This command returns the Telemetry Enabled State as an Enum.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_TELEMETRY_DISABLED</term>
                        <term>LEP_TELEMETRY_ENABLED</term>
                        <term>LEP_TELEMETRY_DISABLED</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> SYS <strong>0x0200</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong />With Set <strong>0x19</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong>
Set <strong>2</strong> size of an Enum on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_</strong>
                            <strong>GetSysTelemetryEnableState()</strong>
                        </term>
                        <term>Returns the Lepton Camera’s Telemetry Enable State</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_</strong>
                            <strong>SetSysTelemetryEnableState()</strong>
                        </term>
                        <term>Sets the Lepton Camera’s Telemetry Enabled State</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetSysTelemetryEnableState(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_SYS_TELEMETRY_ENABLE_STATE_E_PTR enableStatePtr)
LEP_RESULT LEP_SetSysTelemetryEnableState(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_SYS_TELEMETRY_ENABLE_STATE_E enableState)
typedef enum LEP_SYS_TELEMETRY_ENABLE_STATE_E_TAG
{
LEP_TELEMETRY_DISABLED=0,
LEP_TELEMETRY_ENABLED,
LEP_END_TELEMETRY_ENABLE_STATE
}LEP_SYS_TELEMETRY_ENABLE_STATE_E, *LEP_SYS_TELEMETRY_ENABLE_STATE_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Sys.GetFpaTemperatureKelvinChecked">
            <summary>SYS FPA Temperature Kelvin<para>This command returns the Lepton Camera’s FPA Temperature in Kelvin.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>0</term>
                        <term>65535</term>
                        <term>Kelvin</term>
                        <term>100</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> SYS <strong>0x0200</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x14</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>1</strong> size of the <strong>LEP_SYS_FPA_TEMPERATURE_KELVIN_T data type</strong></para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetSysFpaTemperatureKelvin()</strong>
                        </term>
                        <term>Returns the Lepton Camera’s FPA Temperature in Kelvin</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetSysFpaTemperatureKelvin(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_SYS_FPA_TEMPERATURE_KELVIN_T_PTR fpaTemperaturePtr)
typedef LEP_UINT16 LEP_SYS_FPA_TEMPERATURE_KELVIN_T, *LEP_SYS_FPA_TEMPERATURE_KELVIN_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Sys.GetFpaTemperatureKelvin">
            <summary>SYS FPA Temperature Kelvin<para>This command returns the Lepton Camera’s FPA Temperature in Kelvin.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>0</term>
                        <term>65535</term>
                        <term>Kelvin</term>
                        <term>100</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> SYS <strong>0x0200</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x14</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>1</strong> size of the <strong>LEP_SYS_FPA_TEMPERATURE_KELVIN_T data type</strong></para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetSysFpaTemperatureKelvin()</strong>
                        </term>
                        <term>Returns the Lepton Camera’s FPA Temperature in Kelvin</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetSysFpaTemperatureKelvin(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_SYS_FPA_TEMPERATURE_KELVIN_T_PTR fpaTemperaturePtr)
typedef LEP_UINT16 LEP_SYS_FPA_TEMPERATURE_KELVIN_T, *LEP_SYS_FPA_TEMPERATURE_KELVIN_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Sys.GetAuxTemperatureKelvinChecked">
            <summary>SYS AUX Temperature Kelvin<para>This command returns the Lepton Camera’s AUX Temperature in Kelvin.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>0</term>
                        <term>16383</term>
                        <term>Kelvin</term>
                        <term>100</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> SYS <strong>0x0200</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x10</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>1</strong> size of the <strong>LEP_SYS_AUX_TEMPERATURE_KELVIN_T data type</strong></para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_GetSysAuxTemperatureKelvin()</strong>
                        </term>
                        <term>Returns the Lepton Camera’s AUX Temperature in Kelvin</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetSysAuxTemperatureKelvin(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_SYS_AUX_TEMPERATURE_KELVIN_T_PTR auxTemperaturePtr);
typedef LEP_UINT16 LEP_SYS_AUX_TEMPERATURE_KELVIN_T, *LEP_SYS_AUX_TEMPERATURE_KELVIN_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Sys.GetAuxTemperatureKelvin">
            <summary>SYS AUX Temperature Kelvin<para>This command returns the Lepton Camera’s AUX Temperature in Kelvin.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>0</term>
                        <term>16383</term>
                        <term>Kelvin</term>
                        <term>100</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> SYS <strong>0x0200</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x10</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>1</strong> size of the <strong>LEP_SYS_AUX_TEMPERATURE_KELVIN_T data type</strong></para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_GetSysAuxTemperatureKelvin()</strong>
                        </term>
                        <term>Returns the Lepton Camera’s AUX Temperature in Kelvin</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetSysAuxTemperatureKelvin(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_SYS_AUX_TEMPERATURE_KELVIN_T_PTR auxTemperaturePtr);
typedef LEP_UINT16 LEP_SYS_AUX_TEMPERATURE_KELVIN_T, *LEP_SYS_AUX_TEMPERATURE_KELVIN_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Sys.GetFpaTemperatureCelsiusChecked">
            <summary>SYS FPA Temperature Celsius – helper function<para>This is a SDK command that returns the Lepton Camera’s FPA Temperature in degrees Celsius. This function has no command ID since it is a helper function and uses the function <strong>LEP_GetSysFpaTemperatureKelvin()</strong>to get the current temperature in Kelvin before converting to degrees Celsius.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>-</term>
                        <term>-</term>
                        <term>Degrees Celsius</term>
                        <term>N/A (float value)</term>
                    </item>
                </list>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetSysFpaTemperatureCelsius()</strong>
                        </term>
                        <term>Returns the Lepton Camera’s FPA Temperature in degrees Celsius</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetSysFpaTemperatureCelsius(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_SYS_FPA_TEMPERATURE_CELSIUS_T_PTR fpaTemperaturePtr)
typedef LEP_FLOAT32 LEP_SYS_FPA_TEMPERATURE_CELSIUS_T, *LEP_SYS_FPA_TEMPERATURE_CELSIUS_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Sys.GetFpaTemperatureCelsius">
            <summary>SYS FPA Temperature Celsius – helper function<para>This is a SDK command that returns the Lepton Camera’s FPA Temperature in degrees Celsius. This function has no command ID since it is a helper function and uses the function <strong>LEP_GetSysFpaTemperatureKelvin()</strong>to get the current temperature in Kelvin before converting to degrees Celsius.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>-</term>
                        <term>-</term>
                        <term>Degrees Celsius</term>
                        <term>N/A (float value)</term>
                    </item>
                </list>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetSysFpaTemperatureCelsius()</strong>
                        </term>
                        <term>Returns the Lepton Camera’s FPA Temperature in degrees Celsius</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetSysFpaTemperatureCelsius(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_SYS_FPA_TEMPERATURE_CELSIUS_T_PTR fpaTemperaturePtr)
typedef LEP_FLOAT32 LEP_SYS_FPA_TEMPERATURE_CELSIUS_T, *LEP_SYS_FPA_TEMPERATURE_CELSIUS_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Sys.GetAuxTemperatureCelsiusChecked">
            <summary>SYS AUX Temperature Celsius – helper function<para>This is a SDK command that returns the Lepton Camera’s AUX Temperature in degrees Celsius. This function has no command ID since it is a helper function and uses the function <strong>LEP_GetSysAuxTemperatureKelvin()</strong>to get the current temperature in Kelvin before converting to degrees Celsius.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>-</term>
                        <term>-</term>
                        <term>Degrees Celsius</term>
                        <term>N/A (float value)</term>
                    </item>
                </list>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetSysAuxTemperatureCelsius()</strong>
                        </term>
                        <term>Returns the Lepton Camera’s AUX Temperature in degrees Celsius</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetSysAuxTemperatureCelsius( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_SYS_AUX_TEMPERATURE_CELSIUS_T_PTR auxTemperaturePtr )
typedef LEP_FLOAT32 LEP_SYS_AUX_TEMPERATURE_CELSIUS_T, *LEP_SYS_AUX_TEMPERATURE_CELSIUS_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Sys.GetAuxTemperatureCelsius">
            <summary>SYS AUX Temperature Celsius – helper function<para>This is a SDK command that returns the Lepton Camera’s AUX Temperature in degrees Celsius. This function has no command ID since it is a helper function and uses the function <strong>LEP_GetSysAuxTemperatureKelvin()</strong>to get the current temperature in Kelvin before converting to degrees Celsius.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>-</term>
                        <term>-</term>
                        <term>Degrees Celsius</term>
                        <term>N/A (float value)</term>
                    </item>
                </list>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetSysAuxTemperatureCelsius()</strong>
                        </term>
                        <term>Returns the Lepton Camera’s AUX Temperature in degrees Celsius</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetSysAuxTemperatureCelsius( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_SYS_AUX_TEMPERATURE_CELSIUS_T_PTR auxTemperaturePtr )
typedef LEP_FLOAT32 LEP_SYS_AUX_TEMPERATURE_CELSIUS_T, *LEP_SYS_AUX_TEMPERATURE_CELSIUS_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Sys.GetCameraUpTimeChecked">
            <summary>SYS Camera Uptime<para>This command returns the Lepton Camera’s current uptime in milliseconds. The uptime is the time since the camera was brought out of Standby. The uptime counter is implemented as a 32-bit counter and as such will roll-over after the maximum count of 0xFFFFFFFF (1193 hours) is reached and restart at 0x00000000.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>0</term>
                        <term>4294967295</term>
                        <term>N/A</term>
                        <term>milliseconds</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> SYS <strong>0x0200</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x0C</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size of the <strong>LEP_UINT32 data type</strong></para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetSysCameraUpTime()</strong>
                        </term>
                        <term>Updates <strong>sysCameraUpTimePtr</strong> with the Camera’s current uptime in milliseconds</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetSysCameraUpTime(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_UINT32 *sysCameraUpTimePtr)</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Sys.GetCameraUpTime">
            <summary>SYS Camera Uptime<para>This command returns the Lepton Camera’s current uptime in milliseconds. The uptime is the time since the camera was brought out of Standby. The uptime counter is implemented as a 32-bit counter and as such will roll-over after the maximum count of 0xFFFFFFFF (1193 hours) is reached and restart at 0x00000000.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>0</term>
                        <term>4294967295</term>
                        <term>N/A</term>
                        <term>milliseconds</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> SYS <strong>0x0200</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x0C</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size of the <strong>LEP_UINT32 data type</strong></para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetSysCameraUpTime()</strong>
                        </term>
                        <term>Updates <strong>sysCameraUpTimePtr</strong> with the Camera’s current uptime in milliseconds</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetSysCameraUpTime(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_UINT32 *sysCameraUpTimePtr)</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Sys.GetCustSerialNumberChecked">
            <summary>SYS Camera Customer Serial Number<para>This command returns the Lepton Camera’s Customer serial number as a 32-byte character string. The Customer Serial Number is a (32 byte string) identifier unique to a specific configuration of module; essentially a module Configuration ID. This serial number is unwritten in the current release.</para><para>This command requires the Host to allocate the memory buffer before calling this function. The address to this memory block should be passed in as <strong>sysSerialNumberPtr</strong></para><para><strong>SDK Module ID:</strong> SYS <strong>0x0200</strong></para><para><strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x28</strong></para><para><strong>SDK Data Length:</strong> Get <strong>16</strong> 32-byte string Data type</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetSysCustSerialNumber()</strong>
                        </term>
                        <term>Updates <strong>sysSerialNumberPtr</strong> with the Camera’s 32-byte serial number.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetSysCustSerialNumber( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_SYS_CUST_SERIAL_NUMBER_T_PTR sysSerialNumberPtr )
typedef LEP_CHAR8 *LEP_SYS_CUST_SERIAL_NUMBER_T, *LEP_SYS_CUST_SERIAL_NUMBER_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Sys.GetCustSerialNumber">
            <summary>SYS Camera Customer Serial Number<para>This command returns the Lepton Camera’s Customer serial number as a 32-byte character string. The Customer Serial Number is a (32 byte string) identifier unique to a specific configuration of module; essentially a module Configuration ID. This serial number is unwritten in the current release.</para><para>This command requires the Host to allocate the memory buffer before calling this function. The address to this memory block should be passed in as <strong>sysSerialNumberPtr</strong></para><para><strong>SDK Module ID:</strong> SYS <strong>0x0200</strong></para><para><strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x28</strong></para><para><strong>SDK Data Length:</strong> Get <strong>16</strong> 32-byte string Data type</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetSysCustSerialNumber()</strong>
                        </term>
                        <term>Updates <strong>sysSerialNumberPtr</strong> with the Camera’s 32-byte serial number.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetSysCustSerialNumber( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_SYS_CUST_SERIAL_NUMBER_T_PTR sysSerialNumberPtr )
typedef LEP_CHAR8 *LEP_SYS_CUST_SERIAL_NUMBER_T, *LEP_SYS_CUST_SERIAL_NUMBER_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Sys.GetFlirSerialNumberChecked">
            <summary>SYS FLIR Serial Number<para>This command returns the Lepton Camera’s serial number as a 64-bit unsigned long integer (unsigned long long).</para><para><strong>SDK Module ID:</strong> SYS <strong>0x0200</strong></para><para><strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x08</strong></para><para><strong>SDK Data Length:</strong> Get <strong>4</strong> size of the <strong>LEP_UINT64 data type</strong></para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetSysFlirSerialNumber()</strong>
                        </term>
                        <term>Returns the Lepton Camera’s serial number as a 64-bit unsigned long integer (unsigned long long).</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetSysFlirSerialNumber(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_SYS_FLIR_SERIAL_NUMBER_T_PTR sysSerialNumberBufPtr)
typedef LEP_UINT64 LEP_SYS_FLIR_SERIAL_NUMBER_T, *LEP_SYS_FLIR_SERIAL_NUMBER_T_PTR;
</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Sys.GetFlirSerialNumber">
            <summary>SYS FLIR Serial Number<para>This command returns the Lepton Camera’s serial number as a 64-bit unsigned long integer (unsigned long long).</para><para><strong>SDK Module ID:</strong> SYS <strong>0x0200</strong></para><para><strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x08</strong></para><para><strong>SDK Data Length:</strong> Get <strong>4</strong> size of the <strong>LEP_UINT64 data type</strong></para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetSysFlirSerialNumber()</strong>
                        </term>
                        <term>Returns the Lepton Camera’s serial number as a 64-bit unsigned long integer (unsigned long long).</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetSysFlirSerialNumber(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_SYS_FLIR_SERIAL_NUMBER_T_PTR sysSerialNumberBufPtr)
typedef LEP_UINT64 LEP_SYS_FLIR_SERIAL_NUMBER_T, *LEP_SYS_FLIR_SERIAL_NUMBER_T_PTR;
</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Sys.GetStatusChecked">
            <summary>SYS Status<para>This command returns the system status: System Ready, System Initializing, System in Low-Power Mode, System Going into Standby, and FFC in Progress.</para><para><strong>SDK Module ID:</strong> SYS <strong>0x0200</strong></para><para><strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x04</strong></para><para><strong>SDK Data Length:</strong> Get <strong>4</strong> size of the <strong>LEP_STATUS_T data type</strong></para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetSysStatus()</strong>
                        </term>
                        <term>Updates <strong>sysStatusPtr</strong> with the Camera’s current system status</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetSysStatus(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_STATUS_T_PTR sysStatusPtr)
typedef struct
{
LEP_SYSTEM_STATUS_STATES_E camStatus;
LEP_UINT16 commandCount;
LEP_UINT16 reserved;
}LEP_STATUS_T, *LEP_STATUS_T_PTR;
typedef enum LEP_SYSTEM_STATUS_STATES_E_TAG
{
LEP_SYSTEM_READY=0,
LEP_SYSTEM_INITIALIZING,
LEP_SYSTEM_IN_LOW_POWER_MODE,
LEP_SYSTEM_GOING_INTO_STANDBY,
LEP_SYSTEM_FLAT_FIELD_IN_PROCESS,
LEP_SYSTEM_END_STATES
}LEP_SYSTEM_STATUS_STATES_E, *LEP_SYSTEM_STATUS_STATES_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Sys.GetStatus">
            <summary>SYS Status<para>This command returns the system status: System Ready, System Initializing, System in Low-Power Mode, System Going into Standby, and FFC in Progress.</para><para><strong>SDK Module ID:</strong> SYS <strong>0x0200</strong></para><para><strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x04</strong></para><para><strong>SDK Data Length:</strong> Get <strong>4</strong> size of the <strong>LEP_STATUS_T data type</strong></para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetSysStatus()</strong>
                        </term>
                        <term>Updates <strong>sysStatusPtr</strong> with the Camera’s current system status</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetSysStatus(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_STATUS_T_PTR sysStatusPtr)
typedef struct
{
LEP_SYSTEM_STATUS_STATES_E camStatus;
LEP_UINT16 commandCount;
LEP_UINT16 reserved;
}LEP_STATUS_T, *LEP_STATUS_T_PTR;
typedef enum LEP_SYSTEM_STATUS_STATES_E_TAG
{
LEP_SYSTEM_READY=0,
LEP_SYSTEM_INITIALIZING,
LEP_SYSTEM_IN_LOW_POWER_MODE,
LEP_SYSTEM_GOING_INTO_STANDBY,
LEP_SYSTEM_FLAT_FIELD_IN_PROCESS,
LEP_SYSTEM_END_STATES
}LEP_SYSTEM_STATUS_STATES_E, *LEP_SYSTEM_STATUS_STATES_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Sys.RunFFCNormalizationChecked">
            <summary>SYS Run FFC Normalization<para>This command executes the camera’s Flat-Field Correction (FFC) normalization. This command executes synchronously. Internally this command polls the camera status to determine when this command completes (see LEP_GetSysFFCStatus() ), and only returns when completed.</para><para><strong>SDK Module ID:</strong> SYS <strong>0x0200</strong></para><para><strong>SDK Command ID:</strong> Base <strong />With Run <strong>0x42</strong></para><para><strong>SDK Data Length:</strong> Run <strong>0</strong> size a run command argument</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_RunSysFFCNormalization()</strong>
                        </term>
                        <term>Executes the FFC command.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_RunSysFFCNormalization(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr);</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Sys.RunFFCNormalization">
            <summary>SYS Run FFC Normalization<para>This command executes the camera’s Flat-Field Correction (FFC) normalization. This command executes synchronously. Internally this command polls the camera status to determine when this command completes (see LEP_GetSysFFCStatus() ), and only returns when completed.</para><para><strong>SDK Module ID:</strong> SYS <strong>0x0200</strong></para><para><strong>SDK Command ID:</strong> Base <strong />With Run <strong>0x42</strong></para><para><strong>SDK Data Length:</strong> Run <strong>0</strong> size a run command argument</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_RunSysFFCNormalization()</strong>
                        </term>
                        <term>Executes the FFC command.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_RunSysFFCNormalization(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr);</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Sys.RunFrameAverageChecked">
            <summary>SYS Frame Average<para>This command executes the average frames command. Executing this command causes the camera to sum together a number of frames, divide the summed frame by the number of frames summed and generate a result frame containing the average of the summed frames.</para><para>For Lepton 1.5, 1.6, 2.0 and 2.5, the number of frames to average is set by LEP_SYS_SetFramesToAverage(). For Lepton 3.0 and 3.5, the number of frames is currently fixed at 8.</para><para><strong>SDK Module ID:</strong> SYS <strong>0x0200</strong></para><para><strong>SDK Command ID:</strong> Base <strong />With Run <strong>0x22</strong></para><para><strong>SDK Data Length:</strong> Run <strong>0</strong> size a run command argument</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_RunFrameAverage()</strong>
                        </term>
                        <term>Executes the frame average command. The number of frames to average is set by separate command: LEP_SYS_SetFramesToAverage().</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_RunFrameAverage(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr);</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Sys.RunFrameAverage">
            <summary>SYS Frame Average<para>This command executes the average frames command. Executing this command causes the camera to sum together a number of frames, divide the summed frame by the number of frames summed and generate a result frame containing the average of the summed frames.</para><para>For Lepton 1.5, 1.6, 2.0 and 2.5, the number of frames to average is set by LEP_SYS_SetFramesToAverage(). For Lepton 3.0 and 3.5, the number of frames is currently fixed at 8.</para><para><strong>SDK Module ID:</strong> SYS <strong>0x0200</strong></para><para><strong>SDK Command ID:</strong> Base <strong />With Run <strong>0x22</strong></para><para><strong>SDK Data Length:</strong> Run <strong>0</strong> size a run command argument</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_RunFrameAverage()</strong>
                        </term>
                        <term>Executes the frame average command. The number of frames to average is set by separate command: LEP_SYS_SetFramesToAverage().</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_RunFrameAverage(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr);</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Sys.RunAverageFramesChecked(Lepton.CCI.Sys.FrameAverageDivisor)">
            <summary>SYS Average Frames – Aggregate Command<para>This is an SDK aggregate command that executes the frame average command using a parameter to specify the number of frames to average.</para><para>Executing this command causes the camera to sum together a number of frames, divide the summed frame by the number of frames summed and generate a result frame containing the average of the summed frames. The number of frames to average is specified by parameter to this function.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 1.5, 1.6, 2.0</term>
                        <term>
                            <strong>LEP_RunSysAverageFrames()</strong>
                        </term>
                        <term>Executes the frame average command using the number of frames to average is specified by parameter to this function<em><strong>. Aggregate command.</strong></em></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_RunSysAverageFrames (LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_SYS_FRAME_AVERAGE_DIVISOR_E numFrameToAverage);
typedef enum LEP_SYS_FRAME_AVERAGE_DIVISOR_E_TAG
{
LEP_SYS_FA_DIV_1 = 0,
LEP_SYS_FA_DIV_2,
LEP_SYS_FA_DIV_4,
LEP_SYS_FA_DIV_8,
LEP_SYS_FA_DIV_16,
LEP_SYS_FA_DIV_32,
LEP_SYS_FA_DIV_64,
LEP_SYS_FA_DIV_128,
LEP_SYS_END_FA_DIV
}LEP_SYS_FRAME_AVERAGE_DIVISOR_E, *LEP_SYS_FRAME_AVERAGE_DIVISOR_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Sys.RunAverageFrames(Lepton.CCI.Sys.FrameAverageDivisor)">
            <summary>SYS Average Frames – Aggregate Command<para>This is an SDK aggregate command that executes the frame average command using a parameter to specify the number of frames to average.</para><para>Executing this command causes the camera to sum together a number of frames, divide the summed frame by the number of frames summed and generate a result frame containing the average of the summed frames. The number of frames to average is specified by parameter to this function.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 1.5, 1.6, 2.0</term>
                        <term>
                            <strong>LEP_RunSysAverageFrames()</strong>
                        </term>
                        <term>Executes the frame average command using the number of frames to average is specified by parameter to this function<em><strong>. Aggregate command.</strong></em></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_RunSysAverageFrames (LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_SYS_FRAME_AVERAGE_DIVISOR_E numFrameToAverage);
typedef enum LEP_SYS_FRAME_AVERAGE_DIVISOR_E_TAG
{
LEP_SYS_FA_DIV_1 = 0,
LEP_SYS_FA_DIV_2,
LEP_SYS_FA_DIV_4,
LEP_SYS_FA_DIV_8,
LEP_SYS_FA_DIV_16,
LEP_SYS_FA_DIV_32,
LEP_SYS_FA_DIV_64,
LEP_SYS_FA_DIV_128,
LEP_SYS_END_FA_DIV
}LEP_SYS_FRAME_AVERAGE_DIVISOR_E, *LEP_SYS_FRAME_AVERAGE_DIVISOR_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Sys.RunPingChecked">
            <summary>SYS Ping Camera<para>This function sends the ping command to the camera. The camera will respond with LEP_OK if command received correctly.</para><para><strong>SDK Module ID:</strong> SYS <strong>0x0200</strong></para><para><strong>SDK Command ID:</strong> Base <strong />With Run <strong>0x02</strong></para><para><strong>SDK Data Length:</strong> Run <strong>0</strong> size a run command argument is zero</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_RunSysPing()</strong>
                        </term>
                        <term>Issues a ping command to the Camera to check if communication is up.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_RunSysPing(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr);</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Sys.RunPing">
            <summary>SYS Ping Camera<para>This function sends the ping command to the camera. The camera will respond with LEP_OK if command received correctly.</para><para><strong>SDK Module ID:</strong> SYS <strong>0x0200</strong></para><para><strong>SDK Command ID:</strong> Base <strong />With Run <strong>0x02</strong></para><para><strong>SDK Data Length:</strong> Run <strong>0</strong> size a run command argument is zero</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_RunSysPing()</strong>
                        </term>
                        <term>Issues a ping command to the Camera to check if communication is up.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_RunSysPing(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr);</code>
            </remarks>
        </member>
        <member name="T:Lepton.CCI.Sys">
            <summary>
This module provides information and status of the camera system. This includes the camera serial number, current camera status, a method to ping the camera to verify communication, and Telemetry row enable and location control.
</summary>
        </member>
        <member name="M:Lepton.CCI.Rad.RunFFCChecked">
            <summary>RAD FFC Normalization<para>This command executes a Flat-Field Correction (FFC) and updates the Global Gain and Global Offset. The target value is factory set and should not be changed under normal circumstances. The Run command executes an FFC using currently active values for the FFC normalization target and number of frames to average (see 4.4.21). This command executes synchronously. Poll the RAD Run Status to determine when this command completes (see 4.7.7).</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>N/A</term>
                        <term>N/A</term>
                        <term>N/A</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> SYS <strong>0x0E00</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Run <strong>0x2E</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Run <strong>0</strong> size of a Run command</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_RunRadFFC()</strong>
                        </term>
                        <term>Executes the FFC normalization using previously specified normalization target value and calculates the Global Gain and Global Offset</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_RunRadFFC( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr )</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Rad.RunFFC">
            <summary>RAD FFC Normalization<para>This command executes a Flat-Field Correction (FFC) and updates the Global Gain and Global Offset. The target value is factory set and should not be changed under normal circumstances. The Run command executes an FFC using currently active values for the FFC normalization target and number of frames to average (see 4.4.21). This command executes synchronously. Poll the RAD Run Status to determine when this command completes (see 4.7.7).</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>N/A</term>
                        <term>N/A</term>
                        <term>N/A</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> SYS <strong>0x0E00</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Run <strong>0x2E</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Run <strong>0</strong> size of a Run command</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_RunRadFFC()</strong>
                        </term>
                        <term>Executes the FFC normalization using previously specified normalization target value and calculates the Global Gain and Global Offset</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_RunRadFFC( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr )</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Rad.SetExternalRBFOLowGainChecked(Lepton.CCI.Rad.Rbfo)">
            <summary>RAD Low Gain RBFO External Parameters<para>These functions either get or set the radiometry low gain RBFO External parameters. The RBFO parameters define the equation for conversion between flux and temperature.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term />
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Radiometric Releases Factory Default</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>R</term>
                        <term>10000</term>
                        <term>1000000</term>
                        <term>64155</term>
                        <term>Calibrated per camera</term>
                        <term>N/A</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>B</term>
                        <term>1200000</term>
                        <term>1700000</term>
                        <term>1428000</term>
                        <term>Calibrated per camera</term>
                        <term>N/A</term>
                        <term>1000</term>
                    </item>
                    <item>
                        <term>F</term>
                        <term>500</term>
                        <term>3000</term>
                        <term>1000</term>
                        <term>Calibrated per camera</term>
                        <term>N/A</term>
                        <term>1000</term>
                    </item>
                    <item>
                        <term>O</term>
                        <term>-16384000</term>
                        <term>16383000</term>
                        <term>728000</term>
                        <term>Calibrated per camera</term>
                        <term>N/A</term>
                        <term>1000</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> RAD <strong>0x0E00</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0xD8 </strong></para>
                <para>With Set <strong>0xD9</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>8</strong> size of a <strong>LEP_RBFO_T</strong> data type, 4 x 2 words each</para>
                <para>Set <strong>8</strong> size of a <strong>LEP_RBFO_T</strong> data type, 4 x 2 words each</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_GetRadExternalRBFOLowGain()</strong>
                        </term>
                        <term>Updates <strong>radRBFOPtr</strong> with the Camera’s current RBFO External parameters.</term>
                    </item>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_SetRadExternalRBFOLowGain()</strong>
                        </term>
                        <term>Updates the Camera’s RBFO External parameters with the contents of <strong>radRBFOPtr</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetRadExternalRBFOLowGain ( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RBFO_T_PTR radRBFOPtr )
LEP_RESULT LEP_SetRadExternalRBFOLowGain ( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RBFO_T_PTR radRBFOPtr )
/* RBFO
*/
typedef struct LEP_RBFO_T_TAG
{
// value is not scaled
// value is scaled by X &lt;&lt; n
LEP_UINT32 RBFO_F;
LEP_INT32 RBFO_O;
}LEP_RBFO_T, *LEP_RBFO_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Rad.SetExternalRBFOLowGain(Lepton.CCI.Rad.Rbfo)">
            <summary>RAD Low Gain RBFO External Parameters<para>These functions either get or set the radiometry low gain RBFO External parameters. The RBFO parameters define the equation for conversion between flux and temperature.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term />
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Radiometric Releases Factory Default</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>R</term>
                        <term>10000</term>
                        <term>1000000</term>
                        <term>64155</term>
                        <term>Calibrated per camera</term>
                        <term>N/A</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>B</term>
                        <term>1200000</term>
                        <term>1700000</term>
                        <term>1428000</term>
                        <term>Calibrated per camera</term>
                        <term>N/A</term>
                        <term>1000</term>
                    </item>
                    <item>
                        <term>F</term>
                        <term>500</term>
                        <term>3000</term>
                        <term>1000</term>
                        <term>Calibrated per camera</term>
                        <term>N/A</term>
                        <term>1000</term>
                    </item>
                    <item>
                        <term>O</term>
                        <term>-16384000</term>
                        <term>16383000</term>
                        <term>728000</term>
                        <term>Calibrated per camera</term>
                        <term>N/A</term>
                        <term>1000</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> RAD <strong>0x0E00</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0xD8 </strong></para>
                <para>With Set <strong>0xD9</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>8</strong> size of a <strong>LEP_RBFO_T</strong> data type, 4 x 2 words each</para>
                <para>Set <strong>8</strong> size of a <strong>LEP_RBFO_T</strong> data type, 4 x 2 words each</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_GetRadExternalRBFOLowGain()</strong>
                        </term>
                        <term>Updates <strong>radRBFOPtr</strong> with the Camera’s current RBFO External parameters.</term>
                    </item>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_SetRadExternalRBFOLowGain()</strong>
                        </term>
                        <term>Updates the Camera’s RBFO External parameters with the contents of <strong>radRBFOPtr</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetRadExternalRBFOLowGain ( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RBFO_T_PTR radRBFOPtr )
LEP_RESULT LEP_SetRadExternalRBFOLowGain ( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RBFO_T_PTR radRBFOPtr )
/* RBFO
*/
typedef struct LEP_RBFO_T_TAG
{
// value is not scaled
// value is scaled by X &lt;&lt; n
LEP_UINT32 RBFO_F;
LEP_INT32 RBFO_O;
}LEP_RBFO_T, *LEP_RBFO_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Rad.SetSpotmeterRoiChecked(Lepton.CCI.Rad.Roi)">
            <summary>RAD Spotmeter Region of Interest (ROI)<para>These functions either get or set a rectangular region of interest within the video frame extents which RAD operations can use to calculate temperature measurement minimum, maximum, and average.</para><para><strong>Lepton 1.5, 1.6, 2.0, 2.5</strong></para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Dimension</strong>
                        </term>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Value</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <para>
                                <para>start column</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>&lt; end column-1</term>
                        <term>39</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>start row</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>&lt; end row-1</term>
                        <term>29</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>end column</para>
                            </para>
                        </term>
                        <term>&gt; start column+1</term>
                        <term>79</term>
                        <term>40</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>end row</para>
                            </para>
                        </term>
                        <term>&gt; start row+1</term>
                        <term>59</term>
                        <term>30</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>Lepton 3.0, 3.5</strong>
                </para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Dimension</strong>
                        </term>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Value</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <para>
                                <para>start column</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>&lt; end column-1</term>
                        <term>79</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>start row</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>&lt; end row-1</term>
                        <term>59</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>end column</para>
                            </para>
                        </term>
                        <term>&gt; start column+1</term>
                        <term>159</term>
                        <term>80</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>end row</para>
                            </para>
                        </term>
                        <term>&gt; start row+1</term>
                        <term>119</term>
                        <term>60</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> RAD <strong>0x0E00</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong />With Set <strong>0xCD </strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>4</strong> size of <strong>LEP_RAD_ROI_T</strong> data type</para>
                <para>Set <strong>4</strong> size of <strong>LEP_RAD_ROI_T</strong> data type</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_GetRadSpotmeterRoi()</strong>
                        </term>
                        <term>Updates <strong>spotmeterRoiPtr</strong> with the camera’s current spotmeter ROI.</term>
                    </item>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_SetRadSpotmeterRoi()</strong>
                        </term>
                        <term>Updates the Camera’s current spotmeter ROI with the contents of <strong>spotmeterRoi.</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetRadSpotmeterRoi (LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RAD_ROI_T_PTR spotmeterRoiPtr)
LEP_RESULT LEP_SetRadSpotmeterRoi (LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RAD_ROI_T spotmeterRoi)
/* Radiometry ROI
*/
typedef struct LEP_RAD_ROI_T_TAG
{
LEP_UINT16 startRow;
LEP_UINT16 startCol;
LEP_UINT16 endRow;
LEP_UINT16 endCol;
}LEP_RAD_ROI_T, *LEP_RAD_ROI_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Rad.SetSpotmeterRoi(Lepton.CCI.Rad.Roi)">
            <summary>RAD Spotmeter Region of Interest (ROI)<para>These functions either get or set a rectangular region of interest within the video frame extents which RAD operations can use to calculate temperature measurement minimum, maximum, and average.</para><para><strong>Lepton 1.5, 1.6, 2.0, 2.5</strong></para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Dimension</strong>
                        </term>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Value</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <para>
                                <para>start column</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>&lt; end column-1</term>
                        <term>39</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>start row</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>&lt; end row-1</term>
                        <term>29</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>end column</para>
                            </para>
                        </term>
                        <term>&gt; start column+1</term>
                        <term>79</term>
                        <term>40</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>end row</para>
                            </para>
                        </term>
                        <term>&gt; start row+1</term>
                        <term>59</term>
                        <term>30</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>Lepton 3.0, 3.5</strong>
                </para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Dimension</strong>
                        </term>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Value</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <para>
                                <para>start column</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>&lt; end column-1</term>
                        <term>79</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>start row</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>&lt; end row-1</term>
                        <term>59</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>end column</para>
                            </para>
                        </term>
                        <term>&gt; start column+1</term>
                        <term>159</term>
                        <term>80</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>end row</para>
                            </para>
                        </term>
                        <term>&gt; start row+1</term>
                        <term>119</term>
                        <term>60</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> RAD <strong>0x0E00</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong />With Set <strong>0xCD </strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>4</strong> size of <strong>LEP_RAD_ROI_T</strong> data type</para>
                <para>Set <strong>4</strong> size of <strong>LEP_RAD_ROI_T</strong> data type</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_GetRadSpotmeterRoi()</strong>
                        </term>
                        <term>Updates <strong>spotmeterRoiPtr</strong> with the camera’s current spotmeter ROI.</term>
                    </item>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_SetRadSpotmeterRoi()</strong>
                        </term>
                        <term>Updates the Camera’s current spotmeter ROI with the contents of <strong>spotmeterRoi.</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetRadSpotmeterRoi (LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RAD_ROI_T_PTR spotmeterRoiPtr)
LEP_RESULT LEP_SetRadSpotmeterRoi (LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RAD_ROI_T spotmeterRoi)
/* Radiometry ROI
*/
typedef struct LEP_RAD_ROI_T_TAG
{
LEP_UINT16 startRow;
LEP_UINT16 startCol;
LEP_UINT16 endRow;
LEP_UINT16 endCol;
}LEP_RAD_ROI_T, *LEP_RAD_ROI_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Rad.SetTLinearAutoResolutionChecked(Lepton.CCI.Rad.Enable)">
            <summary>RAD T-Linear Auto Resolution<para>These functions either get or set the T-Linear automatic resolution enable state. When enabled, T-Linear output resolution is chosen automatically based on scene statistics and gain mode.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term />
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <strong>enableState</strong>
                        </term>
                        <term>LEP_RAD_DISABLE</term>
                        <term>LEP_RAD_ENABLE</term>
                        <term>LEP_RAD_DISABLE</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> RAD <strong>0x0E00</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong />With Set <strong>0xC9 </strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size of an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size of an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_GetRadTLinearAutoResolution()</strong>
                        </term>
                        <term>Updates <strong>enableStatePtr</strong> with the camera’s T-Linear automatic resolution feature enable state.</term>
                    </item>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_SetRadTLinearAutoResolution()</strong>
                        </term>
                        <term>Updates the Camera’s current T-Linear automatic resolution feature with the contents of <strong>enableState.</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetRadTLinearAutoResolution (LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RAD_ENABLE_E_PTR enableStatePtr)
LEP_RESULT LEP_SetRadTLinearAutoResolution (LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RAD_ENABLE_E enableState)
/* Radiometry Enable state
*/
typedef enum LEP_RAD_ENABLE_E_TAG
{
LEP_RAD_DISABLE = 0,
LEP_RAD_ENABLE,
LEP_END_RAD_ENABLE
}LEP_RAD_ENABLE_E, *LEP_RAD_ENABLE_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Rad.SetTLinearAutoResolution(Lepton.CCI.Rad.Enable)">
            <summary>RAD T-Linear Auto Resolution<para>These functions either get or set the T-Linear automatic resolution enable state. When enabled, T-Linear output resolution is chosen automatically based on scene statistics and gain mode.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term />
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <strong>enableState</strong>
                        </term>
                        <term>LEP_RAD_DISABLE</term>
                        <term>LEP_RAD_ENABLE</term>
                        <term>LEP_RAD_DISABLE</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> RAD <strong>0x0E00</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong />With Set <strong>0xC9 </strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size of an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size of an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_GetRadTLinearAutoResolution()</strong>
                        </term>
                        <term>Updates <strong>enableStatePtr</strong> with the camera’s T-Linear automatic resolution feature enable state.</term>
                    </item>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_SetRadTLinearAutoResolution()</strong>
                        </term>
                        <term>Updates the Camera’s current T-Linear automatic resolution feature with the contents of <strong>enableState.</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetRadTLinearAutoResolution (LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RAD_ENABLE_E_PTR enableStatePtr)
LEP_RESULT LEP_SetRadTLinearAutoResolution (LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RAD_ENABLE_E enableState)
/* Radiometry Enable state
*/
typedef enum LEP_RAD_ENABLE_E_TAG
{
LEP_RAD_DISABLE = 0,
LEP_RAD_ENABLE,
LEP_END_RAD_ENABLE
}LEP_RAD_ENABLE_E, *LEP_RAD_ENABLE_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Rad.SetTLinearResolutionChecked(Lepton.CCI.Rad.TlinearResolution)">
            <summary>RAD T-Linear Resolution<para>These functions either get or set the T-Linear output resolution, which defines the scale factor for the temperature measurements contained in the video output (per-pixel) with T-Linear mode enabled.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term />
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Radiometric Releases Factory Default</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <strong>resolution</strong>
                        </term>
                        <term>LEP_RAD_RESOLUTION_0_1</term>
                        <term>LEP_RAD_RESOLUTION_0_01</term>
                        <term>LEP_RAD_RESOLUTION_0_1</term>
                        <term>LEP_RAD_RESOLUTION_0_01</term>
                    </item>
                </list>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Setting</strong>
                        </term>
                        <term>
                            <strong>Minimum Pixel Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Pixel Value</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_RAD_RESOLUTION_0_1</term>
                        <term>0</term>
                        <term>65535</term>
                        <term>Kelvin</term>
                        <term>
                            <para>10</para>
                            <para>(65535 = 6553.5K)</para>
                        </term>
                    </item>
                    <item>
                        <term>LEP_RAD_RESOLUTION_0_01</term>
                        <term>0</term>
                        <term>65535</term>
                        <term>Kelvin</term>
                        <term>
                            <para>100</para>
                            <para>(65535 = 655.35K)</para>
                        </term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> RAD <strong>0x0E00</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong />With Set <strong>0xC5 </strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size of an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size of an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_GetRadTLinearResolution()</strong>
                        </term>
                        <term>Updates <strong>resolutionPtr</strong> with the camera’s T-Linear calculation resolution.</term>
                    </item>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_SetRadTLinearResolution()</strong>
                        </term>
                        <term>Updates the Camera’s current T-Linear calculation resolution with the contents of <strong>resolution.</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetRadTLinearResolution (LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RAD_TLINEAR_RESOLUTION_E_PTR resolutionPtr)
LEP_RESULT LEP_SetRadTLinearResolution (LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RAD_TLINEAR_RESOLUTION_E resolution)
/* Radiometry T-Linear Resolution
*/
typedef enum LEP_RAD_TLINEAR_RESOLUTION_E_TAG
{
LEP_RAD_RESOLUTION_0_1 = 0,
LEP_RAD_RESOLUTION_0_01,
LEP_RAD_END_RESOLUTION
}LEP_RAD_TLINEAR_RESOLUTION_E, *LEP_RAD_TLINEAR_RESOLUTION_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Rad.SetTLinearResolution(Lepton.CCI.Rad.TlinearResolution)">
            <summary>RAD T-Linear Resolution<para>These functions either get or set the T-Linear output resolution, which defines the scale factor for the temperature measurements contained in the video output (per-pixel) with T-Linear mode enabled.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term />
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Radiometric Releases Factory Default</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <strong>resolution</strong>
                        </term>
                        <term>LEP_RAD_RESOLUTION_0_1</term>
                        <term>LEP_RAD_RESOLUTION_0_01</term>
                        <term>LEP_RAD_RESOLUTION_0_1</term>
                        <term>LEP_RAD_RESOLUTION_0_01</term>
                    </item>
                </list>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Setting</strong>
                        </term>
                        <term>
                            <strong>Minimum Pixel Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Pixel Value</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_RAD_RESOLUTION_0_1</term>
                        <term>0</term>
                        <term>65535</term>
                        <term>Kelvin</term>
                        <term>
                            <para>10</para>
                            <para>(65535 = 6553.5K)</para>
                        </term>
                    </item>
                    <item>
                        <term>LEP_RAD_RESOLUTION_0_01</term>
                        <term>0</term>
                        <term>65535</term>
                        <term>Kelvin</term>
                        <term>
                            <para>100</para>
                            <para>(65535 = 655.35K)</para>
                        </term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> RAD <strong>0x0E00</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong />With Set <strong>0xC5 </strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size of an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size of an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_GetRadTLinearResolution()</strong>
                        </term>
                        <term>Updates <strong>resolutionPtr</strong> with the camera’s T-Linear calculation resolution.</term>
                    </item>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_SetRadTLinearResolution()</strong>
                        </term>
                        <term>Updates the Camera’s current T-Linear calculation resolution with the contents of <strong>resolution.</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetRadTLinearResolution (LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RAD_TLINEAR_RESOLUTION_E_PTR resolutionPtr)
LEP_RESULT LEP_SetRadTLinearResolution (LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RAD_TLINEAR_RESOLUTION_E resolution)
/* Radiometry T-Linear Resolution
*/
typedef enum LEP_RAD_TLINEAR_RESOLUTION_E_TAG
{
LEP_RAD_RESOLUTION_0_1 = 0,
LEP_RAD_RESOLUTION_0_01,
LEP_RAD_END_RESOLUTION
}LEP_RAD_TLINEAR_RESOLUTION_E, *LEP_RAD_TLINEAR_RESOLUTION_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Rad.SetTLinearEnableStateChecked(Lepton.CCI.Rad.Enable)">
            <summary>RAD T-Linear Enable State<para>These functions either get or set the T-Linear output enable state. When enabled, the video output represents temperature in Kelvin with some scale factor defined by the T-linear Resolution parameter. T-Linear mode requires radiometry mode (temperature stable output) to also be enabled.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term />
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Radiometric Releases Factory Default</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <strong>enableState</strong>
                        </term>
                        <term>LEP_RAD_DISABLE</term>
                        <term>LEP_RAD_ENABLE</term>
                        <term>LEP_RAD_DISABLE</term>
                        <term>LEP_RAD_ENABLE</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> RAD <strong>0x0E00</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong />With Set <strong>0xC1 </strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size of an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size of an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_GetRadTLinearEnableState()</strong>
                        </term>
                        <term>Updates <strong>enableStatePtr</strong> with the camera’s T-Linear calculation enable state.</term>
                    </item>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_SetRadTLinearEnableState()</strong>
                        </term>
                        <term>Updates the Camera’s current T-Linear calculation enable state with the contents of <strong>enableState.</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetRadTLinearEnableState (LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RAD_ENABLE_E_PTR enableStatePtr)
LEP_RESULT LEP_SetRadTLinearEnableState (LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RAD_ENABLE_E enableState)
/* Radiometry Enable state
*/
typedef enum LEP_RAD_ENABLE_E_TAG
{
LEP_RAD_DISABLE = 0,
LEP_RAD_ENABLE,
LEP_END_RAD_ENABLE
}LEP_RAD_ENABLE_E, *LEP_RAD_ENABLE_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Rad.SetTLinearEnableState(Lepton.CCI.Rad.Enable)">
            <summary>RAD T-Linear Enable State<para>These functions either get or set the T-Linear output enable state. When enabled, the video output represents temperature in Kelvin with some scale factor defined by the T-linear Resolution parameter. T-Linear mode requires radiometry mode (temperature stable output) to also be enabled.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term />
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Radiometric Releases Factory Default</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <strong>enableState</strong>
                        </term>
                        <term>LEP_RAD_DISABLE</term>
                        <term>LEP_RAD_ENABLE</term>
                        <term>LEP_RAD_DISABLE</term>
                        <term>LEP_RAD_ENABLE</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> RAD <strong>0x0E00</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong />With Set <strong>0xC1 </strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size of an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size of an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_GetRadTLinearEnableState()</strong>
                        </term>
                        <term>Updates <strong>enableStatePtr</strong> with the camera’s T-Linear calculation enable state.</term>
                    </item>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_SetRadTLinearEnableState()</strong>
                        </term>
                        <term>Updates the Camera’s current T-Linear calculation enable state with the contents of <strong>enableState.</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetRadTLinearEnableState (LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RAD_ENABLE_E_PTR enableStatePtr)
LEP_RESULT LEP_SetRadTLinearEnableState (LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RAD_ENABLE_E enableState)
/* Radiometry Enable state
*/
typedef enum LEP_RAD_ENABLE_E_TAG
{
LEP_RAD_DISABLE = 0,
LEP_RAD_ENABLE,
LEP_END_RAD_ENABLE
}LEP_RAD_ENABLE_E, *LEP_RAD_ENABLE_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Rad.SetFluxLinearParamsChecked(Lepton.CCI.Rad.FluxLinearParams)">
            <summary>RAD Flux Linear Parameters<para>These functions either get or set various scene parameters used in the T-Linear calculations.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term />
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Radiometric Releases Factory Default</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <strong>sceneEmissivity</strong>
                        </term>
                        <term>82</term>
                        <term>8192</term>
                        <term>8192</term>
                        <term>8192</term>
                        <term>Percent</term>
                        <term>
                            <para>8192/100</para>
                            <para>(8192 = 100%)</para>
                        </term>
                    </item>
                    <item>
                        <term>
                            <strong>TBkgK</strong>
                        </term>
                        <term>0</term>
                        <term>65535</term>
                        <term>30000</term>
                        <term>29515</term>
                        <term>Kelvin</term>
                        <term>
                            <para>100</para>
                            <para>(29515 = 295.15K)</para>
                        </term>
                    </item>
                    <item>
                        <term>
                            <strong>tauWindow</strong>
                        </term>
                        <term>82</term>
                        <term>8192</term>
                        <term>8192</term>
                        <term>8192</term>
                        <term>Percent</term>
                        <term>
                            <para>8192/100</para>
                            <para>(8192 = 100%)</para>
                        </term>
                    </item>
                    <item>
                        <term>
                            <strong>TWindowK</strong>
                        </term>
                        <term>0</term>
                        <term>65535</term>
                        <term>30000</term>
                        <term>29515</term>
                        <term>Kelvin</term>
                        <term>
                            <para>100</para>
                            <para>(29515 = 295.15K)</para>
                        </term>
                    </item>
                    <item>
                        <term>
                            <strong>tauAtm</strong>
                        </term>
                        <term>82</term>
                        <term>8192</term>
                        <term>8192</term>
                        <term>8192</term>
                        <term>Percent</term>
                        <term>
                            <para>8192/100</para>
                            <para>(8192 = 100%)</para>
                        </term>
                    </item>
                    <item>
                        <term>
                            <strong>TAtmK</strong>
                        </term>
                        <term>0</term>
                        <term>65535</term>
                        <term>30000</term>
                        <term>29515</term>
                        <term>Kelvin</term>
                        <term>
                            <para>100</para>
                            <para>(29515 = 295.15K)</para>
                        </term>
                    </item>
                    <item>
                        <term>
                            <strong>reflWindow</strong>
                        </term>
                        <term>0</term>
                        <term>8192–<strong>tauWindow</strong></term>
                        <term>0</term>
                        <term>0</term>
                        <term>Percent</term>
                        <term>
                            <para>8192/100</para>
                            <para>(8192 = 100%)</para>
                        </term>
                    </item>
                    <item>
                        <term>
                            <strong>TReflK</strong>
                        </term>
                        <term>0</term>
                        <term>65535</term>
                        <term>30000</term>
                        <term>29515</term>
                        <term>Kelvin</term>
                        <term>
                            <para>100</para>
                            <para>(29515 = 295.15K)</para>
                        </term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> RAD <strong>0x0E00</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong />With Set <strong>0xBD </strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>8</strong> size of <strong>LEP_RAD_FLUX_LINEAR_PARAMS_T</strong> data type</para>
                <para>Set <strong>8</strong> size of <strong>LEP_RAD_FLUX_LINEAR_PARAMS_T</strong> data type</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_GetRadFluxLinearParams()</strong>
                        </term>
                        <term>Updates <strong>fluxParamsPtr</strong> with the camera’s Radiometry scene parameters used for T-Linear calculation.</term>
                    </item>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_SetRadFluxLinearParams()</strong>
                        </term>
                        <term>Updates the Camera’s current Radiometry scene parameters with the contents of <strong>fluxParams.</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetRadFluxLinearParams (LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RAD_FLUX_LINEAR_PARAMS_T_PTR fluxParamsPtr)
LEP_RESULT LEP_SetRadFluxLinearParams (LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RAD_FLUX_LINEAR_PARAMS_T fluxParams)
/* Radiometry Flux Linear Params
*/
typedef struct LEP_RAD_FLUX_LINEAR_PARAMS_T_TAG
{
/* Type Field name format comment */
/* 3.13 */
/* 16.0 value in Kelvin 100x */
/* 3.13 */
/* 16.0 value in Kelvin 100x */
/* 3.13 */
/* 16.0 value in Kelvin 100x */
/* 3.13 */
/* 16.0 value in Kelvin 100x */
}LEP_RAD_FLUX_LINEAR_PARAMS_T, *LEP_RAD_FLUX_LINEAR_PARAMS_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Rad.SetFluxLinearParams(Lepton.CCI.Rad.FluxLinearParams)">
            <summary>RAD Flux Linear Parameters<para>These functions either get or set various scene parameters used in the T-Linear calculations.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term />
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Radiometric Releases Factory Default</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <strong>sceneEmissivity</strong>
                        </term>
                        <term>82</term>
                        <term>8192</term>
                        <term>8192</term>
                        <term>8192</term>
                        <term>Percent</term>
                        <term>
                            <para>8192/100</para>
                            <para>(8192 = 100%)</para>
                        </term>
                    </item>
                    <item>
                        <term>
                            <strong>TBkgK</strong>
                        </term>
                        <term>0</term>
                        <term>65535</term>
                        <term>30000</term>
                        <term>29515</term>
                        <term>Kelvin</term>
                        <term>
                            <para>100</para>
                            <para>(29515 = 295.15K)</para>
                        </term>
                    </item>
                    <item>
                        <term>
                            <strong>tauWindow</strong>
                        </term>
                        <term>82</term>
                        <term>8192</term>
                        <term>8192</term>
                        <term>8192</term>
                        <term>Percent</term>
                        <term>
                            <para>8192/100</para>
                            <para>(8192 = 100%)</para>
                        </term>
                    </item>
                    <item>
                        <term>
                            <strong>TWindowK</strong>
                        </term>
                        <term>0</term>
                        <term>65535</term>
                        <term>30000</term>
                        <term>29515</term>
                        <term>Kelvin</term>
                        <term>
                            <para>100</para>
                            <para>(29515 = 295.15K)</para>
                        </term>
                    </item>
                    <item>
                        <term>
                            <strong>tauAtm</strong>
                        </term>
                        <term>82</term>
                        <term>8192</term>
                        <term>8192</term>
                        <term>8192</term>
                        <term>Percent</term>
                        <term>
                            <para>8192/100</para>
                            <para>(8192 = 100%)</para>
                        </term>
                    </item>
                    <item>
                        <term>
                            <strong>TAtmK</strong>
                        </term>
                        <term>0</term>
                        <term>65535</term>
                        <term>30000</term>
                        <term>29515</term>
                        <term>Kelvin</term>
                        <term>
                            <para>100</para>
                            <para>(29515 = 295.15K)</para>
                        </term>
                    </item>
                    <item>
                        <term>
                            <strong>reflWindow</strong>
                        </term>
                        <term>0</term>
                        <term>8192–<strong>tauWindow</strong></term>
                        <term>0</term>
                        <term>0</term>
                        <term>Percent</term>
                        <term>
                            <para>8192/100</para>
                            <para>(8192 = 100%)</para>
                        </term>
                    </item>
                    <item>
                        <term>
                            <strong>TReflK</strong>
                        </term>
                        <term>0</term>
                        <term>65535</term>
                        <term>30000</term>
                        <term>29515</term>
                        <term>Kelvin</term>
                        <term>
                            <para>100</para>
                            <para>(29515 = 295.15K)</para>
                        </term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> RAD <strong>0x0E00</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong />With Set <strong>0xBD </strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>8</strong> size of <strong>LEP_RAD_FLUX_LINEAR_PARAMS_T</strong> data type</para>
                <para>Set <strong>8</strong> size of <strong>LEP_RAD_FLUX_LINEAR_PARAMS_T</strong> data type</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_GetRadFluxLinearParams()</strong>
                        </term>
                        <term>Updates <strong>fluxParamsPtr</strong> with the camera’s Radiometry scene parameters used for T-Linear calculation.</term>
                    </item>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_SetRadFluxLinearParams()</strong>
                        </term>
                        <term>Updates the Camera’s current Radiometry scene parameters with the contents of <strong>fluxParams.</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetRadFluxLinearParams (LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RAD_FLUX_LINEAR_PARAMS_T_PTR fluxParamsPtr)
LEP_RESULT LEP_SetRadFluxLinearParams (LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RAD_FLUX_LINEAR_PARAMS_T fluxParams)
/* Radiometry Flux Linear Params
*/
typedef struct LEP_RAD_FLUX_LINEAR_PARAMS_T_TAG
{
/* Type Field name format comment */
/* 3.13 */
/* 16.0 value in Kelvin 100x */
/* 3.13 */
/* 16.0 value in Kelvin 100x */
/* 3.13 */
/* 16.0 value in Kelvin 100x */
/* 3.13 */
/* 16.0 value in Kelvin 100x */
}LEP_RAD_FLUX_LINEAR_PARAMS_T, *LEP_RAD_FLUX_LINEAR_PARAMS_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Rad.SetEnableStateChecked(Lepton.CCI.Rad.Enable)">
            <summary>RAD Radiometry Control Enable<para>This function enables or disables the Camera Radiometry Control (temperature stable output), or returns the state of Control.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term />
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Radiometric Releases Factory Default</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <strong>radEnableState</strong>
                        </term>
                        <term>LEP_RAD_DISABLE</term>
                        <term>LEP_RAD_ENABLE</term>
                        <term>LEP_RAD_DISABLE</term>
                        <term>LEP_RAD_ENABLE</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> RAD <strong>0x0E00</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x10 </strong></para>
                <para>With Set <strong>0x11</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine value</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetRadEnableState()</strong>
                        </term>
                        <term>Updates <strong>radEnableStatePtr</strong> with current state of the radiometry control.</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetRadEnableState()</strong>
                        </term>
                        <term>Updates the Camera’s with current state of the radiometry control with the contents of <strong>radEnableState</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetRadEnableState( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RAD_ENABLE_E_PTR radEnableStatePtr )
LEP_RESULT LEP_SetRadEnableState( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RAD_ENABLE_E radEnableState )
/* Radiometry Enable state
*/
typedef enum LEP_RAD_ENABLE_E_TAG
{
LEP_RAD_DISABLE = 0,
LEP_RAD_ENABLE,
LEP_END_RAD_ENABLE
}LEP_RAD_ENABLE_E, *LEP_RAD_ENABLE_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Rad.SetEnableState(Lepton.CCI.Rad.Enable)">
            <summary>RAD Radiometry Control Enable<para>This function enables or disables the Camera Radiometry Control (temperature stable output), or returns the state of Control.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term />
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Radiometric Releases Factory Default</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <strong>radEnableState</strong>
                        </term>
                        <term>LEP_RAD_DISABLE</term>
                        <term>LEP_RAD_ENABLE</term>
                        <term>LEP_RAD_DISABLE</term>
                        <term>LEP_RAD_ENABLE</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> RAD <strong>0x0E00</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x10 </strong></para>
                <para>With Set <strong>0x11</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine value</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetRadEnableState()</strong>
                        </term>
                        <term>Updates <strong>radEnableStatePtr</strong> with current state of the radiometry control.</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetRadEnableState()</strong>
                        </term>
                        <term>Updates the Camera’s with current state of the radiometry control with the contents of <strong>radEnableState</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetRadEnableState( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RAD_ENABLE_E_PTR radEnableStatePtr )
LEP_RESULT LEP_SetRadEnableState( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RAD_ENABLE_E radEnableState )
/* Radiometry Enable state
*/
typedef enum LEP_RAD_ENABLE_E_TAG
{
LEP_RAD_DISABLE = 0,
LEP_RAD_ENABLE,
LEP_END_RAD_ENABLE
}LEP_RAD_ENABLE_E, *LEP_RAD_ENABLE_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Rad.SetRBFOExternal0Checked(Lepton.CCI.Rad.Rbfo)">
            <summary>RAD RBFO External Parameters<para>This function gets and sets the radiometry RBFO External parameters. The RBFO parameters define the equation for conversion between flux and temperature.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term />
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Radiometric Releases Factory Default</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>R</term>
                        <term>10000</term>
                        <term>1000000</term>
                        <term>395653</term>
                        <term>Calibrated per camera</term>
                        <term>N/A</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>B</term>
                        <term>1200000</term>
                        <term>1700000</term>
                        <term>1428000</term>
                        <term>Calibrated per camera</term>
                        <term>N/A</term>
                        <term>1000</term>
                    </item>
                    <item>
                        <term>F</term>
                        <term>500</term>
                        <term>3000</term>
                        <term>1000</term>
                        <term>Calibrated per camera</term>
                        <term>N/A</term>
                        <term>1000</term>
                    </item>
                    <item>
                        <term>O</term>
                        <term>-16384000</term>
                        <term>16383000</term>
                        <term>156000</term>
                        <term>Calibrated per camera</term>
                        <term>N/A</term>
                        <term>1000</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> RAD <strong>0x0E00</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x04 </strong></para>
                <para>With Set <strong>0x05</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>8</strong> size of a <strong>LEP_RBFO_T</strong> data type, 4 x 2 words each</para>
                <para>Set <strong>8</strong> size of a <strong>LEP_RBFO_T</strong> data type, 4 x 2 words each</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetRadRBFOExternal0()</strong>
                        </term>
                        <term>Updates <strong>radRBFOPtr</strong> with the Camera’s current RBFO External parameters.</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetRadRBFOExternal0()</strong>
                        </term>
                        <term>Updates the Camera’s RBFO External parameters with the contents of <strong>radRBFOPtr</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetRadRBFOExternal0( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RBFO_T_PTR radRBFOPtr )
LEP_RESULT LEP_SetRadRBFOExternal0( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RBFO_T_PTR radRBFOPtr )
/* RBFO
*/
typedef struct LEP_RBFO_T_TAG
{
// value is not scaled
// value is scaled by X &lt;&lt; n
LEP_UINT32 RBFO_F;
LEP_INT32 RBFO_O;
}LEP_RBFO_T, *LEP_RBFO_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Rad.SetRBFOExternal0(Lepton.CCI.Rad.Rbfo)">
            <summary>RAD RBFO External Parameters<para>This function gets and sets the radiometry RBFO External parameters. The RBFO parameters define the equation for conversion between flux and temperature.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term />
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Radiometric Releases Factory Default</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>R</term>
                        <term>10000</term>
                        <term>1000000</term>
                        <term>395653</term>
                        <term>Calibrated per camera</term>
                        <term>N/A</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>B</term>
                        <term>1200000</term>
                        <term>1700000</term>
                        <term>1428000</term>
                        <term>Calibrated per camera</term>
                        <term>N/A</term>
                        <term>1000</term>
                    </item>
                    <item>
                        <term>F</term>
                        <term>500</term>
                        <term>3000</term>
                        <term>1000</term>
                        <term>Calibrated per camera</term>
                        <term>N/A</term>
                        <term>1000</term>
                    </item>
                    <item>
                        <term>O</term>
                        <term>-16384000</term>
                        <term>16383000</term>
                        <term>156000</term>
                        <term>Calibrated per camera</term>
                        <term>N/A</term>
                        <term>1000</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> RAD <strong>0x0E00</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x04 </strong></para>
                <para>With Set <strong>0x05</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>8</strong> size of a <strong>LEP_RBFO_T</strong> data type, 4 x 2 words each</para>
                <para>Set <strong>8</strong> size of a <strong>LEP_RBFO_T</strong> data type, 4 x 2 words each</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetRadRBFOExternal0()</strong>
                        </term>
                        <term>Updates <strong>radRBFOPtr</strong> with the Camera’s current RBFO External parameters.</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetRadRBFOExternal0()</strong>
                        </term>
                        <term>Updates the Camera’s RBFO External parameters with the contents of <strong>radRBFOPtr</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetRadRBFOExternal0( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RBFO_T_PTR radRBFOPtr )
LEP_RESULT LEP_SetRadRBFOExternal0( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RBFO_T_PTR radRBFOPtr )
/* RBFO
*/
typedef struct LEP_RBFO_T_TAG
{
// value is not scaled
// value is scaled by X &lt;&lt; n
LEP_UINT32 RBFO_F;
LEP_INT32 RBFO_O;
}LEP_RBFO_T, *LEP_RBFO_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Rad.SetTShutterChecked(System.UInt16)">
            <summary>RAD TShutter Temperature<para>This function gets or sets the TShutter temperature. The TShutter temperature is used at FFC when the TShutter Mode is “User”.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term />
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <strong>radTShutter</strong>
                        </term>
                        <term>0</term>
                        <term>65535</term>
                        <term>30000</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> RAD <strong>0x0E00</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x28 </strong></para>
                <para>With Set <strong>0x29</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>1</strong> size of <strong>LEP_RAD_KELVIN_T</strong> data type</para>
                <para>Set <strong>1</strong> size of <strong>LEP_RAD_KELVIN_T</strong> data type</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetRadTShutter()</strong>
                        </term>
                        <term>Updates <strong>radTShutterPtr</strong> with current TShutter temperature</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetRadTShutter()</strong>
                        </term>
                        <term>Updates the Camera’s current TShutter temperature with the contents of <strong>radTShutter</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetRadTShutter( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RAD_KELVIN_T_PTR radTShutterPtr )
LEP_RESULT LEP_SetRadTShutter( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RAD_KELVIN_T radTShutter )
/* TShutter value is 100xKelvin [16.0]
*/
typedef LEP_UINT16 LEP_RAD_KELVIN_T, *LEP_RAD_KELVIN_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Rad.SetTShutter(System.UInt16)">
            <summary>RAD TShutter Temperature<para>This function gets or sets the TShutter temperature. The TShutter temperature is used at FFC when the TShutter Mode is “User”.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term />
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <strong>radTShutter</strong>
                        </term>
                        <term>0</term>
                        <term>65535</term>
                        <term>30000</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> RAD <strong>0x0E00</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x28 </strong></para>
                <para>With Set <strong>0x29</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>1</strong> size of <strong>LEP_RAD_KELVIN_T</strong> data type</para>
                <para>Set <strong>1</strong> size of <strong>LEP_RAD_KELVIN_T</strong> data type</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetRadTShutter()</strong>
                        </term>
                        <term>Updates <strong>radTShutterPtr</strong> with current TShutter temperature</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetRadTShutter()</strong>
                        </term>
                        <term>Updates the Camera’s current TShutter temperature with the contents of <strong>radTShutter</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetRadTShutter( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RAD_KELVIN_T_PTR radTShutterPtr )
LEP_RESULT LEP_SetRadTShutter( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RAD_KELVIN_T radTShutter )
/* TShutter value is 100xKelvin [16.0]
*/
typedef LEP_UINT16 LEP_RAD_KELVIN_T, *LEP_RAD_KELVIN_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Rad.SetTShutterModeChecked(Lepton.CCI.Rad.TsMode)">
            <summary>RAD TShutter Mode<para>This function gets or sets the TShutter mode. The TShutter mode specifies how TShutter value is obtained at FFC.</para></summary>
            <remarks>
                <list>
                    <item>
                        <para>User: Use the TShutter value set with LEP_SetRadTShutter()</para>
                    </item>
                    <item>
                        <para>Cal: Use TEqShutter from calibration</para>
                    </item>
                    <item>
                        <para>Fixed: the shutter temperature is considered static, and therefore the spotmeter is not updated at FFC</para>
                    </item>
                </list>
                <list type="table">
                    <listheader>
                        <term />
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <strong>radTShutterMode</strong>
                        </term>
                        <term>FLR_RAD_TS_USER_MODE</term>
                        <term>FLR_RAD_TS_FIXED_MODE</term>
                        <term>FLR_RAD_TS_CAL_MODE</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> RAD <strong>0x0E00</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x24 </strong></para>
                <para>With Set <strong>0x25</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetRadTShutterMode()</strong>
                        </term>
                        <term>Updates <strong>radTShutterModePtr</strong> with current TShutter mode</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetRadTShutterMode()</strong>
                        </term>
                        <term>Updates the Camera’s current TShutter mode with the contents of <strong>radTShutterMode</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetRadTShutterMode( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RAD_TS_MODE_E_PTR radTShutterModePtr )
LEP_RESULT LEP_SetRadTShutterMode( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RAD_TS_MODE_E radTShutterMode )
/* TShutter Modes
*/
typedef enum FLR_RAD_TS_MODE_E_TAG
{
FLR_RAD_TS_USER_MODE = 0,
FLR_RAD_TS_CAL_MODE,
FLR_RAD_TS_FIXED_MODE,
FLR_RAD_TS_END_TS_MODE
}FLR_RAD_TS_MODE_E, *FLR_RAD_TS_MODE_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Rad.SetTShutterMode(Lepton.CCI.Rad.TsMode)">
            <summary>RAD TShutter Mode<para>This function gets or sets the TShutter mode. The TShutter mode specifies how TShutter value is obtained at FFC.</para></summary>
            <remarks>
                <list>
                    <item>
                        <para>User: Use the TShutter value set with LEP_SetRadTShutter()</para>
                    </item>
                    <item>
                        <para>Cal: Use TEqShutter from calibration</para>
                    </item>
                    <item>
                        <para>Fixed: the shutter temperature is considered static, and therefore the spotmeter is not updated at FFC</para>
                    </item>
                </list>
                <list type="table">
                    <listheader>
                        <term />
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <strong>radTShutterMode</strong>
                        </term>
                        <term>FLR_RAD_TS_USER_MODE</term>
                        <term>FLR_RAD_TS_FIXED_MODE</term>
                        <term>FLR_RAD_TS_CAL_MODE</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> RAD <strong>0x0E00</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x24 </strong></para>
                <para>With Set <strong>0x25</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetRadTShutterMode()</strong>
                        </term>
                        <term>Updates <strong>radTShutterModePtr</strong> with current TShutter mode</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetRadTShutterMode()</strong>
                        </term>
                        <term>Updates the Camera’s current TShutter mode with the contents of <strong>radTShutterMode</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetRadTShutterMode( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RAD_TS_MODE_E_PTR radTShutterModePtr )
LEP_RESULT LEP_SetRadTShutterMode( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RAD_TS_MODE_E radTShutterMode )
/* TShutter Modes
*/
typedef enum FLR_RAD_TS_MODE_E_TAG
{
FLR_RAD_TS_USER_MODE = 0,
FLR_RAD_TS_CAL_MODE,
FLR_RAD_TS_FIXED_MODE,
FLR_RAD_TS_END_TS_MODE
}FLR_RAD_TS_MODE_E, *FLR_RAD_TS_MODE_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Rad.GetExternalRBFOLowGainChecked">
            <summary>RAD Low Gain RBFO External Parameters<para>These functions either get or set the radiometry low gain RBFO External parameters. The RBFO parameters define the equation for conversion between flux and temperature.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term />
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Radiometric Releases Factory Default</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>R</term>
                        <term>10000</term>
                        <term>1000000</term>
                        <term>64155</term>
                        <term>Calibrated per camera</term>
                        <term>N/A</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>B</term>
                        <term>1200000</term>
                        <term>1700000</term>
                        <term>1428000</term>
                        <term>Calibrated per camera</term>
                        <term>N/A</term>
                        <term>1000</term>
                    </item>
                    <item>
                        <term>F</term>
                        <term>500</term>
                        <term>3000</term>
                        <term>1000</term>
                        <term>Calibrated per camera</term>
                        <term>N/A</term>
                        <term>1000</term>
                    </item>
                    <item>
                        <term>O</term>
                        <term>-16384000</term>
                        <term>16383000</term>
                        <term>728000</term>
                        <term>Calibrated per camera</term>
                        <term>N/A</term>
                        <term>1000</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> RAD <strong>0x0E00</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0xD8 </strong></para>
                <para>With Set <strong>0xD9</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>8</strong> size of a <strong>LEP_RBFO_T</strong> data type, 4 x 2 words each</para>
                <para>Set <strong>8</strong> size of a <strong>LEP_RBFO_T</strong> data type, 4 x 2 words each</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_GetRadExternalRBFOLowGain()</strong>
                        </term>
                        <term>Updates <strong>radRBFOPtr</strong> with the Camera’s current RBFO External parameters.</term>
                    </item>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_SetRadExternalRBFOLowGain()</strong>
                        </term>
                        <term>Updates the Camera’s RBFO External parameters with the contents of <strong>radRBFOPtr</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetRadExternalRBFOLowGain ( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RBFO_T_PTR radRBFOPtr )
LEP_RESULT LEP_SetRadExternalRBFOLowGain ( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RBFO_T_PTR radRBFOPtr )
/* RBFO
*/
typedef struct LEP_RBFO_T_TAG
{
// value is not scaled
// value is scaled by X &lt;&lt; n
LEP_UINT32 RBFO_F;
LEP_INT32 RBFO_O;
}LEP_RBFO_T, *LEP_RBFO_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Rad.GetExternalRBFOLowGain">
            <summary>RAD Low Gain RBFO External Parameters<para>These functions either get or set the radiometry low gain RBFO External parameters. The RBFO parameters define the equation for conversion between flux and temperature.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term />
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Radiometric Releases Factory Default</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>R</term>
                        <term>10000</term>
                        <term>1000000</term>
                        <term>64155</term>
                        <term>Calibrated per camera</term>
                        <term>N/A</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>B</term>
                        <term>1200000</term>
                        <term>1700000</term>
                        <term>1428000</term>
                        <term>Calibrated per camera</term>
                        <term>N/A</term>
                        <term>1000</term>
                    </item>
                    <item>
                        <term>F</term>
                        <term>500</term>
                        <term>3000</term>
                        <term>1000</term>
                        <term>Calibrated per camera</term>
                        <term>N/A</term>
                        <term>1000</term>
                    </item>
                    <item>
                        <term>O</term>
                        <term>-16384000</term>
                        <term>16383000</term>
                        <term>728000</term>
                        <term>Calibrated per camera</term>
                        <term>N/A</term>
                        <term>1000</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> RAD <strong>0x0E00</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0xD8 </strong></para>
                <para>With Set <strong>0xD9</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>8</strong> size of a <strong>LEP_RBFO_T</strong> data type, 4 x 2 words each</para>
                <para>Set <strong>8</strong> size of a <strong>LEP_RBFO_T</strong> data type, 4 x 2 words each</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_GetRadExternalRBFOLowGain()</strong>
                        </term>
                        <term>Updates <strong>radRBFOPtr</strong> with the Camera’s current RBFO External parameters.</term>
                    </item>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_SetRadExternalRBFOLowGain()</strong>
                        </term>
                        <term>Updates the Camera’s RBFO External parameters with the contents of <strong>radRBFOPtr</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetRadExternalRBFOLowGain ( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RBFO_T_PTR radRBFOPtr )
LEP_RESULT LEP_SetRadExternalRBFOLowGain ( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RBFO_T_PTR radRBFOPtr )
/* RBFO
*/
typedef struct LEP_RBFO_T_TAG
{
// value is not scaled
// value is scaled by X &lt;&lt; n
LEP_UINT32 RBFO_F;
LEP_INT32 RBFO_O;
}LEP_RBFO_T, *LEP_RBFO_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Rad.GetSpotmeterObjInKelvinX100Checked">
            <summary>RAD Spotmeter Value<para>These functions get the mean, min, and max temperature values for pixels within the spotmeter ROI.</para><para><strong>Lepton 1.5, 1.6, 2.0, 2.5</strong></para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Dimension</strong>
                        </term>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Value</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <para>
                                <para>radSpotmeterValue</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>65535</term>
                        <term>N/A</term>
                        <term>Kelvin</term>
                        <term>10 or 100 (dependent on TLinear Resolution)</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>radSpotmeterMaxValue</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>65535</term>
                        <term>N/A</term>
                        <term>Kelvin</term>
                        <term>10 or 100 (dependent on TLinear Resolution)</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>radSpotmeterMinValue</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>65535</term>
                        <term>N/A</term>
                        <term>Kelvin</term>
                        <term>10 or 100 (dependent on TLinear Resolution)</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>radSpotmeterPopulation</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>4800</term>
                        <term>N/A</term>
                        <term>Pixels</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>Lepton 3.0, 3.5</strong>
                </para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Dimension</strong>
                        </term>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Value</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <para>
                                <para>radSpotmeterValue</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>65535</term>
                        <term>N/A</term>
                        <term>Kelvin</term>
                        <term>10 or 100 (dependent on TLinear Resolution)</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>radSpotmeterMaxValue</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>65535</term>
                        <term>N/A</term>
                        <term>Kelvin</term>
                        <term>10 or 100 (dependent on TLinear Resolution)</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>radSpotmeterMinValue</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>65535</term>
                        <term>N/A</term>
                        <term>Kelvin</term>
                        <term>10 or 100 (dependent on TLinear Resolution)</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>radSpotmeterPopulation</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>19200</term>
                        <term>N/A</term>
                        <term>Pixels</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> RAD <strong>0x0E00</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0xD0 </strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>4</strong> size of <strong>LEP_RAD_SPOTMETER_OBJ_KELVIN_T</strong> data type</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_GetRadSpotmeterObjInKelvinX100()</strong>
                        </term>
                        <term>Updates <strong>kelvinPtr</strong> with the camera’s current spotmeter values.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetRadSpotmeterObjInKelvinX100 (LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RAD_SPOTMETER_OBJ_KELVIN_T_PTR kelvinPtr)
/* Radiometry ROI
*/
typedef LEP_UINT16 LEP_RAD_SPOTMETER_KELVIN_T, *LEP_RAD_SPOTMETER_KELVIN_T_PTR;
typedef struct LEP_RAD_SPOTMETER_OBJ_KELVIN_T_TAG
{
LEP_RAD_SPOTMETER_KELVIN_T radSpotmeterValue;
LEP_UINT16 radSpotmeterMaxValue;
LEP_UINT16 radSpotmeterMinValue;
LEP_UINT16 radSpotmeterPopulation;
}LEP_RAD_SPOTMETER_OBJ_KELVIN_T, *LEP_RAD_SPOTMETER_OBJ_KELVIN_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Rad.GetSpotmeterObjInKelvinX100">
            <summary>RAD Spotmeter Value<para>These functions get the mean, min, and max temperature values for pixels within the spotmeter ROI.</para><para><strong>Lepton 1.5, 1.6, 2.0, 2.5</strong></para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Dimension</strong>
                        </term>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Value</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <para>
                                <para>radSpotmeterValue</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>65535</term>
                        <term>N/A</term>
                        <term>Kelvin</term>
                        <term>10 or 100 (dependent on TLinear Resolution)</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>radSpotmeterMaxValue</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>65535</term>
                        <term>N/A</term>
                        <term>Kelvin</term>
                        <term>10 or 100 (dependent on TLinear Resolution)</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>radSpotmeterMinValue</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>65535</term>
                        <term>N/A</term>
                        <term>Kelvin</term>
                        <term>10 or 100 (dependent on TLinear Resolution)</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>radSpotmeterPopulation</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>4800</term>
                        <term>N/A</term>
                        <term>Pixels</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>Lepton 3.0, 3.5</strong>
                </para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Dimension</strong>
                        </term>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Value</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <para>
                                <para>radSpotmeterValue</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>65535</term>
                        <term>N/A</term>
                        <term>Kelvin</term>
                        <term>10 or 100 (dependent on TLinear Resolution)</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>radSpotmeterMaxValue</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>65535</term>
                        <term>N/A</term>
                        <term>Kelvin</term>
                        <term>10 or 100 (dependent on TLinear Resolution)</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>radSpotmeterMinValue</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>65535</term>
                        <term>N/A</term>
                        <term>Kelvin</term>
                        <term>10 or 100 (dependent on TLinear Resolution)</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>radSpotmeterPopulation</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>19200</term>
                        <term>N/A</term>
                        <term>Pixels</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> RAD <strong>0x0E00</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0xD0 </strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>4</strong> size of <strong>LEP_RAD_SPOTMETER_OBJ_KELVIN_T</strong> data type</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_GetRadSpotmeterObjInKelvinX100()</strong>
                        </term>
                        <term>Updates <strong>kelvinPtr</strong> with the camera’s current spotmeter values.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetRadSpotmeterObjInKelvinX100 (LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RAD_SPOTMETER_OBJ_KELVIN_T_PTR kelvinPtr)
/* Radiometry ROI
*/
typedef LEP_UINT16 LEP_RAD_SPOTMETER_KELVIN_T, *LEP_RAD_SPOTMETER_KELVIN_T_PTR;
typedef struct LEP_RAD_SPOTMETER_OBJ_KELVIN_T_TAG
{
LEP_RAD_SPOTMETER_KELVIN_T radSpotmeterValue;
LEP_UINT16 radSpotmeterMaxValue;
LEP_UINT16 radSpotmeterMinValue;
LEP_UINT16 radSpotmeterPopulation;
}LEP_RAD_SPOTMETER_OBJ_KELVIN_T, *LEP_RAD_SPOTMETER_OBJ_KELVIN_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Rad.GetSpotmeterRoiChecked">
            <summary>RAD Spotmeter Region of Interest (ROI)<para>These functions either get or set a rectangular region of interest within the video frame extents which RAD operations can use to calculate temperature measurement minimum, maximum, and average.</para><para><strong>Lepton 1.5, 1.6, 2.0, 2.5</strong></para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Dimension</strong>
                        </term>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Value</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <para>
                                <para>start column</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>&lt; end column-1</term>
                        <term>39</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>start row</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>&lt; end row-1</term>
                        <term>29</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>end column</para>
                            </para>
                        </term>
                        <term>&gt; start column+1</term>
                        <term>79</term>
                        <term>40</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>end row</para>
                            </para>
                        </term>
                        <term>&gt; start row+1</term>
                        <term>59</term>
                        <term>30</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>Lepton 3.0, 3.5</strong>
                </para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Dimension</strong>
                        </term>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Value</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <para>
                                <para>start column</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>&lt; end column-1</term>
                        <term>79</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>start row</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>&lt; end row-1</term>
                        <term>59</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>end column</para>
                            </para>
                        </term>
                        <term>&gt; start column+1</term>
                        <term>159</term>
                        <term>80</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>end row</para>
                            </para>
                        </term>
                        <term>&gt; start row+1</term>
                        <term>119</term>
                        <term>60</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> RAD <strong>0x0E00</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong />With Set <strong>0xCD </strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>4</strong> size of <strong>LEP_RAD_ROI_T</strong> data type</para>
                <para>Set <strong>4</strong> size of <strong>LEP_RAD_ROI_T</strong> data type</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_GetRadSpotmeterRoi()</strong>
                        </term>
                        <term>Updates <strong>spotmeterRoiPtr</strong> with the camera’s current spotmeter ROI.</term>
                    </item>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_SetRadSpotmeterRoi()</strong>
                        </term>
                        <term>Updates the Camera’s current spotmeter ROI with the contents of <strong>spotmeterRoi.</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetRadSpotmeterRoi (LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RAD_ROI_T_PTR spotmeterRoiPtr)
LEP_RESULT LEP_SetRadSpotmeterRoi (LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RAD_ROI_T spotmeterRoi)
/* Radiometry ROI
*/
typedef struct LEP_RAD_ROI_T_TAG
{
LEP_UINT16 startRow;
LEP_UINT16 startCol;
LEP_UINT16 endRow;
LEP_UINT16 endCol;
}LEP_RAD_ROI_T, *LEP_RAD_ROI_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Rad.GetSpotmeterRoi">
            <summary>RAD Spotmeter Region of Interest (ROI)<para>These functions either get or set a rectangular region of interest within the video frame extents which RAD operations can use to calculate temperature measurement minimum, maximum, and average.</para><para><strong>Lepton 1.5, 1.6, 2.0, 2.5</strong></para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Dimension</strong>
                        </term>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Value</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <para>
                                <para>start column</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>&lt; end column-1</term>
                        <term>39</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>start row</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>&lt; end row-1</term>
                        <term>29</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>end column</para>
                            </para>
                        </term>
                        <term>&gt; start column+1</term>
                        <term>79</term>
                        <term>40</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>end row</para>
                            </para>
                        </term>
                        <term>&gt; start row+1</term>
                        <term>59</term>
                        <term>30</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>Lepton 3.0, 3.5</strong>
                </para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Dimension</strong>
                        </term>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Value</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <para>
                                <para>start column</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>&lt; end column-1</term>
                        <term>79</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>start row</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>&lt; end row-1</term>
                        <term>59</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>end column</para>
                            </para>
                        </term>
                        <term>&gt; start column+1</term>
                        <term>159</term>
                        <term>80</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>end row</para>
                            </para>
                        </term>
                        <term>&gt; start row+1</term>
                        <term>119</term>
                        <term>60</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> RAD <strong>0x0E00</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong />With Set <strong>0xCD </strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>4</strong> size of <strong>LEP_RAD_ROI_T</strong> data type</para>
                <para>Set <strong>4</strong> size of <strong>LEP_RAD_ROI_T</strong> data type</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_GetRadSpotmeterRoi()</strong>
                        </term>
                        <term>Updates <strong>spotmeterRoiPtr</strong> with the camera’s current spotmeter ROI.</term>
                    </item>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_SetRadSpotmeterRoi()</strong>
                        </term>
                        <term>Updates the Camera’s current spotmeter ROI with the contents of <strong>spotmeterRoi.</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetRadSpotmeterRoi (LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RAD_ROI_T_PTR spotmeterRoiPtr)
LEP_RESULT LEP_SetRadSpotmeterRoi (LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RAD_ROI_T spotmeterRoi)
/* Radiometry ROI
*/
typedef struct LEP_RAD_ROI_T_TAG
{
LEP_UINT16 startRow;
LEP_UINT16 startCol;
LEP_UINT16 endRow;
LEP_UINT16 endCol;
}LEP_RAD_ROI_T, *LEP_RAD_ROI_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Rad.GetTLinearAutoResolutionChecked">
            <summary>RAD T-Linear Auto Resolution<para>These functions either get or set the T-Linear automatic resolution enable state. When enabled, T-Linear output resolution is chosen automatically based on scene statistics and gain mode.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term />
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <strong>enableState</strong>
                        </term>
                        <term>LEP_RAD_DISABLE</term>
                        <term>LEP_RAD_ENABLE</term>
                        <term>LEP_RAD_DISABLE</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> RAD <strong>0x0E00</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong />With Set <strong>0xC9 </strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size of an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size of an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_GetRadTLinearAutoResolution()</strong>
                        </term>
                        <term>Updates <strong>enableStatePtr</strong> with the camera’s T-Linear automatic resolution feature enable state.</term>
                    </item>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_SetRadTLinearAutoResolution()</strong>
                        </term>
                        <term>Updates the Camera’s current T-Linear automatic resolution feature with the contents of <strong>enableState.</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetRadTLinearAutoResolution (LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RAD_ENABLE_E_PTR enableStatePtr)
LEP_RESULT LEP_SetRadTLinearAutoResolution (LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RAD_ENABLE_E enableState)
/* Radiometry Enable state
*/
typedef enum LEP_RAD_ENABLE_E_TAG
{
LEP_RAD_DISABLE = 0,
LEP_RAD_ENABLE,
LEP_END_RAD_ENABLE
}LEP_RAD_ENABLE_E, *LEP_RAD_ENABLE_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Rad.GetTLinearAutoResolution">
            <summary>RAD T-Linear Auto Resolution<para>These functions either get or set the T-Linear automatic resolution enable state. When enabled, T-Linear output resolution is chosen automatically based on scene statistics and gain mode.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term />
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <strong>enableState</strong>
                        </term>
                        <term>LEP_RAD_DISABLE</term>
                        <term>LEP_RAD_ENABLE</term>
                        <term>LEP_RAD_DISABLE</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> RAD <strong>0x0E00</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong />With Set <strong>0xC9 </strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size of an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size of an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_GetRadTLinearAutoResolution()</strong>
                        </term>
                        <term>Updates <strong>enableStatePtr</strong> with the camera’s T-Linear automatic resolution feature enable state.</term>
                    </item>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_SetRadTLinearAutoResolution()</strong>
                        </term>
                        <term>Updates the Camera’s current T-Linear automatic resolution feature with the contents of <strong>enableState.</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetRadTLinearAutoResolution (LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RAD_ENABLE_E_PTR enableStatePtr)
LEP_RESULT LEP_SetRadTLinearAutoResolution (LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RAD_ENABLE_E enableState)
/* Radiometry Enable state
*/
typedef enum LEP_RAD_ENABLE_E_TAG
{
LEP_RAD_DISABLE = 0,
LEP_RAD_ENABLE,
LEP_END_RAD_ENABLE
}LEP_RAD_ENABLE_E, *LEP_RAD_ENABLE_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Rad.GetTLinearResolutionChecked">
            <summary>RAD T-Linear Resolution<para>These functions either get or set the T-Linear output resolution, which defines the scale factor for the temperature measurements contained in the video output (per-pixel) with T-Linear mode enabled.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term />
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Radiometric Releases Factory Default</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <strong>resolution</strong>
                        </term>
                        <term>LEP_RAD_RESOLUTION_0_1</term>
                        <term>LEP_RAD_RESOLUTION_0_01</term>
                        <term>LEP_RAD_RESOLUTION_0_1</term>
                        <term>LEP_RAD_RESOLUTION_0_01</term>
                    </item>
                </list>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Setting</strong>
                        </term>
                        <term>
                            <strong>Minimum Pixel Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Pixel Value</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_RAD_RESOLUTION_0_1</term>
                        <term>0</term>
                        <term>65535</term>
                        <term>Kelvin</term>
                        <term>
                            <para>10</para>
                            <para>(65535 = 6553.5K)</para>
                        </term>
                    </item>
                    <item>
                        <term>LEP_RAD_RESOLUTION_0_01</term>
                        <term>0</term>
                        <term>65535</term>
                        <term>Kelvin</term>
                        <term>
                            <para>100</para>
                            <para>(65535 = 655.35K)</para>
                        </term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> RAD <strong>0x0E00</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong />With Set <strong>0xC5 </strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size of an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size of an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_GetRadTLinearResolution()</strong>
                        </term>
                        <term>Updates <strong>resolutionPtr</strong> with the camera’s T-Linear calculation resolution.</term>
                    </item>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_SetRadTLinearResolution()</strong>
                        </term>
                        <term>Updates the Camera’s current T-Linear calculation resolution with the contents of <strong>resolution.</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetRadTLinearResolution (LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RAD_TLINEAR_RESOLUTION_E_PTR resolutionPtr)
LEP_RESULT LEP_SetRadTLinearResolution (LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RAD_TLINEAR_RESOLUTION_E resolution)
/* Radiometry T-Linear Resolution
*/
typedef enum LEP_RAD_TLINEAR_RESOLUTION_E_TAG
{
LEP_RAD_RESOLUTION_0_1 = 0,
LEP_RAD_RESOLUTION_0_01,
LEP_RAD_END_RESOLUTION
}LEP_RAD_TLINEAR_RESOLUTION_E, *LEP_RAD_TLINEAR_RESOLUTION_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Rad.GetTLinearResolution">
            <summary>RAD T-Linear Resolution<para>These functions either get or set the T-Linear output resolution, which defines the scale factor for the temperature measurements contained in the video output (per-pixel) with T-Linear mode enabled.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term />
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Radiometric Releases Factory Default</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <strong>resolution</strong>
                        </term>
                        <term>LEP_RAD_RESOLUTION_0_1</term>
                        <term>LEP_RAD_RESOLUTION_0_01</term>
                        <term>LEP_RAD_RESOLUTION_0_1</term>
                        <term>LEP_RAD_RESOLUTION_0_01</term>
                    </item>
                </list>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Setting</strong>
                        </term>
                        <term>
                            <strong>Minimum Pixel Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Pixel Value</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_RAD_RESOLUTION_0_1</term>
                        <term>0</term>
                        <term>65535</term>
                        <term>Kelvin</term>
                        <term>
                            <para>10</para>
                            <para>(65535 = 6553.5K)</para>
                        </term>
                    </item>
                    <item>
                        <term>LEP_RAD_RESOLUTION_0_01</term>
                        <term>0</term>
                        <term>65535</term>
                        <term>Kelvin</term>
                        <term>
                            <para>100</para>
                            <para>(65535 = 655.35K)</para>
                        </term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> RAD <strong>0x0E00</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong />With Set <strong>0xC5 </strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size of an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size of an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_GetRadTLinearResolution()</strong>
                        </term>
                        <term>Updates <strong>resolutionPtr</strong> with the camera’s T-Linear calculation resolution.</term>
                    </item>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_SetRadTLinearResolution()</strong>
                        </term>
                        <term>Updates the Camera’s current T-Linear calculation resolution with the contents of <strong>resolution.</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetRadTLinearResolution (LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RAD_TLINEAR_RESOLUTION_E_PTR resolutionPtr)
LEP_RESULT LEP_SetRadTLinearResolution (LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RAD_TLINEAR_RESOLUTION_E resolution)
/* Radiometry T-Linear Resolution
*/
typedef enum LEP_RAD_TLINEAR_RESOLUTION_E_TAG
{
LEP_RAD_RESOLUTION_0_1 = 0,
LEP_RAD_RESOLUTION_0_01,
LEP_RAD_END_RESOLUTION
}LEP_RAD_TLINEAR_RESOLUTION_E, *LEP_RAD_TLINEAR_RESOLUTION_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Rad.GetTLinearEnableStateChecked">
            <summary>RAD T-Linear Enable State<para>These functions either get or set the T-Linear output enable state. When enabled, the video output represents temperature in Kelvin with some scale factor defined by the T-linear Resolution parameter. T-Linear mode requires radiometry mode (temperature stable output) to also be enabled.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term />
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Radiometric Releases Factory Default</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <strong>enableState</strong>
                        </term>
                        <term>LEP_RAD_DISABLE</term>
                        <term>LEP_RAD_ENABLE</term>
                        <term>LEP_RAD_DISABLE</term>
                        <term>LEP_RAD_ENABLE</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> RAD <strong>0x0E00</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong />With Set <strong>0xC1 </strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size of an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size of an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_GetRadTLinearEnableState()</strong>
                        </term>
                        <term>Updates <strong>enableStatePtr</strong> with the camera’s T-Linear calculation enable state.</term>
                    </item>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_SetRadTLinearEnableState()</strong>
                        </term>
                        <term>Updates the Camera’s current T-Linear calculation enable state with the contents of <strong>enableState.</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetRadTLinearEnableState (LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RAD_ENABLE_E_PTR enableStatePtr)
LEP_RESULT LEP_SetRadTLinearEnableState (LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RAD_ENABLE_E enableState)
/* Radiometry Enable state
*/
typedef enum LEP_RAD_ENABLE_E_TAG
{
LEP_RAD_DISABLE = 0,
LEP_RAD_ENABLE,
LEP_END_RAD_ENABLE
}LEP_RAD_ENABLE_E, *LEP_RAD_ENABLE_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Rad.GetTLinearEnableState">
            <summary>RAD T-Linear Enable State<para>These functions either get or set the T-Linear output enable state. When enabled, the video output represents temperature in Kelvin with some scale factor defined by the T-linear Resolution parameter. T-Linear mode requires radiometry mode (temperature stable output) to also be enabled.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term />
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Radiometric Releases Factory Default</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <strong>enableState</strong>
                        </term>
                        <term>LEP_RAD_DISABLE</term>
                        <term>LEP_RAD_ENABLE</term>
                        <term>LEP_RAD_DISABLE</term>
                        <term>LEP_RAD_ENABLE</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> RAD <strong>0x0E00</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong />With Set <strong>0xC1 </strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size of an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size of an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_GetRadTLinearEnableState()</strong>
                        </term>
                        <term>Updates <strong>enableStatePtr</strong> with the camera’s T-Linear calculation enable state.</term>
                    </item>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_SetRadTLinearEnableState()</strong>
                        </term>
                        <term>Updates the Camera’s current T-Linear calculation enable state with the contents of <strong>enableState.</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetRadTLinearEnableState (LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RAD_ENABLE_E_PTR enableStatePtr)
LEP_RESULT LEP_SetRadTLinearEnableState (LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RAD_ENABLE_E enableState)
/* Radiometry Enable state
*/
typedef enum LEP_RAD_ENABLE_E_TAG
{
LEP_RAD_DISABLE = 0,
LEP_RAD_ENABLE,
LEP_END_RAD_ENABLE
}LEP_RAD_ENABLE_E, *LEP_RAD_ENABLE_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Rad.GetFluxLinearParamsChecked">
            <summary>RAD Flux Linear Parameters<para>These functions either get or set various scene parameters used in the T-Linear calculations.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term />
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Radiometric Releases Factory Default</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <strong>sceneEmissivity</strong>
                        </term>
                        <term>82</term>
                        <term>8192</term>
                        <term>8192</term>
                        <term>8192</term>
                        <term>Percent</term>
                        <term>
                            <para>8192/100</para>
                            <para>(8192 = 100%)</para>
                        </term>
                    </item>
                    <item>
                        <term>
                            <strong>TBkgK</strong>
                        </term>
                        <term>0</term>
                        <term>65535</term>
                        <term>30000</term>
                        <term>29515</term>
                        <term>Kelvin</term>
                        <term>
                            <para>100</para>
                            <para>(29515 = 295.15K)</para>
                        </term>
                    </item>
                    <item>
                        <term>
                            <strong>tauWindow</strong>
                        </term>
                        <term>82</term>
                        <term>8192</term>
                        <term>8192</term>
                        <term>8192</term>
                        <term>Percent</term>
                        <term>
                            <para>8192/100</para>
                            <para>(8192 = 100%)</para>
                        </term>
                    </item>
                    <item>
                        <term>
                            <strong>TWindowK</strong>
                        </term>
                        <term>0</term>
                        <term>65535</term>
                        <term>30000</term>
                        <term>29515</term>
                        <term>Kelvin</term>
                        <term>
                            <para>100</para>
                            <para>(29515 = 295.15K)</para>
                        </term>
                    </item>
                    <item>
                        <term>
                            <strong>tauAtm</strong>
                        </term>
                        <term>82</term>
                        <term>8192</term>
                        <term>8192</term>
                        <term>8192</term>
                        <term>Percent</term>
                        <term>
                            <para>8192/100</para>
                            <para>(8192 = 100%)</para>
                        </term>
                    </item>
                    <item>
                        <term>
                            <strong>TAtmK</strong>
                        </term>
                        <term>0</term>
                        <term>65535</term>
                        <term>30000</term>
                        <term>29515</term>
                        <term>Kelvin</term>
                        <term>
                            <para>100</para>
                            <para>(29515 = 295.15K)</para>
                        </term>
                    </item>
                    <item>
                        <term>
                            <strong>reflWindow</strong>
                        </term>
                        <term>0</term>
                        <term>8192–<strong>tauWindow</strong></term>
                        <term>0</term>
                        <term>0</term>
                        <term>Percent</term>
                        <term>
                            <para>8192/100</para>
                            <para>(8192 = 100%)</para>
                        </term>
                    </item>
                    <item>
                        <term>
                            <strong>TReflK</strong>
                        </term>
                        <term>0</term>
                        <term>65535</term>
                        <term>30000</term>
                        <term>29515</term>
                        <term>Kelvin</term>
                        <term>
                            <para>100</para>
                            <para>(29515 = 295.15K)</para>
                        </term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> RAD <strong>0x0E00</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong />With Set <strong>0xBD </strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>8</strong> size of <strong>LEP_RAD_FLUX_LINEAR_PARAMS_T</strong> data type</para>
                <para>Set <strong>8</strong> size of <strong>LEP_RAD_FLUX_LINEAR_PARAMS_T</strong> data type</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_GetRadFluxLinearParams()</strong>
                        </term>
                        <term>Updates <strong>fluxParamsPtr</strong> with the camera’s Radiometry scene parameters used for T-Linear calculation.</term>
                    </item>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_SetRadFluxLinearParams()</strong>
                        </term>
                        <term>Updates the Camera’s current Radiometry scene parameters with the contents of <strong>fluxParams.</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetRadFluxLinearParams (LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RAD_FLUX_LINEAR_PARAMS_T_PTR fluxParamsPtr)
LEP_RESULT LEP_SetRadFluxLinearParams (LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RAD_FLUX_LINEAR_PARAMS_T fluxParams)
/* Radiometry Flux Linear Params
*/
typedef struct LEP_RAD_FLUX_LINEAR_PARAMS_T_TAG
{
/* Type Field name format comment */
/* 3.13 */
/* 16.0 value in Kelvin 100x */
/* 3.13 */
/* 16.0 value in Kelvin 100x */
/* 3.13 */
/* 16.0 value in Kelvin 100x */
/* 3.13 */
/* 16.0 value in Kelvin 100x */
}LEP_RAD_FLUX_LINEAR_PARAMS_T, *LEP_RAD_FLUX_LINEAR_PARAMS_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Rad.GetFluxLinearParams">
            <summary>RAD Flux Linear Parameters<para>These functions either get or set various scene parameters used in the T-Linear calculations.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term />
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Radiometric Releases Factory Default</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <strong>sceneEmissivity</strong>
                        </term>
                        <term>82</term>
                        <term>8192</term>
                        <term>8192</term>
                        <term>8192</term>
                        <term>Percent</term>
                        <term>
                            <para>8192/100</para>
                            <para>(8192 = 100%)</para>
                        </term>
                    </item>
                    <item>
                        <term>
                            <strong>TBkgK</strong>
                        </term>
                        <term>0</term>
                        <term>65535</term>
                        <term>30000</term>
                        <term>29515</term>
                        <term>Kelvin</term>
                        <term>
                            <para>100</para>
                            <para>(29515 = 295.15K)</para>
                        </term>
                    </item>
                    <item>
                        <term>
                            <strong>tauWindow</strong>
                        </term>
                        <term>82</term>
                        <term>8192</term>
                        <term>8192</term>
                        <term>8192</term>
                        <term>Percent</term>
                        <term>
                            <para>8192/100</para>
                            <para>(8192 = 100%)</para>
                        </term>
                    </item>
                    <item>
                        <term>
                            <strong>TWindowK</strong>
                        </term>
                        <term>0</term>
                        <term>65535</term>
                        <term>30000</term>
                        <term>29515</term>
                        <term>Kelvin</term>
                        <term>
                            <para>100</para>
                            <para>(29515 = 295.15K)</para>
                        </term>
                    </item>
                    <item>
                        <term>
                            <strong>tauAtm</strong>
                        </term>
                        <term>82</term>
                        <term>8192</term>
                        <term>8192</term>
                        <term>8192</term>
                        <term>Percent</term>
                        <term>
                            <para>8192/100</para>
                            <para>(8192 = 100%)</para>
                        </term>
                    </item>
                    <item>
                        <term>
                            <strong>TAtmK</strong>
                        </term>
                        <term>0</term>
                        <term>65535</term>
                        <term>30000</term>
                        <term>29515</term>
                        <term>Kelvin</term>
                        <term>
                            <para>100</para>
                            <para>(29515 = 295.15K)</para>
                        </term>
                    </item>
                    <item>
                        <term>
                            <strong>reflWindow</strong>
                        </term>
                        <term>0</term>
                        <term>8192–<strong>tauWindow</strong></term>
                        <term>0</term>
                        <term>0</term>
                        <term>Percent</term>
                        <term>
                            <para>8192/100</para>
                            <para>(8192 = 100%)</para>
                        </term>
                    </item>
                    <item>
                        <term>
                            <strong>TReflK</strong>
                        </term>
                        <term>0</term>
                        <term>65535</term>
                        <term>30000</term>
                        <term>29515</term>
                        <term>Kelvin</term>
                        <term>
                            <para>100</para>
                            <para>(29515 = 295.15K)</para>
                        </term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> RAD <strong>0x0E00</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong />With Set <strong>0xBD </strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>8</strong> size of <strong>LEP_RAD_FLUX_LINEAR_PARAMS_T</strong> data type</para>
                <para>Set <strong>8</strong> size of <strong>LEP_RAD_FLUX_LINEAR_PARAMS_T</strong> data type</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_GetRadFluxLinearParams()</strong>
                        </term>
                        <term>Updates <strong>fluxParamsPtr</strong> with the camera’s Radiometry scene parameters used for T-Linear calculation.</term>
                    </item>
                    <item>
                        <term>Lepton 2.5, 3.5</term>
                        <term>
                            <strong>LEP_SetRadFluxLinearParams()</strong>
                        </term>
                        <term>Updates the Camera’s current Radiometry scene parameters with the contents of <strong>fluxParams.</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetRadFluxLinearParams (LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RAD_FLUX_LINEAR_PARAMS_T_PTR fluxParamsPtr)
LEP_RESULT LEP_SetRadFluxLinearParams (LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RAD_FLUX_LINEAR_PARAMS_T fluxParams)
/* Radiometry Flux Linear Params
*/
typedef struct LEP_RAD_FLUX_LINEAR_PARAMS_T_TAG
{
/* Type Field name format comment */
/* 3.13 */
/* 16.0 value in Kelvin 100x */
/* 3.13 */
/* 16.0 value in Kelvin 100x */
/* 3.13 */
/* 16.0 value in Kelvin 100x */
/* 3.13 */
/* 16.0 value in Kelvin 100x */
}LEP_RAD_FLUX_LINEAR_PARAMS_T, *LEP_RAD_FLUX_LINEAR_PARAMS_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Rad.GetRunStatusChecked">
            <summary>RAD Run Status<para>This function obtains the current status of a RAD module run operation. This function is used whenever a RAD command is issued that executes an operation like the run FFC. Typically, the host polls the status to determine when the command has completed. If the return value is negative, then the operation completed with an error. Positive values indicate an in-process state.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_RAD_STATUS_ERROR</term>
                        <term>LEP_RAD_FRAME_AVERAGE_COLLECTING_FRAMES</term>
                        <term>LEP_RAD_STATUS_READY</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> OEM <strong>0x0E00</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Run <strong>0x30</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetRadRunStatus()</strong>
                        </term>
                        <term>Gets the Current RAD run operation status. Updates <strong>radStatusPtr</strong> with current value of the run status</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetRadRunStatus( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RAD_STATUS_E_PTR radStatusPtr )
/* Run operation status
*/
typedef enum
{
LEP_RAD_STATUS_ERROR = -1,
LEP_RAD_STATUS_READY = 0,
LEP_RAD_STATUS_BUSY,
LEP_RAD_FRAME_AVERAGE_COLLECTING_FRAMES,
LEP_RAD_STATUS_END
} LEP_RAD_STATUS_E, *LEP_RAD_STATUS_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Rad.GetRunStatus">
            <summary>RAD Run Status<para>This function obtains the current status of a RAD module run operation. This function is used whenever a RAD command is issued that executes an operation like the run FFC. Typically, the host polls the status to determine when the command has completed. If the return value is negative, then the operation completed with an error. Positive values indicate an in-process state.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_RAD_STATUS_ERROR</term>
                        <term>LEP_RAD_FRAME_AVERAGE_COLLECTING_FRAMES</term>
                        <term>LEP_RAD_STATUS_READY</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> OEM <strong>0x0E00</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Run <strong>0x30</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetRadRunStatus()</strong>
                        </term>
                        <term>Gets the Current RAD run operation status. Updates <strong>radStatusPtr</strong> with current value of the run status</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetRadRunStatus( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RAD_STATUS_E_PTR radStatusPtr )
/* Run operation status
*/
typedef enum
{
LEP_RAD_STATUS_ERROR = -1,
LEP_RAD_STATUS_READY = 0,
LEP_RAD_STATUS_BUSY,
LEP_RAD_FRAME_AVERAGE_COLLECTING_FRAMES,
LEP_RAD_STATUS_END
} LEP_RAD_STATUS_E, *LEP_RAD_STATUS_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Rad.GetEnableStateChecked">
            <summary>RAD Radiometry Control Enable<para>This function enables or disables the Camera Radiometry Control (temperature stable output), or returns the state of Control.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term />
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Radiometric Releases Factory Default</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <strong>radEnableState</strong>
                        </term>
                        <term>LEP_RAD_DISABLE</term>
                        <term>LEP_RAD_ENABLE</term>
                        <term>LEP_RAD_DISABLE</term>
                        <term>LEP_RAD_ENABLE</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> RAD <strong>0x0E00</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x10 </strong></para>
                <para>With Set <strong>0x11</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine value</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetRadEnableState()</strong>
                        </term>
                        <term>Updates <strong>radEnableStatePtr</strong> with current state of the radiometry control.</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetRadEnableState()</strong>
                        </term>
                        <term>Updates the Camera’s with current state of the radiometry control with the contents of <strong>radEnableState</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetRadEnableState( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RAD_ENABLE_E_PTR radEnableStatePtr )
LEP_RESULT LEP_SetRadEnableState( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RAD_ENABLE_E radEnableState )
/* Radiometry Enable state
*/
typedef enum LEP_RAD_ENABLE_E_TAG
{
LEP_RAD_DISABLE = 0,
LEP_RAD_ENABLE,
LEP_END_RAD_ENABLE
}LEP_RAD_ENABLE_E, *LEP_RAD_ENABLE_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Rad.GetEnableState">
            <summary>RAD Radiometry Control Enable<para>This function enables or disables the Camera Radiometry Control (temperature stable output), or returns the state of Control.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term />
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Radiometric Releases Factory Default</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <strong>radEnableState</strong>
                        </term>
                        <term>LEP_RAD_DISABLE</term>
                        <term>LEP_RAD_ENABLE</term>
                        <term>LEP_RAD_DISABLE</term>
                        <term>LEP_RAD_ENABLE</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> RAD <strong>0x0E00</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x10 </strong></para>
                <para>With Set <strong>0x11</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine value</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetRadEnableState()</strong>
                        </term>
                        <term>Updates <strong>radEnableStatePtr</strong> with current state of the radiometry control.</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetRadEnableState()</strong>
                        </term>
                        <term>Updates the Camera’s with current state of the radiometry control with the contents of <strong>radEnableState</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetRadEnableState( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RAD_ENABLE_E_PTR radEnableStatePtr )
LEP_RESULT LEP_SetRadEnableState( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RAD_ENABLE_E radEnableState )
/* Radiometry Enable state
*/
typedef enum LEP_RAD_ENABLE_E_TAG
{
LEP_RAD_DISABLE = 0,
LEP_RAD_ENABLE,
LEP_END_RAD_ENABLE
}LEP_RAD_ENABLE_E, *LEP_RAD_ENABLE_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Rad.GetRBFOExternal0Checked">
            <summary>RAD RBFO External Parameters<para>This function gets and sets the radiometry RBFO External parameters. The RBFO parameters define the equation for conversion between flux and temperature.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term />
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Radiometric Releases Factory Default</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>R</term>
                        <term>10000</term>
                        <term>1000000</term>
                        <term>395653</term>
                        <term>Calibrated per camera</term>
                        <term>N/A</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>B</term>
                        <term>1200000</term>
                        <term>1700000</term>
                        <term>1428000</term>
                        <term>Calibrated per camera</term>
                        <term>N/A</term>
                        <term>1000</term>
                    </item>
                    <item>
                        <term>F</term>
                        <term>500</term>
                        <term>3000</term>
                        <term>1000</term>
                        <term>Calibrated per camera</term>
                        <term>N/A</term>
                        <term>1000</term>
                    </item>
                    <item>
                        <term>O</term>
                        <term>-16384000</term>
                        <term>16383000</term>
                        <term>156000</term>
                        <term>Calibrated per camera</term>
                        <term>N/A</term>
                        <term>1000</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> RAD <strong>0x0E00</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x04 </strong></para>
                <para>With Set <strong>0x05</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>8</strong> size of a <strong>LEP_RBFO_T</strong> data type, 4 x 2 words each</para>
                <para>Set <strong>8</strong> size of a <strong>LEP_RBFO_T</strong> data type, 4 x 2 words each</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetRadRBFOExternal0()</strong>
                        </term>
                        <term>Updates <strong>radRBFOPtr</strong> with the Camera’s current RBFO External parameters.</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetRadRBFOExternal0()</strong>
                        </term>
                        <term>Updates the Camera’s RBFO External parameters with the contents of <strong>radRBFOPtr</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetRadRBFOExternal0( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RBFO_T_PTR radRBFOPtr )
LEP_RESULT LEP_SetRadRBFOExternal0( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RBFO_T_PTR radRBFOPtr )
/* RBFO
*/
typedef struct LEP_RBFO_T_TAG
{
// value is not scaled
// value is scaled by X &lt;&lt; n
LEP_UINT32 RBFO_F;
LEP_INT32 RBFO_O;
}LEP_RBFO_T, *LEP_RBFO_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Rad.GetRBFOExternal0">
            <summary>RAD RBFO External Parameters<para>This function gets and sets the radiometry RBFO External parameters. The RBFO parameters define the equation for conversion between flux and temperature.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term />
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Radiometric Releases Factory Default</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>R</term>
                        <term>10000</term>
                        <term>1000000</term>
                        <term>395653</term>
                        <term>Calibrated per camera</term>
                        <term>N/A</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>B</term>
                        <term>1200000</term>
                        <term>1700000</term>
                        <term>1428000</term>
                        <term>Calibrated per camera</term>
                        <term>N/A</term>
                        <term>1000</term>
                    </item>
                    <item>
                        <term>F</term>
                        <term>500</term>
                        <term>3000</term>
                        <term>1000</term>
                        <term>Calibrated per camera</term>
                        <term>N/A</term>
                        <term>1000</term>
                    </item>
                    <item>
                        <term>O</term>
                        <term>-16384000</term>
                        <term>16383000</term>
                        <term>156000</term>
                        <term>Calibrated per camera</term>
                        <term>N/A</term>
                        <term>1000</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> RAD <strong>0x0E00</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x04 </strong></para>
                <para>With Set <strong>0x05</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>8</strong> size of a <strong>LEP_RBFO_T</strong> data type, 4 x 2 words each</para>
                <para>Set <strong>8</strong> size of a <strong>LEP_RBFO_T</strong> data type, 4 x 2 words each</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetRadRBFOExternal0()</strong>
                        </term>
                        <term>Updates <strong>radRBFOPtr</strong> with the Camera’s current RBFO External parameters.</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetRadRBFOExternal0()</strong>
                        </term>
                        <term>Updates the Camera’s RBFO External parameters with the contents of <strong>radRBFOPtr</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetRadRBFOExternal0( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RBFO_T_PTR radRBFOPtr )
LEP_RESULT LEP_SetRadRBFOExternal0( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RBFO_T_PTR radRBFOPtr )
/* RBFO
*/
typedef struct LEP_RBFO_T_TAG
{
// value is not scaled
// value is scaled by X &lt;&lt; n
LEP_UINT32 RBFO_F;
LEP_INT32 RBFO_O;
}LEP_RBFO_T, *LEP_RBFO_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Rad.GetTShutterChecked">
            <summary>RAD TShutter Temperature<para>This function gets or sets the TShutter temperature. The TShutter temperature is used at FFC when the TShutter Mode is “User”.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term />
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <strong>radTShutter</strong>
                        </term>
                        <term>0</term>
                        <term>65535</term>
                        <term>30000</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> RAD <strong>0x0E00</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x28 </strong></para>
                <para>With Set <strong>0x29</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>1</strong> size of <strong>LEP_RAD_KELVIN_T</strong> data type</para>
                <para>Set <strong>1</strong> size of <strong>LEP_RAD_KELVIN_T</strong> data type</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetRadTShutter()</strong>
                        </term>
                        <term>Updates <strong>radTShutterPtr</strong> with current TShutter temperature</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetRadTShutter()</strong>
                        </term>
                        <term>Updates the Camera’s current TShutter temperature with the contents of <strong>radTShutter</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetRadTShutter( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RAD_KELVIN_T_PTR radTShutterPtr )
LEP_RESULT LEP_SetRadTShutter( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RAD_KELVIN_T radTShutter )
/* TShutter value is 100xKelvin [16.0]
*/
typedef LEP_UINT16 LEP_RAD_KELVIN_T, *LEP_RAD_KELVIN_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Rad.GetTShutter">
            <summary>RAD TShutter Temperature<para>This function gets or sets the TShutter temperature. The TShutter temperature is used at FFC when the TShutter Mode is “User”.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term />
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <strong>radTShutter</strong>
                        </term>
                        <term>0</term>
                        <term>65535</term>
                        <term>30000</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> RAD <strong>0x0E00</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x28 </strong></para>
                <para>With Set <strong>0x29</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>1</strong> size of <strong>LEP_RAD_KELVIN_T</strong> data type</para>
                <para>Set <strong>1</strong> size of <strong>LEP_RAD_KELVIN_T</strong> data type</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetRadTShutter()</strong>
                        </term>
                        <term>Updates <strong>radTShutterPtr</strong> with current TShutter temperature</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetRadTShutter()</strong>
                        </term>
                        <term>Updates the Camera’s current TShutter temperature with the contents of <strong>radTShutter</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetRadTShutter( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RAD_KELVIN_T_PTR radTShutterPtr )
LEP_RESULT LEP_SetRadTShutter( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RAD_KELVIN_T radTShutter )
/* TShutter value is 100xKelvin [16.0]
*/
typedef LEP_UINT16 LEP_RAD_KELVIN_T, *LEP_RAD_KELVIN_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Rad.GetTShutterModeChecked">
            <summary>RAD TShutter Mode<para>This function gets or sets the TShutter mode. The TShutter mode specifies how TShutter value is obtained at FFC.</para></summary>
            <remarks>
                <list>
                    <item>
                        <para>User: Use the TShutter value set with LEP_SetRadTShutter()</para>
                    </item>
                    <item>
                        <para>Cal: Use TEqShutter from calibration</para>
                    </item>
                    <item>
                        <para>Fixed: the shutter temperature is considered static, and therefore the spotmeter is not updated at FFC</para>
                    </item>
                </list>
                <list type="table">
                    <listheader>
                        <term />
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <strong>radTShutterMode</strong>
                        </term>
                        <term>FLR_RAD_TS_USER_MODE</term>
                        <term>FLR_RAD_TS_FIXED_MODE</term>
                        <term>FLR_RAD_TS_CAL_MODE</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> RAD <strong>0x0E00</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x24 </strong></para>
                <para>With Set <strong>0x25</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetRadTShutterMode()</strong>
                        </term>
                        <term>Updates <strong>radTShutterModePtr</strong> with current TShutter mode</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetRadTShutterMode()</strong>
                        </term>
                        <term>Updates the Camera’s current TShutter mode with the contents of <strong>radTShutterMode</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetRadTShutterMode( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RAD_TS_MODE_E_PTR radTShutterModePtr )
LEP_RESULT LEP_SetRadTShutterMode( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RAD_TS_MODE_E radTShutterMode )
/* TShutter Modes
*/
typedef enum FLR_RAD_TS_MODE_E_TAG
{
FLR_RAD_TS_USER_MODE = 0,
FLR_RAD_TS_CAL_MODE,
FLR_RAD_TS_FIXED_MODE,
FLR_RAD_TS_END_TS_MODE
}FLR_RAD_TS_MODE_E, *FLR_RAD_TS_MODE_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Rad.GetTShutterMode">
            <summary>RAD TShutter Mode<para>This function gets or sets the TShutter mode. The TShutter mode specifies how TShutter value is obtained at FFC.</para></summary>
            <remarks>
                <list>
                    <item>
                        <para>User: Use the TShutter value set with LEP_SetRadTShutter()</para>
                    </item>
                    <item>
                        <para>Cal: Use TEqShutter from calibration</para>
                    </item>
                    <item>
                        <para>Fixed: the shutter temperature is considered static, and therefore the spotmeter is not updated at FFC</para>
                    </item>
                </list>
                <list type="table">
                    <listheader>
                        <term />
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <strong>radTShutterMode</strong>
                        </term>
                        <term>FLR_RAD_TS_USER_MODE</term>
                        <term>FLR_RAD_TS_FIXED_MODE</term>
                        <term>FLR_RAD_TS_CAL_MODE</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> RAD <strong>0x0E00</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x24 </strong></para>
                <para>With Set <strong>0x25</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetRadTShutterMode()</strong>
                        </term>
                        <term>Updates <strong>radTShutterModePtr</strong> with current TShutter mode</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetRadTShutterMode()</strong>
                        </term>
                        <term>Updates the Camera’s current TShutter mode with the contents of <strong>radTShutterMode</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetRadTShutterMode( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RAD_TS_MODE_E_PTR radTShutterModePtr )
LEP_RESULT LEP_SetRadTShutterMode( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_RAD_TS_MODE_E radTShutterMode )
/* TShutter Modes
*/
typedef enum FLR_RAD_TS_MODE_E_TAG
{
FLR_RAD_TS_USER_MODE = 0,
FLR_RAD_TS_CAL_MODE,
FLR_RAD_TS_FIXED_MODE,
FLR_RAD_TS_END_TS_MODE
}FLR_RAD_TS_MODE_E, *FLR_RAD_TS_MODE_E_PTR;</code>
            </remarks>
        </member>
        <member name="T:Lepton.CCI.Rad">
            <summary>
This module provides interfaces to the cameraâ€™s radiometry features. Note that the Lepton 1.5, 1.6 and 2.0 releases includes radiometry features that support temperature stable output, but the radiometric releases includes additional calibrations and radiometric features.
</summary>
        </member>
        <member name="M:Lepton.CCI.Oem.SetPixelNoiseSettingsChecked(Lepton.CCI.Oem.PixelNoiseSettings)">
            <summary>OEM Pixel Noise Filter (SPNR) Control<para>This function enables or disables the camera’s pixel noise filter.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_OEM_DISABLE</term>
                        <term>LEP_OEM_ENABLE</term>
                        <term>LEP_OEM_ENABLE</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> OEM <strong>0x0800</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x78 </strong></para>
                <para>With Set <strong>0x79</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.0, 3.5</term>
                        <term>
                            <strong>LEP_GetOemPixelNoiseSettings()</strong>
                        </term>
                        <term>Updates <strong>pixelNoiseSettingsPtr</strong> the Camera’s current pixel noise filter enable state.</term>
                    </item>
                    <item>
                        <term>Lepton 2.5, 3.0, 3.5</term>
                        <term>
                            <strong>LEP_SetOemPixelNoiseSettings()</strong>
                        </term>
                        <term>Updates the Camera’s current pixel noise filter enable state with the contents of <strong>pixelNoiseSettings</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetOemPixelNoiseSettings( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_PIXEL_NOISE_SETTINGS_T_PTR pixelNoiseSettingsPtr )
LEP_RESULT LEP_SetOemPixelNoiseSettings( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_PIXEL_NOISE_SETTINGS_T pixelNoiseSettings )
/* Enable State Enum
*/
typedef enum LEP_OEM_STATE_E_TAG
{
LEP_OEM_DISABLE = 0,
LEP_OEM_ENABLE,
LEP_OEM_END_STATE
}LEP_OEM_STATE_E,*LEP_OEM_STATE_E_PTR;
/* Pixel Noise Filter Control structure
*/
typedef struct LEP_OEM_PIXEL_NOISE_SETTINGS_T_TAG
{
LEP_OEM_STATE_E oemPixelNoiseEstimateEnable;
}LEP_OEM_PIXEL_NOISE_SETTINGS_T, *LEP_OEM_PIXEL_NOISE_SETTINGS_T_PTR</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Oem.SetPixelNoiseSettings(Lepton.CCI.Oem.PixelNoiseSettings)">
            <summary>OEM Pixel Noise Filter (SPNR) Control<para>This function enables or disables the camera’s pixel noise filter.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_OEM_DISABLE</term>
                        <term>LEP_OEM_ENABLE</term>
                        <term>LEP_OEM_ENABLE</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> OEM <strong>0x0800</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x78 </strong></para>
                <para>With Set <strong>0x79</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.0, 3.5</term>
                        <term>
                            <strong>LEP_GetOemPixelNoiseSettings()</strong>
                        </term>
                        <term>Updates <strong>pixelNoiseSettingsPtr</strong> the Camera’s current pixel noise filter enable state.</term>
                    </item>
                    <item>
                        <term>Lepton 2.5, 3.0, 3.5</term>
                        <term>
                            <strong>LEP_SetOemPixelNoiseSettings()</strong>
                        </term>
                        <term>Updates the Camera’s current pixel noise filter enable state with the contents of <strong>pixelNoiseSettings</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetOemPixelNoiseSettings( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_PIXEL_NOISE_SETTINGS_T_PTR pixelNoiseSettingsPtr )
LEP_RESULT LEP_SetOemPixelNoiseSettings( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_PIXEL_NOISE_SETTINGS_T pixelNoiseSettings )
/* Enable State Enum
*/
typedef enum LEP_OEM_STATE_E_TAG
{
LEP_OEM_DISABLE = 0,
LEP_OEM_ENABLE,
LEP_OEM_END_STATE
}LEP_OEM_STATE_E,*LEP_OEM_STATE_E_PTR;
/* Pixel Noise Filter Control structure
*/
typedef struct LEP_OEM_PIXEL_NOISE_SETTINGS_T_TAG
{
LEP_OEM_STATE_E oemPixelNoiseEstimateEnable;
}LEP_OEM_PIXEL_NOISE_SETTINGS_T, *LEP_OEM_PIXEL_NOISE_SETTINGS_T_PTR</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Oem.SetColumnNoiseEstimateControlChecked(Lepton.CCI.Oem.ColumnNoiseEstimateControl)">
            <summary>OEM Column Noise Filter (SCNR) Control<para>This function enables or disables the camera’s column noise filter.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_OEM_DISABLE</term>
                        <term>LEP_OEM_ENABLE</term>
                        <term>LEP_OEM_ENABLE</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> OEM <strong>0x0800</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x74 </strong></para>
                <para>With Set <strong>0x75</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.0, 3.5</term>
                        <term>
                            <strong>LEP_GetOemColumnNoiseEstimateControl()</strong>
                        </term>
                        <term>Updates <strong>ColumnNoiseEstimateControlPtr</strong> the Camera’s current column noise filter enable state.</term>
                    </item>
                    <item>
                        <term>Lepton 2.5, 3.0, 3.5</term>
                        <term>
                            <strong>LEP_SetOemColumnNoiseEstimateControl()</strong>
                        </term>
                        <term>Updates the Camera’s current column noise filter enable state with the contents of <strong>ColumnNoiseEstimateControl</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetOemColumnNoiseEstimateControl( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_COLUMN_NOISE_ESTIMATE_CONTROL_T_PTR ColumnNoiseEstimateControlPtr )
LEP_RESULT LEP_SetOemColumnNoiseEstimateControl( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_COLUMN_NOISE_ESTIMATE_CONTROL_T ColumnNoiseEstimateControl )
/* Enable State Enum
*/
typedef enum LEP_OEM_STATE_E_TAG
{
LEP_OEM_DISABLE = 0,
LEP_OEM_ENABLE,
LEP_OEM_END_STATE
}LEP_OEM_STATE_E,*LEP_OEM_STATE_E_PTR;
/* Column Noise Filter Control structure
*/
typedef struct LEP_OEM_COLUMN_NOISE_ESTIMATE_CONTROL_T_TAG
{
LEP_OEM_STATE_E oemColumnNoiseEstimateEnable;
}LEP_OEM_COLUMN_NOISE_ESTIMATE_CONTROL_T, *LEP_OEM_COLUMN_NOISE_ESTIMATE_CONTROL_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Oem.SetColumnNoiseEstimateControl(Lepton.CCI.Oem.ColumnNoiseEstimateControl)">
            <summary>OEM Column Noise Filter (SCNR) Control<para>This function enables or disables the camera’s column noise filter.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_OEM_DISABLE</term>
                        <term>LEP_OEM_ENABLE</term>
                        <term>LEP_OEM_ENABLE</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> OEM <strong>0x0800</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x74 </strong></para>
                <para>With Set <strong>0x75</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.0, 3.5</term>
                        <term>
                            <strong>LEP_GetOemColumnNoiseEstimateControl()</strong>
                        </term>
                        <term>Updates <strong>ColumnNoiseEstimateControlPtr</strong> the Camera’s current column noise filter enable state.</term>
                    </item>
                    <item>
                        <term>Lepton 2.5, 3.0, 3.5</term>
                        <term>
                            <strong>LEP_SetOemColumnNoiseEstimateControl()</strong>
                        </term>
                        <term>Updates the Camera’s current column noise filter enable state with the contents of <strong>ColumnNoiseEstimateControl</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetOemColumnNoiseEstimateControl( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_COLUMN_NOISE_ESTIMATE_CONTROL_T_PTR ColumnNoiseEstimateControlPtr )
LEP_RESULT LEP_SetOemColumnNoiseEstimateControl( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_COLUMN_NOISE_ESTIMATE_CONTROL_T ColumnNoiseEstimateControl )
/* Enable State Enum
*/
typedef enum LEP_OEM_STATE_E_TAG
{
LEP_OEM_DISABLE = 0,
LEP_OEM_ENABLE,
LEP_OEM_END_STATE
}LEP_OEM_STATE_E,*LEP_OEM_STATE_E_PTR;
/* Column Noise Filter Control structure
*/
typedef struct LEP_OEM_COLUMN_NOISE_ESTIMATE_CONTROL_T_TAG
{
LEP_OEM_STATE_E oemColumnNoiseEstimateEnable;
}LEP_OEM_COLUMN_NOISE_ESTIMATE_CONTROL_T, *LEP_OEM_COLUMN_NOISE_ESTIMATE_CONTROL_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Oem.SetTemporalFilterControlChecked(Lepton.CCI.Oem.TemporalFilterControl)">
            <summary>OEM Temporal Filter Control<para>This function enables or disables the camera’s temporal filter.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_OEM_DISABLE</term>
                        <term>LEP_OEM_ENABLE</term>
                        <term>LEP_OEM_ENABLE</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> OEM <strong>0x0800</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x70 </strong></para>
                <para>With Set <strong>0x71</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.0, 3.5</term>
                        <term>
                            <strong>LEP_GetOemTemporalFilterControl()</strong>
                        </term>
                        <term>Updates <strong>TemporalFilterControlPtr</strong> the Camera’s current temporal filter enable state.</term>
                    </item>
                    <item>
                        <term>Lepton 2.5, 3.0, 3.5</term>
                        <term>
                            <strong>LEP_SetOemTemporalFilterControl()</strong>
                        </term>
                        <term>Updates the Camera’s current temporal filter enable state with the contents of <strong>TemporalFilterControl</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetOemTemporalFilterControl( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_TEMPORAL_FILTER_CONTROL_T_PTR TemporalFilterControlPtr )
LEP_RESULT LEP_SetOemTemporalFilterControl( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_TEMPORAL_FILTER_CONTROL_T TemporalFilterControl )
/* Enable State Enum
*/
typedef enum LEP_OEM_STATE_E_TAG
{
LEP_OEM_DISABLE = 0,
LEP_OEM_ENABLE,
LEP_OEM_END_STATE
}LEP_OEM_STATE_E,*LEP_OEM_STATE_E_PTR;
/* Temporal Filter Control structure
*/
typedef struct LEP_OEM_TEMPORAL_FILTER_CONTROL_T_TAG
{
LEP_OEM_STATE_E oemTemporalFilterEnable;
}LEP_OEM_TEMPORAL_FILTER_CONTROL_T, *LEP_OEM_TEMPORAL_FILTER_CONTROL_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Oem.SetTemporalFilterControl(Lepton.CCI.Oem.TemporalFilterControl)">
            <summary>OEM Temporal Filter Control<para>This function enables or disables the camera’s temporal filter.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_OEM_DISABLE</term>
                        <term>LEP_OEM_ENABLE</term>
                        <term>LEP_OEM_ENABLE</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> OEM <strong>0x0800</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x70 </strong></para>
                <para>With Set <strong>0x71</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.0, 3.5</term>
                        <term>
                            <strong>LEP_GetOemTemporalFilterControl()</strong>
                        </term>
                        <term>Updates <strong>TemporalFilterControlPtr</strong> the Camera’s current temporal filter enable state.</term>
                    </item>
                    <item>
                        <term>Lepton 2.5, 3.0, 3.5</term>
                        <term>
                            <strong>LEP_SetOemTemporalFilterControl()</strong>
                        </term>
                        <term>Updates the Camera’s current temporal filter enable state with the contents of <strong>TemporalFilterControl</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetOemTemporalFilterControl( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_TEMPORAL_FILTER_CONTROL_T_PTR TemporalFilterControlPtr )
LEP_RESULT LEP_SetOemTemporalFilterControl( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_TEMPORAL_FILTER_CONTROL_T TemporalFilterControl )
/* Enable State Enum
*/
typedef enum LEP_OEM_STATE_E_TAG
{
LEP_OEM_DISABLE = 0,
LEP_OEM_ENABLE,
LEP_OEM_END_STATE
}LEP_OEM_STATE_E,*LEP_OEM_STATE_E_PTR;
/* Temporal Filter Control structure
*/
typedef struct LEP_OEM_TEMPORAL_FILTER_CONTROL_T_TAG
{
LEP_OEM_STATE_E oemTemporalFilterEnable;
}LEP_OEM_TEMPORAL_FILTER_CONTROL_T, *LEP_OEM_TEMPORAL_FILTER_CONTROL_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Oem.SetBadPixelReplaceControlChecked(Lepton.CCI.Oem.BadPixelReplaceControl)">
            <summary>OEM Bad Pixel Replacement Control<para>This function enables or disables the camera’s bad pixel replacement control.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_OEM_DISABLE</term>
                        <term>LEP_OEM_ENABLE</term>
                        <term>LEP_OEM_ENABLE</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> OEM <strong>0x0800</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x6C </strong></para>
                <para>With Set <strong>0x6D</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.0, 3.5</term>
                        <term>
                            <strong>LEP_GetOemBadPixelReplaceControl()</strong>
                        </term>
                        <term>Updates <strong>BadPixelReplaceControlPtr</strong>with the Camera’s current bad pixel replacement control enable state.</term>
                    </item>
                    <item>
                        <term>Lepton 2.5, 3.0, 3.5</term>
                        <term>
                            <strong>LEP_SetOemBadPixelReplaceControl()</strong>
                        </term>
                        <term>Updates the Camera’s current bad pixel replacement control enable state with the contents of <strong>BadPixelReplaceControl</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetOemBadPixelReplaceControl( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_BAD_PIXEL_REPLACE_CONTROL_T_PTR BadPixelReplaceControlPtr )
LEP_RESULT LEP_SetOemBadPixelReplaceControl( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_BAD_PIXEL_REPLACE_CONTROL_T BadPixelReplaceControl )
/* Enable State Enum
*/
typedef enum LEP_OEM_STATE_E_TAG
{
LEP_OEM_DISABLE = 0,
LEP_OEM_ENABLE,
LEP_OEM_END_STATE
}LEP_OEM_STATE_E,*LEP_OEM_STATE_E_PTR;
/* Bad Pixel Replacement Control structure
*/
typedef struct LEP_OEM_BAD_PIXEL_REPLACE_CONTROL_T_TAG
{
LEP_OEM_STATE_E oemBadPixelReplaceEnable;
}LEP_OEM_BAD_PIXEL_REPLACE_CONTROL_T, *LEP_OEM_BAD_PIXEL_REPLACE_CONTROL_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Oem.SetBadPixelReplaceControl(Lepton.CCI.Oem.BadPixelReplaceControl)">
            <summary>OEM Bad Pixel Replacement Control<para>This function enables or disables the camera’s bad pixel replacement control.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_OEM_DISABLE</term>
                        <term>LEP_OEM_ENABLE</term>
                        <term>LEP_OEM_ENABLE</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> OEM <strong>0x0800</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x6C </strong></para>
                <para>With Set <strong>0x6D</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.0, 3.5</term>
                        <term>
                            <strong>LEP_GetOemBadPixelReplaceControl()</strong>
                        </term>
                        <term>Updates <strong>BadPixelReplaceControlPtr</strong>with the Camera’s current bad pixel replacement control enable state.</term>
                    </item>
                    <item>
                        <term>Lepton 2.5, 3.0, 3.5</term>
                        <term>
                            <strong>LEP_SetOemBadPixelReplaceControl()</strong>
                        </term>
                        <term>Updates the Camera’s current bad pixel replacement control enable state with the contents of <strong>BadPixelReplaceControl</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetOemBadPixelReplaceControl( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_BAD_PIXEL_REPLACE_CONTROL_T_PTR BadPixelReplaceControlPtr )
LEP_RESULT LEP_SetOemBadPixelReplaceControl( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_BAD_PIXEL_REPLACE_CONTROL_T BadPixelReplaceControl )
/* Enable State Enum
*/
typedef enum LEP_OEM_STATE_E_TAG
{
LEP_OEM_DISABLE = 0,
LEP_OEM_ENABLE,
LEP_OEM_END_STATE
}LEP_OEM_STATE_E,*LEP_OEM_STATE_E_PTR;
/* Bad Pixel Replacement Control structure
*/
typedef struct LEP_OEM_BAD_PIXEL_REPLACE_CONTROL_T_TAG
{
LEP_OEM_STATE_E oemBadPixelReplaceEnable;
}LEP_OEM_BAD_PIXEL_REPLACE_CONTROL_T, *LEP_OEM_BAD_PIXEL_REPLACE_CONTROL_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Oem.SetShutterProfileObjChecked(Lepton.CCI.Oem.ShutterProfileObj)">
            <summary>OEM Shutter Profile<para>This function gets and sets the shutter profile.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_OEM_GPIO_MODE_GPIO</term>
                        <term>LEP_OEM_GPIO_MODE_VSYNC</term>
                        <term>LEP_OEM_GPIO_MODE_GPIO</term>
                        <term>N/A</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> OEM <strong>0x0800</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x64 </strong></para>
                <para>With Set <strong>0x65</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size of <strong>LEP_OEM_SHUTTER_PROFILE_OBJ_T</strong>
Set <strong>2</strong> size of <strong>LEP_OEM_SHUTTER_PROFILE_OBJ_T</strong> data type</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.0, 3.5</term>
                        <term>
                            <strong>LEP_GetOemShutterProfileObj()</strong>
                        </term>
                        <term>Updates <strong>ShutterProfileObjPtr</strong> with the Camera’s current shutter profile</term>
                    </item>
                    <item>
                        <term>Lepton 2.5, 3.0, 3.5</term>
                        <term>
                            <strong>LEP_SetOemShutterProfileObj()</strong>
                        </term>
                        <term>Updates the Camera’s shutter profile with the contents of <strong>ShutterProfileObj</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetOemShutterProfileObj( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_SHUTTER_PROFILE_OBJ_T_PTR ShutterProfileObjPtr )
LEP_RESULT LEP_SetOemShutterProfileObj( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_SHUTTER_PROFILE_OBJ_T ShutterProfileObj )
/* Shutter Profile Object
*/
typedef struct LEP_OEM_SHUTTER_PROFILE_OBJ_T_TAG
{
LEP_UINT16 closePeriodInFrames; /* in frame counts x1 */
LEP_UINT16 openPeriodInFrames; /* in frame counts x1 */
}LEP_OEM_SHUTTER_PROFILE_OBJ_T, *LEP_OEM_SHUTTER_PROFILE_OBJ_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Oem.SetShutterProfileObj(Lepton.CCI.Oem.ShutterProfileObj)">
            <summary>OEM Shutter Profile<para>This function gets and sets the shutter profile.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_OEM_GPIO_MODE_GPIO</term>
                        <term>LEP_OEM_GPIO_MODE_VSYNC</term>
                        <term>LEP_OEM_GPIO_MODE_GPIO</term>
                        <term>N/A</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> OEM <strong>0x0800</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x64 </strong></para>
                <para>With Set <strong>0x65</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size of <strong>LEP_OEM_SHUTTER_PROFILE_OBJ_T</strong>
Set <strong>2</strong> size of <strong>LEP_OEM_SHUTTER_PROFILE_OBJ_T</strong> data type</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.0, 3.5</term>
                        <term>
                            <strong>LEP_GetOemShutterProfileObj()</strong>
                        </term>
                        <term>Updates <strong>ShutterProfileObjPtr</strong> with the Camera’s current shutter profile</term>
                    </item>
                    <item>
                        <term>Lepton 2.5, 3.0, 3.5</term>
                        <term>
                            <strong>LEP_SetOemShutterProfileObj()</strong>
                        </term>
                        <term>Updates the Camera’s shutter profile with the contents of <strong>ShutterProfileObj</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetOemShutterProfileObj( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_SHUTTER_PROFILE_OBJ_T_PTR ShutterProfileObjPtr )
LEP_RESULT LEP_SetOemShutterProfileObj( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_SHUTTER_PROFILE_OBJ_T ShutterProfileObj )
/* Shutter Profile Object
*/
typedef struct LEP_OEM_SHUTTER_PROFILE_OBJ_T_TAG
{
LEP_UINT16 closePeriodInFrames; /* in frame counts x1 */
LEP_UINT16 openPeriodInFrames; /* in frame counts x1 */
}LEP_OEM_SHUTTER_PROFILE_OBJ_T, *LEP_OEM_SHUTTER_PROFILE_OBJ_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Oem.SetThermalShutdownEnableChecked(Lepton.CCI.Oem.ThermalShutdownEnable)">
            <summary>OEM Thermal Shutdown Enable<para>This function enables or disables the camera thermal shutdown intended to protect the camera from heating beyond operational temperature range.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_OEM_DISABLE</term>
                        <term>LEP_OEM_ENABLE</term>
                        <term>LEP_OEM_ENABLE</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> OEM <strong>0x0800</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x68 </strong></para>
                <para>With Set <strong>0x69</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.0, 3.5</term>
                        <term>
                            <strong>LEP_GetOemThermalShutdownEnable()</strong>
                        </term>
                        <term>Updates <strong>ThermalShutdownEnableStatePtr</strong> with the Camera’s current thermal shutdown enable state.</term>
                    </item>
                    <item>
                        <term>Lepton 2.5, 3.0, 3.5</term>
                        <term>
                            <strong>LEP_SetOemThermalShutdownEnable()</strong>
                        </term>
                        <term>Updates the Camera’s current thermal shutdown enable state with the contents of <strong>ThermalShutdownEnableState</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetOemThermalShutdownEnable( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_THERMAL_SHUTDOWN_ENABLE_T_PTR ThermalShutdownEnableStatePtr )
LEP_RESULT LEP_SetOemThermalShutdownEnable( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_THERMAL_SHUTDOWN_ENABLE_T ThermalShutdownEnableState )
/* Enable State Enum
*/
typedef enum LEP_OEM_STATE_E_TAG
{
LEP_OEM_DISABLE = 0,
LEP_OEM_ENABLE,
LEP_OEM_END_STATE
}LEP_OEM_STATE_E,*LEP_OEM_STATE_E_PTR;
/* Thermal Shutdown structure
*/
typedef struct LEP_OEM_THERMAL_SHUTDOWN_ENABLE_T_TAG
{
LEP_OEM_STATE_E oemThermalShutdownEnable;
}LEP_OEM_THERMAL_SHUTDOWN_ENABLE_T, *LEP_OEM_THERMAL_SHUTDOWN_ENABLE_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Oem.SetThermalShutdownEnable(Lepton.CCI.Oem.ThermalShutdownEnable)">
            <summary>OEM Thermal Shutdown Enable<para>This function enables or disables the camera thermal shutdown intended to protect the camera from heating beyond operational temperature range.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_OEM_DISABLE</term>
                        <term>LEP_OEM_ENABLE</term>
                        <term>LEP_OEM_ENABLE</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> OEM <strong>0x0800</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x68 </strong></para>
                <para>With Set <strong>0x69</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.0, 3.5</term>
                        <term>
                            <strong>LEP_GetOemThermalShutdownEnable()</strong>
                        </term>
                        <term>Updates <strong>ThermalShutdownEnableStatePtr</strong> with the Camera’s current thermal shutdown enable state.</term>
                    </item>
                    <item>
                        <term>Lepton 2.5, 3.0, 3.5</term>
                        <term>
                            <strong>LEP_SetOemThermalShutdownEnable()</strong>
                        </term>
                        <term>Updates the Camera’s current thermal shutdown enable state with the contents of <strong>ThermalShutdownEnableState</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetOemThermalShutdownEnable( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_THERMAL_SHUTDOWN_ENABLE_T_PTR ThermalShutdownEnableStatePtr )
LEP_RESULT LEP_SetOemThermalShutdownEnable( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_THERMAL_SHUTDOWN_ENABLE_T ThermalShutdownEnableState )
/* Enable State Enum
*/
typedef enum LEP_OEM_STATE_E_TAG
{
LEP_OEM_DISABLE = 0,
LEP_OEM_ENABLE,
LEP_OEM_END_STATE
}LEP_OEM_STATE_E,*LEP_OEM_STATE_E_PTR;
/* Thermal Shutdown structure
*/
typedef struct LEP_OEM_THERMAL_SHUTDOWN_ENABLE_T_TAG
{
LEP_OEM_STATE_E oemThermalShutdownEnable;
}LEP_OEM_THERMAL_SHUTDOWN_ENABLE_T, *LEP_OEM_THERMAL_SHUTDOWN_ENABLE_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Oem.SetGpioVsyncPhaseDelayChecked(Lepton.CCI.Oem.VsyncDelay)">
            <summary>OEM GPIO VSync Phase Delay<para>This function gets and sets the GPIO VSync phase delay. The Lepton Camera can issue a pulse on GPIO3 when there is an inter VSync. The output pulse may be issued in phase with the camera’s internal VSync, or it may be issued earlier or later. This command controls this phase relationship. The delays are in line periods, approximately 0.5 milliseconds per period. The phase delay is limited to +/- 3 line periods.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_OEM_VSYNC_DELAY_MINUS_3</term>
                        <term>LEP_OEM_VSYNC_DELAY_PLUS_3</term>
                        <term>LEP_OEM_VSYNC_DELAY_NONE</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> OEM <strong>0x0800</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x58 </strong></para>
                <para>With Set <strong>0x59</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong>
Set <strong>2</strong> size of an Enum on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetOemGpioVsyncPhaseDelay()</strong>
                        </term>
                        <term>Updates <strong>numHsyncLinesPtr</strong> with the Camera’s current GPIO VSync phase delay.</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetOemGpioVsyncPhaseDelay()</strong>
                        </term>
                        <term>Updates the Camera’s GPIO VSync phase delay with the contents of <strong>numHsyncLines</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetOemGpioVsyncPhaseDelay( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_VSYNC_DELAY_E_PTR numHsyncLinesPtr )
LEP_RESULT LEP_SetOemGpioVsyncPhaseDelay( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_VSYNC_DELAY_E numHsyncLines )
typedef enum LEP_OEM_VSYNC_DELAY_E_TAG
{
LEP_OEM_VSYNC_DELAY_MINUS_3 = -3,
LEP_OEM_VSYNC_DELAY_MINUS_2 = -2,
LEP_OEM_VSYNC_DELAY_MINUS_1 = -1,
LEP_OEM_VSYNC_DELAY_NONE = 0,
LEP_OEM_VSYNC_DELAY_PLUS_1 = 1,
LEP_OEM_VSYNC_DELAY_PLUS_2 = 2,
LEP_OEM_VSYNC_DELAY_PLUS_3 = 3,
LEP_END_OEM_VSYNC_DELAY
} LEP_OEM_VSYNC_DELAY_E, *LEP_OEM_VSYNC_DELAY_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Oem.SetGpioVsyncPhaseDelay(Lepton.CCI.Oem.VsyncDelay)">
            <summary>OEM GPIO VSync Phase Delay<para>This function gets and sets the GPIO VSync phase delay. The Lepton Camera can issue a pulse on GPIO3 when there is an inter VSync. The output pulse may be issued in phase with the camera’s internal VSync, or it may be issued earlier or later. This command controls this phase relationship. The delays are in line periods, approximately 0.5 milliseconds per period. The phase delay is limited to +/- 3 line periods.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_OEM_VSYNC_DELAY_MINUS_3</term>
                        <term>LEP_OEM_VSYNC_DELAY_PLUS_3</term>
                        <term>LEP_OEM_VSYNC_DELAY_NONE</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> OEM <strong>0x0800</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x58 </strong></para>
                <para>With Set <strong>0x59</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong>
Set <strong>2</strong> size of an Enum on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetOemGpioVsyncPhaseDelay()</strong>
                        </term>
                        <term>Updates <strong>numHsyncLinesPtr</strong> with the Camera’s current GPIO VSync phase delay.</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetOemGpioVsyncPhaseDelay()</strong>
                        </term>
                        <term>Updates the Camera’s GPIO VSync phase delay with the contents of <strong>numHsyncLines</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetOemGpioVsyncPhaseDelay( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_VSYNC_DELAY_E_PTR numHsyncLinesPtr )
LEP_RESULT LEP_SetOemGpioVsyncPhaseDelay( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_VSYNC_DELAY_E numHsyncLines )
typedef enum LEP_OEM_VSYNC_DELAY_E_TAG
{
LEP_OEM_VSYNC_DELAY_MINUS_3 = -3,
LEP_OEM_VSYNC_DELAY_MINUS_2 = -2,
LEP_OEM_VSYNC_DELAY_MINUS_1 = -1,
LEP_OEM_VSYNC_DELAY_NONE = 0,
LEP_OEM_VSYNC_DELAY_PLUS_1 = 1,
LEP_OEM_VSYNC_DELAY_PLUS_2 = 2,
LEP_OEM_VSYNC_DELAY_PLUS_3 = 3,
LEP_END_OEM_VSYNC_DELAY
} LEP_OEM_VSYNC_DELAY_E, *LEP_OEM_VSYNC_DELAY_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Oem.SetGpioModeChecked(Lepton.CCI.Oem.GpioMode)">
            <summary>OEM GPIO Mode Select<para>This function gets and sets the GPIO pins mode.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_OEM_GPIO_MODE_GPIO</term>
                        <term>LEP_OEM_GPIO_MODE_VSYNC</term>
                        <term>LEP_OEM_GPIO_MODE_GPIO</term>
                        <term>N/A</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> OEM <strong>0x0800</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x54 </strong></para>
                <para>With Set <strong>0x55</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong>
Set <strong>2</strong> size of an Enum on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetOemGpioMode()</strong>
                        </term>
                        <term>Updates <strong>gpioModePtr</strong> with the Camera’s current GPIO pins mode.</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetOemGpioMode()</strong>
                        </term>
                        <term>Updates the Camera’s GPIO pins mode with the contents of <strong>gpioMode</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetOemGpioMode( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_GPIO_MODE_E_PTR gpioModePtr )
LEP_RESULT LEP_SetOemGpioMode( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_GPIO_MODE_E gpioMode )
typedef enum LEP_OEM_GPIO_MODE_E_TAG
{
LEP_OEM_GPIO_MODE_GPIO = 0,
LEP_OEM_GPIO_MODE_I2C_MASTER = 1,
LEP_OEM_GPIO_MODE_SPI_MASTER_VLB_DATA = 2,
LEP_OEM_GPIO_MODE_SPIO_MASTER_REG_DATA = 3,
LEP_OEM_GPIO_MODE_SPI_SLAVE_VLB_DATA = 4,
LEP_OEM_GPIO_MODE_VSYNC = 5,
LEP_OEM_END_GPIO_MODE,
}LEP_OEM_GPIO_MODE_E, *LEP_OEM_GPIO_MODE_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Oem.SetGpioMode(Lepton.CCI.Oem.GpioMode)">
            <summary>OEM GPIO Mode Select<para>This function gets and sets the GPIO pins mode.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_OEM_GPIO_MODE_GPIO</term>
                        <term>LEP_OEM_GPIO_MODE_VSYNC</term>
                        <term>LEP_OEM_GPIO_MODE_GPIO</term>
                        <term>N/A</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> OEM <strong>0x0800</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x54 </strong></para>
                <para>With Set <strong>0x55</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong>
Set <strong>2</strong> size of an Enum on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetOemGpioMode()</strong>
                        </term>
                        <term>Updates <strong>gpioModePtr</strong> with the Camera’s current GPIO pins mode.</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetOemGpioMode()</strong>
                        </term>
                        <term>Updates the Camera’s GPIO pins mode with the contents of <strong>gpioMode</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetOemGpioMode( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_GPIO_MODE_E_PTR gpioModePtr )
LEP_RESULT LEP_SetOemGpioMode( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_GPIO_MODE_E gpioMode )
typedef enum LEP_OEM_GPIO_MODE_E_TAG
{
LEP_OEM_GPIO_MODE_GPIO = 0,
LEP_OEM_GPIO_MODE_I2C_MASTER = 1,
LEP_OEM_GPIO_MODE_SPI_MASTER_VLB_DATA = 2,
LEP_OEM_GPIO_MODE_SPIO_MASTER_REG_DATA = 3,
LEP_OEM_GPIO_MODE_SPI_SLAVE_VLB_DATA = 4,
LEP_OEM_GPIO_MODE_VSYNC = 5,
LEP_OEM_END_GPIO_MODE,
}LEP_OEM_GPIO_MODE_E, *LEP_OEM_GPIO_MODE_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Oem.SetFFCNormalizationTargetChecked(System.UInt16)">
            <summary>OEM FFC Normalization Target<para>The first two of these commands Get and Set the Flat-Field Correction (FFC) Normalization Target used by the third command to execute a Flat-Field Correction (FFC). The target value is factory set and should not be changed under normal circumstances. The Run command executes an FFC using currently active values for the FFC normalization target and number of frames to average (see 4.4.21). This command executes synchronously. Poll the OEM Status to determine when this command completes (see 4.6.13).</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>0</term>
                        <term>16383</term>
                        <term>8192</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> SYS <strong>0x0800</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x44</strong>
With Set <strong />With Run <strong>0x46</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>1</strong> size of a <strong>LEP_UINT16</strong>
Set <strong>1</strong> size of a <strong />Run <strong>0</strong> size of a Run command</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetOemFFCNormalizationTarget()</strong>
                        </term>
                        <term>Gets the normalization target</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetOemFFCNormalizationTarget()</strong>
                        </term>
                        <term>Sets the normalization target</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_RunOemFFC()</strong>
                        </term>
                        <term>Executes the FFC normalization using previously specified normalization target value</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetOemFFCNormalizationTarget( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_FFC_NORMALIZATION_TARGET_T_PTR ffcTargetPtr )
LEP_RESULT LEP_SetOemFFCNormalizationTarget( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_FFC_NORMALIZATION_TARGET_T ffcTarget )
LEP_RESULT LEP_RunOemFFC
typedef LEP_UINT16 LEP_OEM_FFC_NORMALIZATION_TARGET_T, *LEP_OEM_FFC_NORMALIZATION_TARGET_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Oem.SetFFCNormalizationTarget(System.UInt16)">
            <summary>OEM FFC Normalization Target<para>The first two of these commands Get and Set the Flat-Field Correction (FFC) Normalization Target used by the third command to execute a Flat-Field Correction (FFC). The target value is factory set and should not be changed under normal circumstances. The Run command executes an FFC using currently active values for the FFC normalization target and number of frames to average (see 4.4.21). This command executes synchronously. Poll the OEM Status to determine when this command completes (see 4.6.13).</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>0</term>
                        <term>16383</term>
                        <term>8192</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> SYS <strong>0x0800</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x44</strong>
With Set <strong />With Run <strong>0x46</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>1</strong> size of a <strong>LEP_UINT16</strong>
Set <strong>1</strong> size of a <strong />Run <strong>0</strong> size of a Run command</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetOemFFCNormalizationTarget()</strong>
                        </term>
                        <term>Gets the normalization target</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetOemFFCNormalizationTarget()</strong>
                        </term>
                        <term>Sets the normalization target</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_RunOemFFC()</strong>
                        </term>
                        <term>Executes the FFC normalization using previously specified normalization target value</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetOemFFCNormalizationTarget( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_FFC_NORMALIZATION_TARGET_T_PTR ffcTargetPtr )
LEP_RESULT LEP_SetOemFFCNormalizationTarget( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_FFC_NORMALIZATION_TARGET_T ffcTarget )
LEP_RESULT LEP_RunOemFFC
typedef LEP_UINT16 LEP_OEM_FFC_NORMALIZATION_TARGET_T, *LEP_OEM_FFC_NORMALIZATION_TARGET_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Oem.SetVideoOutputSourceChecked(Lepton.CCI.Oem.VideoOutputSource)">
            <summary>OEM Video Output Source Select<para>This function specifies or retrieves the video output source. The output source allows selecting between processed video data, unprocessed video data, and a variety of ramp patterns.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_VIDEO_OUTPUT_SOURCE_RAW</term>
                        <term>LEP_VIDEO_OUTPUT_SOURCE_FRAME_4</term>
                        <term>LEP_VIDEO_OUTPUT_SOURCE_COOKED</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> OEM <strong>0x0800</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x2C </strong></para>
                <para>With Set <strong>0x2D</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetOemVideoOutputSource()</strong>
                        </term>
                        <term>Updates <strong>oemVideoOutputSourcePtr</strong> with the Camera’s current video output format selection.</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetOemVideoOutputSource()</strong>
                        </term>
                        <term>Updates the Camera’s current video output format with the contents of <strong>oemVideoOutputSource</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>oemVideoOutputSourcePtr)
oemVideoOutputSource)
/* Video Output Source Selection
*/
typedef enum LEP_OEM_VIDEO_OUTPUT_SOURCE_TAG
{
/* Before video processing. */
/* Post video processing - NORMAL MODE */
/* Software Ramp pattern - increase in X, Y */
/* Software Constant value pattern */
/* Software Ramp pattern - increase in X only */
/* Software Ramp pattern - increase in Y only */
/* Software Ramp pattern - uses custom settings */
/* Additions to support frame averaging, freeze frame, and data buffers
*/
// Average, Capture frame
// Freeze-Frame Buffer
/* RESERVED BUFFERS
*/
// Reserved DATA Buffer
// Reserved DATA Buffer
// Reserved DATA Buffer
// Reserved DATA Buffer
// Reserved DATA Buffer
LEP_END_VIDEO_OUTPUT_SOURCE
}LEP_OEM_VIDEO_OUTPUT_SOURCE_E, *LEP_OEM_VIDEO_OUTPUT_SOURCE_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Oem.SetVideoOutputSource(Lepton.CCI.Oem.VideoOutputSource)">
            <summary>OEM Video Output Source Select<para>This function specifies or retrieves the video output source. The output source allows selecting between processed video data, unprocessed video data, and a variety of ramp patterns.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_VIDEO_OUTPUT_SOURCE_RAW</term>
                        <term>LEP_VIDEO_OUTPUT_SOURCE_FRAME_4</term>
                        <term>LEP_VIDEO_OUTPUT_SOURCE_COOKED</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> OEM <strong>0x0800</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x2C </strong></para>
                <para>With Set <strong>0x2D</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetOemVideoOutputSource()</strong>
                        </term>
                        <term>Updates <strong>oemVideoOutputSourcePtr</strong> with the Camera’s current video output format selection.</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetOemVideoOutputSource()</strong>
                        </term>
                        <term>Updates the Camera’s current video output format with the contents of <strong>oemVideoOutputSource</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>oemVideoOutputSourcePtr)
oemVideoOutputSource)
/* Video Output Source Selection
*/
typedef enum LEP_OEM_VIDEO_OUTPUT_SOURCE_TAG
{
/* Before video processing. */
/* Post video processing - NORMAL MODE */
/* Software Ramp pattern - increase in X, Y */
/* Software Constant value pattern */
/* Software Ramp pattern - increase in X only */
/* Software Ramp pattern - increase in Y only */
/* Software Ramp pattern - uses custom settings */
/* Additions to support frame averaging, freeze frame, and data buffers
*/
// Average, Capture frame
// Freeze-Frame Buffer
/* RESERVED BUFFERS
*/
// Reserved DATA Buffer
// Reserved DATA Buffer
// Reserved DATA Buffer
// Reserved DATA Buffer
// Reserved DATA Buffer
LEP_END_VIDEO_OUTPUT_SOURCE
}LEP_OEM_VIDEO_OUTPUT_SOURCE_E, *LEP_OEM_VIDEO_OUTPUT_SOURCE_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Oem.SetVideoOutputFormatChecked(Lepton.CCI.Oem.VideoOutputFormat)">
            <summary>OEM Video Output Format Select<para>This function provides the method to specify or retrieve the current video output format. In the current revision, only RGB888 and RAW14 are valid formats.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_VIDEO_OUTPUT_FORMAT_RAW8</term>
                        <term>LEP_VIDEO_OUTPUT_FORMAT_RAW8_6</term>
                        <term>LEP_VIDEO_OUTPUT_FORMAT_RAW14</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> OEM <strong>0x0800</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x28 </strong></para>
                <para>With Set <strong>0x29</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetOemVideoOutputFormat()</strong>
                        </term>
                        <term>Updates <strong>oemVideoOutputFormatPtr</strong> with the Camera’s current video output format selection.</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetOemVideoOutputFormat()</strong>
                        </term>
                        <term>Updates the Camera’s current video output format with the contents of <strong>oemVideoOutputFormat</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetOemVideoOutputFormat(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
oemVideoOutputFormatPtr)
LEP_RESULT LEP_SetOemVideoOutputFormat(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
oemVideoOutputFormat)
/* Video Output Format Selection
*/
typedef enum LEP_OEM_VIDEO_OUTPUT_FORMAT_TAG
{
// To be supported in later release
// To be supported in later release
// To be supported in later release
// SUPPORTED in this release
// To be supported in later release
// To be supported in later release
// To be supported in later release
// SUPPORTED in this release
// To be supported in later release
// To be supported in later release
// To be supported in later release
// To be supported in later release
// To be supported in later release
// To be supported in later release
// To be supported in later release
LEP_END_VIDEO_OUTPUT_FORMAT
}LEP_OEM_VIDEO_OUTPUT_FORMAT_E, *LEP_OEM_VIDEO_OUTPUT_FORMAT_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Oem.SetVideoOutputFormat(Lepton.CCI.Oem.VideoOutputFormat)">
            <summary>OEM Video Output Format Select<para>This function provides the method to specify or retrieve the current video output format. In the current revision, only RGB888 and RAW14 are valid formats.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_VIDEO_OUTPUT_FORMAT_RAW8</term>
                        <term>LEP_VIDEO_OUTPUT_FORMAT_RAW8_6</term>
                        <term>LEP_VIDEO_OUTPUT_FORMAT_RAW14</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> OEM <strong>0x0800</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x28 </strong></para>
                <para>With Set <strong>0x29</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetOemVideoOutputFormat()</strong>
                        </term>
                        <term>Updates <strong>oemVideoOutputFormatPtr</strong> with the Camera’s current video output format selection.</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetOemVideoOutputFormat()</strong>
                        </term>
                        <term>Updates the Camera’s current video output format with the contents of <strong>oemVideoOutputFormat</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetOemVideoOutputFormat(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
oemVideoOutputFormatPtr)
LEP_RESULT LEP_SetOemVideoOutputFormat(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
oemVideoOutputFormat)
/* Video Output Format Selection
*/
typedef enum LEP_OEM_VIDEO_OUTPUT_FORMAT_TAG
{
// To be supported in later release
// To be supported in later release
// To be supported in later release
// SUPPORTED in this release
// To be supported in later release
// To be supported in later release
// To be supported in later release
// SUPPORTED in this release
// To be supported in later release
// To be supported in later release
// To be supported in later release
// To be supported in later release
// To be supported in later release
// To be supported in later release
// To be supported in later release
LEP_END_VIDEO_OUTPUT_FORMAT
}LEP_OEM_VIDEO_OUTPUT_FORMAT_E, *LEP_OEM_VIDEO_OUTPUT_FORMAT_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Oem.SetVideoOutputEnableChecked(Lepton.CCI.Oem.VideoOutputEnable)">
            <summary>OEM Video Output Enable<para>This function enables or disables the video output independent of output channel.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_VIDEO_OUTPUT_DISABLE</term>
                        <term>LEP_VIDEO_OUTPUT_ENABLE</term>
                        <term>LEP_VIDEO_OUTPUT_ENABLE</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> OEM <strong>0x0800</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x24 </strong></para>
                <para>With Set <strong>0x25</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetOemVideoOutputEnable()</strong>
                        </term>
                        <term>Updates <strong>oemVideoOutputEnablePtr</strong> with the Camera’s current video output enable.</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetOemVideoOutputEnable()</strong>
                        </term>
                        <term>Updates the Camera’s current video output enable with the contents of <strong>oemVideoOutputEnable</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetOemVideoOutputEnable(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
oemVideoOutputEnablePtr)
LEP_RESULT LEP_SetOemVideoOutputEnable(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
oemVideoOutputEnable)
/* Video Output Enable Enum
*/
typedef enum LEP_OEM_VIDEO_OUTPUT_ENABLE_TAG
{
LEP_VIDEO_OUTPUT_DISABLE = 0,
LEP_VIDEO_OUTPUT_ENABLE,
LEP_END_VIDEO_OUTPUT_ENABLE
}LEP_OEM_VIDEO_OUTPUT_ENABLE_E, *LEP_OEM_VIDEO_OUTPUT_ENABLE_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Oem.SetVideoOutputEnable(Lepton.CCI.Oem.VideoOutputEnable)">
            <summary>OEM Video Output Enable<para>This function enables or disables the video output independent of output channel.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_VIDEO_OUTPUT_DISABLE</term>
                        <term>LEP_VIDEO_OUTPUT_ENABLE</term>
                        <term>LEP_VIDEO_OUTPUT_ENABLE</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> OEM <strong>0x0800</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x24 </strong></para>
                <para>With Set <strong>0x25</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetOemVideoOutputEnable()</strong>
                        </term>
                        <term>Updates <strong>oemVideoOutputEnablePtr</strong> with the Camera’s current video output enable.</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetOemVideoOutputEnable()</strong>
                        </term>
                        <term>Updates the Camera’s current video output enable with the contents of <strong>oemVideoOutputEnable</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetOemVideoOutputEnable(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
oemVideoOutputEnablePtr)
LEP_RESULT LEP_SetOemVideoOutputEnable(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
oemVideoOutputEnable)
/* Video Output Enable Enum
*/
typedef enum LEP_OEM_VIDEO_OUTPUT_ENABLE_TAG
{
LEP_VIDEO_OUTPUT_DISABLE = 0,
LEP_VIDEO_OUTPUT_ENABLE,
LEP_END_VIDEO_OUTPUT_ENABLE
}LEP_OEM_VIDEO_OUTPUT_ENABLE_E, *LEP_OEM_VIDEO_OUTPUT_ENABLE_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Oem.GetPixelNoiseSettingsChecked">
            <summary>OEM Pixel Noise Filter (SPNR) Control<para>This function enables or disables the camera’s pixel noise filter.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_OEM_DISABLE</term>
                        <term>LEP_OEM_ENABLE</term>
                        <term>LEP_OEM_ENABLE</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> OEM <strong>0x0800</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x78 </strong></para>
                <para>With Set <strong>0x79</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.0, 3.5</term>
                        <term>
                            <strong>LEP_GetOemPixelNoiseSettings()</strong>
                        </term>
                        <term>Updates <strong>pixelNoiseSettingsPtr</strong> the Camera’s current pixel noise filter enable state.</term>
                    </item>
                    <item>
                        <term>Lepton 2.5, 3.0, 3.5</term>
                        <term>
                            <strong>LEP_SetOemPixelNoiseSettings()</strong>
                        </term>
                        <term>Updates the Camera’s current pixel noise filter enable state with the contents of <strong>pixelNoiseSettings</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetOemPixelNoiseSettings( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_PIXEL_NOISE_SETTINGS_T_PTR pixelNoiseSettingsPtr )
LEP_RESULT LEP_SetOemPixelNoiseSettings( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_PIXEL_NOISE_SETTINGS_T pixelNoiseSettings )
/* Enable State Enum
*/
typedef enum LEP_OEM_STATE_E_TAG
{
LEP_OEM_DISABLE = 0,
LEP_OEM_ENABLE,
LEP_OEM_END_STATE
}LEP_OEM_STATE_E,*LEP_OEM_STATE_E_PTR;
/* Pixel Noise Filter Control structure
*/
typedef struct LEP_OEM_PIXEL_NOISE_SETTINGS_T_TAG
{
LEP_OEM_STATE_E oemPixelNoiseEstimateEnable;
}LEP_OEM_PIXEL_NOISE_SETTINGS_T, *LEP_OEM_PIXEL_NOISE_SETTINGS_T_PTR</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Oem.GetPixelNoiseSettings">
            <summary>OEM Pixel Noise Filter (SPNR) Control<para>This function enables or disables the camera’s pixel noise filter.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_OEM_DISABLE</term>
                        <term>LEP_OEM_ENABLE</term>
                        <term>LEP_OEM_ENABLE</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> OEM <strong>0x0800</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x78 </strong></para>
                <para>With Set <strong>0x79</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.0, 3.5</term>
                        <term>
                            <strong>LEP_GetOemPixelNoiseSettings()</strong>
                        </term>
                        <term>Updates <strong>pixelNoiseSettingsPtr</strong> the Camera’s current pixel noise filter enable state.</term>
                    </item>
                    <item>
                        <term>Lepton 2.5, 3.0, 3.5</term>
                        <term>
                            <strong>LEP_SetOemPixelNoiseSettings()</strong>
                        </term>
                        <term>Updates the Camera’s current pixel noise filter enable state with the contents of <strong>pixelNoiseSettings</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetOemPixelNoiseSettings( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_PIXEL_NOISE_SETTINGS_T_PTR pixelNoiseSettingsPtr )
LEP_RESULT LEP_SetOemPixelNoiseSettings( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_PIXEL_NOISE_SETTINGS_T pixelNoiseSettings )
/* Enable State Enum
*/
typedef enum LEP_OEM_STATE_E_TAG
{
LEP_OEM_DISABLE = 0,
LEP_OEM_ENABLE,
LEP_OEM_END_STATE
}LEP_OEM_STATE_E,*LEP_OEM_STATE_E_PTR;
/* Pixel Noise Filter Control structure
*/
typedef struct LEP_OEM_PIXEL_NOISE_SETTINGS_T_TAG
{
LEP_OEM_STATE_E oemPixelNoiseEstimateEnable;
}LEP_OEM_PIXEL_NOISE_SETTINGS_T, *LEP_OEM_PIXEL_NOISE_SETTINGS_T_PTR</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Oem.GetColumnNoiseEstimateControlChecked">
            <summary>OEM Column Noise Filter (SCNR) Control<para>This function enables or disables the camera’s column noise filter.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_OEM_DISABLE</term>
                        <term>LEP_OEM_ENABLE</term>
                        <term>LEP_OEM_ENABLE</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> OEM <strong>0x0800</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x74 </strong></para>
                <para>With Set <strong>0x75</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.0, 3.5</term>
                        <term>
                            <strong>LEP_GetOemColumnNoiseEstimateControl()</strong>
                        </term>
                        <term>Updates <strong>ColumnNoiseEstimateControlPtr</strong> the Camera’s current column noise filter enable state.</term>
                    </item>
                    <item>
                        <term>Lepton 2.5, 3.0, 3.5</term>
                        <term>
                            <strong>LEP_SetOemColumnNoiseEstimateControl()</strong>
                        </term>
                        <term>Updates the Camera’s current column noise filter enable state with the contents of <strong>ColumnNoiseEstimateControl</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetOemColumnNoiseEstimateControl( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_COLUMN_NOISE_ESTIMATE_CONTROL_T_PTR ColumnNoiseEstimateControlPtr )
LEP_RESULT LEP_SetOemColumnNoiseEstimateControl( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_COLUMN_NOISE_ESTIMATE_CONTROL_T ColumnNoiseEstimateControl )
/* Enable State Enum
*/
typedef enum LEP_OEM_STATE_E_TAG
{
LEP_OEM_DISABLE = 0,
LEP_OEM_ENABLE,
LEP_OEM_END_STATE
}LEP_OEM_STATE_E,*LEP_OEM_STATE_E_PTR;
/* Column Noise Filter Control structure
*/
typedef struct LEP_OEM_COLUMN_NOISE_ESTIMATE_CONTROL_T_TAG
{
LEP_OEM_STATE_E oemColumnNoiseEstimateEnable;
}LEP_OEM_COLUMN_NOISE_ESTIMATE_CONTROL_T, *LEP_OEM_COLUMN_NOISE_ESTIMATE_CONTROL_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Oem.GetColumnNoiseEstimateControl">
            <summary>OEM Column Noise Filter (SCNR) Control<para>This function enables or disables the camera’s column noise filter.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_OEM_DISABLE</term>
                        <term>LEP_OEM_ENABLE</term>
                        <term>LEP_OEM_ENABLE</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> OEM <strong>0x0800</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x74 </strong></para>
                <para>With Set <strong>0x75</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.0, 3.5</term>
                        <term>
                            <strong>LEP_GetOemColumnNoiseEstimateControl()</strong>
                        </term>
                        <term>Updates <strong>ColumnNoiseEstimateControlPtr</strong> the Camera’s current column noise filter enable state.</term>
                    </item>
                    <item>
                        <term>Lepton 2.5, 3.0, 3.5</term>
                        <term>
                            <strong>LEP_SetOemColumnNoiseEstimateControl()</strong>
                        </term>
                        <term>Updates the Camera’s current column noise filter enable state with the contents of <strong>ColumnNoiseEstimateControl</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetOemColumnNoiseEstimateControl( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_COLUMN_NOISE_ESTIMATE_CONTROL_T_PTR ColumnNoiseEstimateControlPtr )
LEP_RESULT LEP_SetOemColumnNoiseEstimateControl( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_COLUMN_NOISE_ESTIMATE_CONTROL_T ColumnNoiseEstimateControl )
/* Enable State Enum
*/
typedef enum LEP_OEM_STATE_E_TAG
{
LEP_OEM_DISABLE = 0,
LEP_OEM_ENABLE,
LEP_OEM_END_STATE
}LEP_OEM_STATE_E,*LEP_OEM_STATE_E_PTR;
/* Column Noise Filter Control structure
*/
typedef struct LEP_OEM_COLUMN_NOISE_ESTIMATE_CONTROL_T_TAG
{
LEP_OEM_STATE_E oemColumnNoiseEstimateEnable;
}LEP_OEM_COLUMN_NOISE_ESTIMATE_CONTROL_T, *LEP_OEM_COLUMN_NOISE_ESTIMATE_CONTROL_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Oem.GetTemporalFilterControlChecked">
            <summary>OEM Temporal Filter Control<para>This function enables or disables the camera’s temporal filter.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_OEM_DISABLE</term>
                        <term>LEP_OEM_ENABLE</term>
                        <term>LEP_OEM_ENABLE</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> OEM <strong>0x0800</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x70 </strong></para>
                <para>With Set <strong>0x71</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.0, 3.5</term>
                        <term>
                            <strong>LEP_GetOemTemporalFilterControl()</strong>
                        </term>
                        <term>Updates <strong>TemporalFilterControlPtr</strong> the Camera’s current temporal filter enable state.</term>
                    </item>
                    <item>
                        <term>Lepton 2.5, 3.0, 3.5</term>
                        <term>
                            <strong>LEP_SetOemTemporalFilterControl()</strong>
                        </term>
                        <term>Updates the Camera’s current temporal filter enable state with the contents of <strong>TemporalFilterControl</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetOemTemporalFilterControl( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_TEMPORAL_FILTER_CONTROL_T_PTR TemporalFilterControlPtr )
LEP_RESULT LEP_SetOemTemporalFilterControl( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_TEMPORAL_FILTER_CONTROL_T TemporalFilterControl )
/* Enable State Enum
*/
typedef enum LEP_OEM_STATE_E_TAG
{
LEP_OEM_DISABLE = 0,
LEP_OEM_ENABLE,
LEP_OEM_END_STATE
}LEP_OEM_STATE_E,*LEP_OEM_STATE_E_PTR;
/* Temporal Filter Control structure
*/
typedef struct LEP_OEM_TEMPORAL_FILTER_CONTROL_T_TAG
{
LEP_OEM_STATE_E oemTemporalFilterEnable;
}LEP_OEM_TEMPORAL_FILTER_CONTROL_T, *LEP_OEM_TEMPORAL_FILTER_CONTROL_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Oem.GetTemporalFilterControl">
            <summary>OEM Temporal Filter Control<para>This function enables or disables the camera’s temporal filter.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_OEM_DISABLE</term>
                        <term>LEP_OEM_ENABLE</term>
                        <term>LEP_OEM_ENABLE</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> OEM <strong>0x0800</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x70 </strong></para>
                <para>With Set <strong>0x71</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.0, 3.5</term>
                        <term>
                            <strong>LEP_GetOemTemporalFilterControl()</strong>
                        </term>
                        <term>Updates <strong>TemporalFilterControlPtr</strong> the Camera’s current temporal filter enable state.</term>
                    </item>
                    <item>
                        <term>Lepton 2.5, 3.0, 3.5</term>
                        <term>
                            <strong>LEP_SetOemTemporalFilterControl()</strong>
                        </term>
                        <term>Updates the Camera’s current temporal filter enable state with the contents of <strong>TemporalFilterControl</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetOemTemporalFilterControl( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_TEMPORAL_FILTER_CONTROL_T_PTR TemporalFilterControlPtr )
LEP_RESULT LEP_SetOemTemporalFilterControl( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_TEMPORAL_FILTER_CONTROL_T TemporalFilterControl )
/* Enable State Enum
*/
typedef enum LEP_OEM_STATE_E_TAG
{
LEP_OEM_DISABLE = 0,
LEP_OEM_ENABLE,
LEP_OEM_END_STATE
}LEP_OEM_STATE_E,*LEP_OEM_STATE_E_PTR;
/* Temporal Filter Control structure
*/
typedef struct LEP_OEM_TEMPORAL_FILTER_CONTROL_T_TAG
{
LEP_OEM_STATE_E oemTemporalFilterEnable;
}LEP_OEM_TEMPORAL_FILTER_CONTROL_T, *LEP_OEM_TEMPORAL_FILTER_CONTROL_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Oem.GetBadPixelReplaceControlChecked">
            <summary>OEM Bad Pixel Replacement Control<para>This function enables or disables the camera’s bad pixel replacement control.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_OEM_DISABLE</term>
                        <term>LEP_OEM_ENABLE</term>
                        <term>LEP_OEM_ENABLE</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> OEM <strong>0x0800</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x6C </strong></para>
                <para>With Set <strong>0x6D</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.0, 3.5</term>
                        <term>
                            <strong>LEP_GetOemBadPixelReplaceControl()</strong>
                        </term>
                        <term>Updates <strong>BadPixelReplaceControlPtr</strong>with the Camera’s current bad pixel replacement control enable state.</term>
                    </item>
                    <item>
                        <term>Lepton 2.5, 3.0, 3.5</term>
                        <term>
                            <strong>LEP_SetOemBadPixelReplaceControl()</strong>
                        </term>
                        <term>Updates the Camera’s current bad pixel replacement control enable state with the contents of <strong>BadPixelReplaceControl</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetOemBadPixelReplaceControl( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_BAD_PIXEL_REPLACE_CONTROL_T_PTR BadPixelReplaceControlPtr )
LEP_RESULT LEP_SetOemBadPixelReplaceControl( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_BAD_PIXEL_REPLACE_CONTROL_T BadPixelReplaceControl )
/* Enable State Enum
*/
typedef enum LEP_OEM_STATE_E_TAG
{
LEP_OEM_DISABLE = 0,
LEP_OEM_ENABLE,
LEP_OEM_END_STATE
}LEP_OEM_STATE_E,*LEP_OEM_STATE_E_PTR;
/* Bad Pixel Replacement Control structure
*/
typedef struct LEP_OEM_BAD_PIXEL_REPLACE_CONTROL_T_TAG
{
LEP_OEM_STATE_E oemBadPixelReplaceEnable;
}LEP_OEM_BAD_PIXEL_REPLACE_CONTROL_T, *LEP_OEM_BAD_PIXEL_REPLACE_CONTROL_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Oem.GetBadPixelReplaceControl">
            <summary>OEM Bad Pixel Replacement Control<para>This function enables or disables the camera’s bad pixel replacement control.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_OEM_DISABLE</term>
                        <term>LEP_OEM_ENABLE</term>
                        <term>LEP_OEM_ENABLE</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> OEM <strong>0x0800</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x6C </strong></para>
                <para>With Set <strong>0x6D</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.0, 3.5</term>
                        <term>
                            <strong>LEP_GetOemBadPixelReplaceControl()</strong>
                        </term>
                        <term>Updates <strong>BadPixelReplaceControlPtr</strong>with the Camera’s current bad pixel replacement control enable state.</term>
                    </item>
                    <item>
                        <term>Lepton 2.5, 3.0, 3.5</term>
                        <term>
                            <strong>LEP_SetOemBadPixelReplaceControl()</strong>
                        </term>
                        <term>Updates the Camera’s current bad pixel replacement control enable state with the contents of <strong>BadPixelReplaceControl</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetOemBadPixelReplaceControl( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_BAD_PIXEL_REPLACE_CONTROL_T_PTR BadPixelReplaceControlPtr )
LEP_RESULT LEP_SetOemBadPixelReplaceControl( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_BAD_PIXEL_REPLACE_CONTROL_T BadPixelReplaceControl )
/* Enable State Enum
*/
typedef enum LEP_OEM_STATE_E_TAG
{
LEP_OEM_DISABLE = 0,
LEP_OEM_ENABLE,
LEP_OEM_END_STATE
}LEP_OEM_STATE_E,*LEP_OEM_STATE_E_PTR;
/* Bad Pixel Replacement Control structure
*/
typedef struct LEP_OEM_BAD_PIXEL_REPLACE_CONTROL_T_TAG
{
LEP_OEM_STATE_E oemBadPixelReplaceEnable;
}LEP_OEM_BAD_PIXEL_REPLACE_CONTROL_T, *LEP_OEM_BAD_PIXEL_REPLACE_CONTROL_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Oem.GetShutterProfileObjChecked">
            <summary>OEM Shutter Profile<para>This function gets and sets the shutter profile.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_OEM_GPIO_MODE_GPIO</term>
                        <term>LEP_OEM_GPIO_MODE_VSYNC</term>
                        <term>LEP_OEM_GPIO_MODE_GPIO</term>
                        <term>N/A</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> OEM <strong>0x0800</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x64 </strong></para>
                <para>With Set <strong>0x65</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size of <strong>LEP_OEM_SHUTTER_PROFILE_OBJ_T</strong>
Set <strong>2</strong> size of <strong>LEP_OEM_SHUTTER_PROFILE_OBJ_T</strong> data type</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.0, 3.5</term>
                        <term>
                            <strong>LEP_GetOemShutterProfileObj()</strong>
                        </term>
                        <term>Updates <strong>ShutterProfileObjPtr</strong> with the Camera’s current shutter profile</term>
                    </item>
                    <item>
                        <term>Lepton 2.5, 3.0, 3.5</term>
                        <term>
                            <strong>LEP_SetOemShutterProfileObj()</strong>
                        </term>
                        <term>Updates the Camera’s shutter profile with the contents of <strong>ShutterProfileObj</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetOemShutterProfileObj( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_SHUTTER_PROFILE_OBJ_T_PTR ShutterProfileObjPtr )
LEP_RESULT LEP_SetOemShutterProfileObj( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_SHUTTER_PROFILE_OBJ_T ShutterProfileObj )
/* Shutter Profile Object
*/
typedef struct LEP_OEM_SHUTTER_PROFILE_OBJ_T_TAG
{
LEP_UINT16 closePeriodInFrames; /* in frame counts x1 */
LEP_UINT16 openPeriodInFrames; /* in frame counts x1 */
}LEP_OEM_SHUTTER_PROFILE_OBJ_T, *LEP_OEM_SHUTTER_PROFILE_OBJ_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Oem.GetShutterProfileObj">
            <summary>OEM Shutter Profile<para>This function gets and sets the shutter profile.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_OEM_GPIO_MODE_GPIO</term>
                        <term>LEP_OEM_GPIO_MODE_VSYNC</term>
                        <term>LEP_OEM_GPIO_MODE_GPIO</term>
                        <term>N/A</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> OEM <strong>0x0800</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x64 </strong></para>
                <para>With Set <strong>0x65</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size of <strong>LEP_OEM_SHUTTER_PROFILE_OBJ_T</strong>
Set <strong>2</strong> size of <strong>LEP_OEM_SHUTTER_PROFILE_OBJ_T</strong> data type</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.0, 3.5</term>
                        <term>
                            <strong>LEP_GetOemShutterProfileObj()</strong>
                        </term>
                        <term>Updates <strong>ShutterProfileObjPtr</strong> with the Camera’s current shutter profile</term>
                    </item>
                    <item>
                        <term>Lepton 2.5, 3.0, 3.5</term>
                        <term>
                            <strong>LEP_SetOemShutterProfileObj()</strong>
                        </term>
                        <term>Updates the Camera’s shutter profile with the contents of <strong>ShutterProfileObj</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetOemShutterProfileObj( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_SHUTTER_PROFILE_OBJ_T_PTR ShutterProfileObjPtr )
LEP_RESULT LEP_SetOemShutterProfileObj( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_SHUTTER_PROFILE_OBJ_T ShutterProfileObj )
/* Shutter Profile Object
*/
typedef struct LEP_OEM_SHUTTER_PROFILE_OBJ_T_TAG
{
LEP_UINT16 closePeriodInFrames; /* in frame counts x1 */
LEP_UINT16 openPeriodInFrames; /* in frame counts x1 */
}LEP_OEM_SHUTTER_PROFILE_OBJ_T, *LEP_OEM_SHUTTER_PROFILE_OBJ_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Oem.GetThermalShutdownEnableChecked">
            <summary>OEM Thermal Shutdown Enable<para>This function enables or disables the camera thermal shutdown intended to protect the camera from heating beyond operational temperature range.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_OEM_DISABLE</term>
                        <term>LEP_OEM_ENABLE</term>
                        <term>LEP_OEM_ENABLE</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> OEM <strong>0x0800</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x68 </strong></para>
                <para>With Set <strong>0x69</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.0, 3.5</term>
                        <term>
                            <strong>LEP_GetOemThermalShutdownEnable()</strong>
                        </term>
                        <term>Updates <strong>ThermalShutdownEnableStatePtr</strong> with the Camera’s current thermal shutdown enable state.</term>
                    </item>
                    <item>
                        <term>Lepton 2.5, 3.0, 3.5</term>
                        <term>
                            <strong>LEP_SetOemThermalShutdownEnable()</strong>
                        </term>
                        <term>Updates the Camera’s current thermal shutdown enable state with the contents of <strong>ThermalShutdownEnableState</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetOemThermalShutdownEnable( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_THERMAL_SHUTDOWN_ENABLE_T_PTR ThermalShutdownEnableStatePtr )
LEP_RESULT LEP_SetOemThermalShutdownEnable( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_THERMAL_SHUTDOWN_ENABLE_T ThermalShutdownEnableState )
/* Enable State Enum
*/
typedef enum LEP_OEM_STATE_E_TAG
{
LEP_OEM_DISABLE = 0,
LEP_OEM_ENABLE,
LEP_OEM_END_STATE
}LEP_OEM_STATE_E,*LEP_OEM_STATE_E_PTR;
/* Thermal Shutdown structure
*/
typedef struct LEP_OEM_THERMAL_SHUTDOWN_ENABLE_T_TAG
{
LEP_OEM_STATE_E oemThermalShutdownEnable;
}LEP_OEM_THERMAL_SHUTDOWN_ENABLE_T, *LEP_OEM_THERMAL_SHUTDOWN_ENABLE_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Oem.GetThermalShutdownEnable">
            <summary>OEM Thermal Shutdown Enable<para>This function enables or disables the camera thermal shutdown intended to protect the camera from heating beyond operational temperature range.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_OEM_DISABLE</term>
                        <term>LEP_OEM_ENABLE</term>
                        <term>LEP_OEM_ENABLE</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> OEM <strong>0x0800</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x68 </strong></para>
                <para>With Set <strong>0x69</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.0, 3.5</term>
                        <term>
                            <strong>LEP_GetOemThermalShutdownEnable()</strong>
                        </term>
                        <term>Updates <strong>ThermalShutdownEnableStatePtr</strong> with the Camera’s current thermal shutdown enable state.</term>
                    </item>
                    <item>
                        <term>Lepton 2.5, 3.0, 3.5</term>
                        <term>
                            <strong>LEP_SetOemThermalShutdownEnable()</strong>
                        </term>
                        <term>Updates the Camera’s current thermal shutdown enable state with the contents of <strong>ThermalShutdownEnableState</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetOemThermalShutdownEnable( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_THERMAL_SHUTDOWN_ENABLE_T_PTR ThermalShutdownEnableStatePtr )
LEP_RESULT LEP_SetOemThermalShutdownEnable( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_THERMAL_SHUTDOWN_ENABLE_T ThermalShutdownEnableState )
/* Enable State Enum
*/
typedef enum LEP_OEM_STATE_E_TAG
{
LEP_OEM_DISABLE = 0,
LEP_OEM_ENABLE,
LEP_OEM_END_STATE
}LEP_OEM_STATE_E,*LEP_OEM_STATE_E_PTR;
/* Thermal Shutdown structure
*/
typedef struct LEP_OEM_THERMAL_SHUTDOWN_ENABLE_T_TAG
{
LEP_OEM_STATE_E oemThermalShutdownEnable;
}LEP_OEM_THERMAL_SHUTDOWN_ENABLE_T, *LEP_OEM_THERMAL_SHUTDOWN_ENABLE_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Oem.GetUserDefaultsStateChecked">
            <summary>OEM User Defaults<para>The camera supports the ability allow an OEM to save certain camera runtime states to OTP for persistent storage and automatic restore upon camera startup. The host can interrogate the camera to determine if the OEM default values were written to OTP or not using the LEP_GetOemUserDefaultsState API. The Host can also command the Camera to write the current camera values into OTP for automatic restore at camera startup using the LEP_RunOemUserDefaultsCopyToOtp API. The VPROG voltage must be set in order to write the user defaults to OTP successfully.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Coordinate</strong>
                        </term>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>
Value</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <para>
                                <para>row</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>119</term>
                        <term>N/A</term>
                        <term>N/A</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>col</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>159</term>
                        <term>N/A</term>
                        <term>N/A</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> VID <strong>0x800</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong />With Run <strong>0x5E</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong>
Run <strong>0</strong> size a run command argument</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.0, 3.5</term>
                        <term>
                            <strong>LEP_GetOemUserDefaultsState()</strong>
                        </term>
                        <term>Updates <strong>userParamsStatePtr</strong> with the Camera’s current OEM OTP user defaults written sate</term>
                    </item>
                    <item>
                        <term>Lepton 2.5, 3.0, 3.5</term>
                        <term>
                            <strong>LEP_RunOemUserDefaultsCopyToOtp()</strong>
                        </term>
                        <term>Executes writing the OEM user defaults to OTP</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetOemUserDefaultsState(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_USER_PARAMS_STATE_E_PTR userParamsStatePtr)
LEP_RESULT LEP_RunOemUserDefaultsCopyToOtp(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr)
/* OEM User Defaults State
*/
typedef enum LEP_OEM_USER_PARAMS_STATE_E_TAG
{
LEP_OEM_USER_PARAMS_STATE_NOT_WRITTEN = 0,
LEP_OEM_USER_PARAMS_STATE_WRITTEN,
LEP_OEM_END_USER_PARAMS_STATE,
}LEP_OEM_USER_PARAMS_STATE_E, *LEP_OEM_USER_PARAMS_STATE_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Oem.GetUserDefaultsState">
            <summary>OEM User Defaults<para>The camera supports the ability allow an OEM to save certain camera runtime states to OTP for persistent storage and automatic restore upon camera startup. The host can interrogate the camera to determine if the OEM default values were written to OTP or not using the LEP_GetOemUserDefaultsState API. The Host can also command the Camera to write the current camera values into OTP for automatic restore at camera startup using the LEP_RunOemUserDefaultsCopyToOtp API. The VPROG voltage must be set in order to write the user defaults to OTP successfully.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Coordinate</strong>
                        </term>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>
Value</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <para>
                                <para>row</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>119</term>
                        <term>N/A</term>
                        <term>N/A</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>col</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>159</term>
                        <term>N/A</term>
                        <term>N/A</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> VID <strong>0x800</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong />With Run <strong>0x5E</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong>
Run <strong>0</strong> size a run command argument</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.0, 3.5</term>
                        <term>
                            <strong>LEP_GetOemUserDefaultsState()</strong>
                        </term>
                        <term>Updates <strong>userParamsStatePtr</strong> with the Camera’s current OEM OTP user defaults written sate</term>
                    </item>
                    <item>
                        <term>Lepton 2.5, 3.0, 3.5</term>
                        <term>
                            <strong>LEP_RunOemUserDefaultsCopyToOtp()</strong>
                        </term>
                        <term>Executes writing the OEM user defaults to OTP</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetOemUserDefaultsState(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_USER_PARAMS_STATE_E_PTR userParamsStatePtr)
LEP_RESULT LEP_RunOemUserDefaultsCopyToOtp(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr)
/* OEM User Defaults State
*/
typedef enum LEP_OEM_USER_PARAMS_STATE_E_TAG
{
LEP_OEM_USER_PARAMS_STATE_NOT_WRITTEN = 0,
LEP_OEM_USER_PARAMS_STATE_WRITTEN,
LEP_OEM_END_USER_PARAMS_STATE,
}LEP_OEM_USER_PARAMS_STATE_E, *LEP_OEM_USER_PARAMS_STATE_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Oem.GetGpioVsyncPhaseDelayChecked">
            <summary>OEM GPIO VSync Phase Delay<para>This function gets and sets the GPIO VSync phase delay. The Lepton Camera can issue a pulse on GPIO3 when there is an inter VSync. The output pulse may be issued in phase with the camera’s internal VSync, or it may be issued earlier or later. This command controls this phase relationship. The delays are in line periods, approximately 0.5 milliseconds per period. The phase delay is limited to +/- 3 line periods.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_OEM_VSYNC_DELAY_MINUS_3</term>
                        <term>LEP_OEM_VSYNC_DELAY_PLUS_3</term>
                        <term>LEP_OEM_VSYNC_DELAY_NONE</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> OEM <strong>0x0800</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x58 </strong></para>
                <para>With Set <strong>0x59</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong>
Set <strong>2</strong> size of an Enum on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetOemGpioVsyncPhaseDelay()</strong>
                        </term>
                        <term>Updates <strong>numHsyncLinesPtr</strong> with the Camera’s current GPIO VSync phase delay.</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetOemGpioVsyncPhaseDelay()</strong>
                        </term>
                        <term>Updates the Camera’s GPIO VSync phase delay with the contents of <strong>numHsyncLines</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetOemGpioVsyncPhaseDelay( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_VSYNC_DELAY_E_PTR numHsyncLinesPtr )
LEP_RESULT LEP_SetOemGpioVsyncPhaseDelay( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_VSYNC_DELAY_E numHsyncLines )
typedef enum LEP_OEM_VSYNC_DELAY_E_TAG
{
LEP_OEM_VSYNC_DELAY_MINUS_3 = -3,
LEP_OEM_VSYNC_DELAY_MINUS_2 = -2,
LEP_OEM_VSYNC_DELAY_MINUS_1 = -1,
LEP_OEM_VSYNC_DELAY_NONE = 0,
LEP_OEM_VSYNC_DELAY_PLUS_1 = 1,
LEP_OEM_VSYNC_DELAY_PLUS_2 = 2,
LEP_OEM_VSYNC_DELAY_PLUS_3 = 3,
LEP_END_OEM_VSYNC_DELAY
} LEP_OEM_VSYNC_DELAY_E, *LEP_OEM_VSYNC_DELAY_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Oem.GetGpioVsyncPhaseDelay">
            <summary>OEM GPIO VSync Phase Delay<para>This function gets and sets the GPIO VSync phase delay. The Lepton Camera can issue a pulse on GPIO3 when there is an inter VSync. The output pulse may be issued in phase with the camera’s internal VSync, or it may be issued earlier or later. This command controls this phase relationship. The delays are in line periods, approximately 0.5 milliseconds per period. The phase delay is limited to +/- 3 line periods.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_OEM_VSYNC_DELAY_MINUS_3</term>
                        <term>LEP_OEM_VSYNC_DELAY_PLUS_3</term>
                        <term>LEP_OEM_VSYNC_DELAY_NONE</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> OEM <strong>0x0800</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x58 </strong></para>
                <para>With Set <strong>0x59</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong>
Set <strong>2</strong> size of an Enum on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetOemGpioVsyncPhaseDelay()</strong>
                        </term>
                        <term>Updates <strong>numHsyncLinesPtr</strong> with the Camera’s current GPIO VSync phase delay.</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetOemGpioVsyncPhaseDelay()</strong>
                        </term>
                        <term>Updates the Camera’s GPIO VSync phase delay with the contents of <strong>numHsyncLines</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetOemGpioVsyncPhaseDelay( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_VSYNC_DELAY_E_PTR numHsyncLinesPtr )
LEP_RESULT LEP_SetOemGpioVsyncPhaseDelay( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_VSYNC_DELAY_E numHsyncLines )
typedef enum LEP_OEM_VSYNC_DELAY_E_TAG
{
LEP_OEM_VSYNC_DELAY_MINUS_3 = -3,
LEP_OEM_VSYNC_DELAY_MINUS_2 = -2,
LEP_OEM_VSYNC_DELAY_MINUS_1 = -1,
LEP_OEM_VSYNC_DELAY_NONE = 0,
LEP_OEM_VSYNC_DELAY_PLUS_1 = 1,
LEP_OEM_VSYNC_DELAY_PLUS_2 = 2,
LEP_OEM_VSYNC_DELAY_PLUS_3 = 3,
LEP_END_OEM_VSYNC_DELAY
} LEP_OEM_VSYNC_DELAY_E, *LEP_OEM_VSYNC_DELAY_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Oem.GetGpioModeChecked">
            <summary>OEM GPIO Mode Select<para>This function gets and sets the GPIO pins mode.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_OEM_GPIO_MODE_GPIO</term>
                        <term>LEP_OEM_GPIO_MODE_VSYNC</term>
                        <term>LEP_OEM_GPIO_MODE_GPIO</term>
                        <term>N/A</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> OEM <strong>0x0800</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x54 </strong></para>
                <para>With Set <strong>0x55</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong>
Set <strong>2</strong> size of an Enum on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetOemGpioMode()</strong>
                        </term>
                        <term>Updates <strong>gpioModePtr</strong> with the Camera’s current GPIO pins mode.</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetOemGpioMode()</strong>
                        </term>
                        <term>Updates the Camera’s GPIO pins mode with the contents of <strong>gpioMode</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetOemGpioMode( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_GPIO_MODE_E_PTR gpioModePtr )
LEP_RESULT LEP_SetOemGpioMode( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_GPIO_MODE_E gpioMode )
typedef enum LEP_OEM_GPIO_MODE_E_TAG
{
LEP_OEM_GPIO_MODE_GPIO = 0,
LEP_OEM_GPIO_MODE_I2C_MASTER = 1,
LEP_OEM_GPIO_MODE_SPI_MASTER_VLB_DATA = 2,
LEP_OEM_GPIO_MODE_SPIO_MASTER_REG_DATA = 3,
LEP_OEM_GPIO_MODE_SPI_SLAVE_VLB_DATA = 4,
LEP_OEM_GPIO_MODE_VSYNC = 5,
LEP_OEM_END_GPIO_MODE,
}LEP_OEM_GPIO_MODE_E, *LEP_OEM_GPIO_MODE_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Oem.GetGpioMode">
            <summary>OEM GPIO Mode Select<para>This function gets and sets the GPIO pins mode.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_OEM_GPIO_MODE_GPIO</term>
                        <term>LEP_OEM_GPIO_MODE_VSYNC</term>
                        <term>LEP_OEM_GPIO_MODE_GPIO</term>
                        <term>N/A</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> OEM <strong>0x0800</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x54 </strong></para>
                <para>With Set <strong>0x55</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong>
Set <strong>2</strong> size of an Enum on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetOemGpioMode()</strong>
                        </term>
                        <term>Updates <strong>gpioModePtr</strong> with the Camera’s current GPIO pins mode.</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetOemGpioMode()</strong>
                        </term>
                        <term>Updates the Camera’s GPIO pins mode with the contents of <strong>gpioMode</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetOemGpioMode( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_GPIO_MODE_E_PTR gpioModePtr )
LEP_RESULT LEP_SetOemGpioMode( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_GPIO_MODE_E gpioMode )
typedef enum LEP_OEM_GPIO_MODE_E_TAG
{
LEP_OEM_GPIO_MODE_GPIO = 0,
LEP_OEM_GPIO_MODE_I2C_MASTER = 1,
LEP_OEM_GPIO_MODE_SPI_MASTER_VLB_DATA = 2,
LEP_OEM_GPIO_MODE_SPIO_MASTER_REG_DATA = 3,
LEP_OEM_GPIO_MODE_SPI_SLAVE_VLB_DATA = 4,
LEP_OEM_GPIO_MODE_VSYNC = 5,
LEP_OEM_END_GPIO_MODE,
}LEP_OEM_GPIO_MODE_E, *LEP_OEM_GPIO_MODE_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Oem.GetFrameMeanChecked">
            <summary>OEM Frame Mean Intensity<para>This function obtains the current frame mean intensity value within the video Region of Interest defined by SYS ROI (see 4.4.24). Note that this ROI (and the resulting mean) is not the same as that used by AGC Histogram Statistics.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>0</term>
                        <term>16383</term>
                        <term>N/A</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> OEM <strong>0x0800</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x4C</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>1</strong> size of a <strong>LEP_UINT16</strong></para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetOemFrameMean()</strong>
                        </term>
                        <term>Gets the current frame mean intensity value within the SYS ROI</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetOemFrameMean( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_FRAME_AVERAGE_T_PTR frameAveragePtr )
typedef LEP_UINT16 LEP_OEM_FRAME_AVERAGE_T, *LEP_OEM_FRAME_AVERAGE_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Oem.GetFrameMean">
            <summary>OEM Frame Mean Intensity<para>This function obtains the current frame mean intensity value within the video Region of Interest defined by SYS ROI (see 4.4.24). Note that this ROI (and the resulting mean) is not the same as that used by AGC Histogram Statistics.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>0</term>
                        <term>16383</term>
                        <term>N/A</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> OEM <strong>0x0800</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x4C</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>1</strong> size of a <strong>LEP_UINT16</strong></para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetOemFrameMean()</strong>
                        </term>
                        <term>Gets the current frame mean intensity value within the SYS ROI</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetOemFrameMean( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_FRAME_AVERAGE_T_PTR frameAveragePtr )
typedef LEP_UINT16 LEP_OEM_FRAME_AVERAGE_T, *LEP_OEM_FRAME_AVERAGE_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Oem.GetFFCNormalizationTargetChecked">
            <summary>OEM FFC Normalization Target<para>The first two of these commands Get and Set the Flat-Field Correction (FFC) Normalization Target used by the third command to execute a Flat-Field Correction (FFC). The target value is factory set and should not be changed under normal circumstances. The Run command executes an FFC using currently active values for the FFC normalization target and number of frames to average (see 4.4.21). This command executes synchronously. Poll the OEM Status to determine when this command completes (see 4.6.13).</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>0</term>
                        <term>16383</term>
                        <term>8192</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> SYS <strong>0x0800</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x44</strong>
With Set <strong />With Run <strong>0x46</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>1</strong> size of a <strong>LEP_UINT16</strong>
Set <strong>1</strong> size of a <strong />Run <strong>0</strong> size of a Run command</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetOemFFCNormalizationTarget()</strong>
                        </term>
                        <term>Gets the normalization target</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetOemFFCNormalizationTarget()</strong>
                        </term>
                        <term>Sets the normalization target</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_RunOemFFC()</strong>
                        </term>
                        <term>Executes the FFC normalization using previously specified normalization target value</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetOemFFCNormalizationTarget( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_FFC_NORMALIZATION_TARGET_T_PTR ffcTargetPtr )
LEP_RESULT LEP_SetOemFFCNormalizationTarget( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_FFC_NORMALIZATION_TARGET_T ffcTarget )
LEP_RESULT LEP_RunOemFFC
typedef LEP_UINT16 LEP_OEM_FFC_NORMALIZATION_TARGET_T, *LEP_OEM_FFC_NORMALIZATION_TARGET_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Oem.GetFFCNormalizationTarget">
            <summary>OEM FFC Normalization Target<para>The first two of these commands Get and Set the Flat-Field Correction (FFC) Normalization Target used by the third command to execute a Flat-Field Correction (FFC). The target value is factory set and should not be changed under normal circumstances. The Run command executes an FFC using currently active values for the FFC normalization target and number of frames to average (see 4.4.21). This command executes synchronously. Poll the OEM Status to determine when this command completes (see 4.6.13).</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>0</term>
                        <term>16383</term>
                        <term>8192</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> SYS <strong>0x0800</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x44</strong>
With Set <strong />With Run <strong>0x46</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>1</strong> size of a <strong>LEP_UINT16</strong>
Set <strong>1</strong> size of a <strong />Run <strong>0</strong> size of a Run command</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetOemFFCNormalizationTarget()</strong>
                        </term>
                        <term>Gets the normalization target</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetOemFFCNormalizationTarget()</strong>
                        </term>
                        <term>Sets the normalization target</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_RunOemFFC()</strong>
                        </term>
                        <term>Executes the FFC normalization using previously specified normalization target value</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetOemFFCNormalizationTarget( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_FFC_NORMALIZATION_TARGET_T_PTR ffcTargetPtr )
LEP_RESULT LEP_SetOemFFCNormalizationTarget( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_FFC_NORMALIZATION_TARGET_T ffcTarget )
LEP_RESULT LEP_RunOemFFC
typedef LEP_UINT16 LEP_OEM_FFC_NORMALIZATION_TARGET_T, *LEP_OEM_FFC_NORMALIZATION_TARGET_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Oem.GetCalStatusChecked">
            <summary>OEM Status<para>This function obtains the current status of an OEM run operation. This function is used whenever an OEM command is issued that executes an operation like the run FFC. Typically, the host polls the status to determine when the command has completed. If the return value is negative, then the operation completed with an error. Positive values indicate an in-process state. Zero indicates the operation completed without error.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_OEM_STATUS_OTP_WRITE_ERROR</term>
                        <term>LEP_OEM_FRAME_AVERAGE_COLLECTING_FRAMES</term>
                        <term>LEP_OEM_STATUS_READY</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> OEM <strong>0x0800</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x48</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetOemCalStatus()</strong>
                        </term>
                        <term>Gets the Current OEM operation status.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetOemCalStatus( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_STATUS_E_PTR calStatusPtr )
typedef enum
{
LEP_OEM_STATUS_OTP_WRITE_ERROR = -2,
LEP_OEM_STATUS_ERROR = -1,
LEP_OEM_STATUS_READY = 0,
LEP_OEM_STATUS_BUSY,
LEP_OEM_FRAME_AVERAGE_COLLECTING_FRAMES,
LEP_OEM_STATUS_END
} LEP_OEM_STATUS_E, *LEP_OEM_STATUS_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Oem.GetCalStatus">
            <summary>OEM Status<para>This function obtains the current status of an OEM run operation. This function is used whenever an OEM command is issued that executes an operation like the run FFC. Typically, the host polls the status to determine when the command has completed. If the return value is negative, then the operation completed with an error. Positive values indicate an in-process state. Zero indicates the operation completed without error.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_OEM_STATUS_OTP_WRITE_ERROR</term>
                        <term>LEP_OEM_FRAME_AVERAGE_COLLECTING_FRAMES</term>
                        <term>LEP_OEM_STATUS_READY</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> OEM <strong>0x0800</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x48</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetOemCalStatus()</strong>
                        </term>
                        <term>Gets the Current OEM operation status.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetOemCalStatus( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_STATUS_E_PTR calStatusPtr )
typedef enum
{
LEP_OEM_STATUS_OTP_WRITE_ERROR = -2,
LEP_OEM_STATUS_ERROR = -1,
LEP_OEM_STATUS_READY = 0,
LEP_OEM_STATUS_BUSY,
LEP_OEM_FRAME_AVERAGE_COLLECTING_FRAMES,
LEP_OEM_STATUS_END
} LEP_OEM_STATUS_E, *LEP_OEM_STATUS_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Oem.GetVideoOutputSourceChecked">
            <summary>OEM Video Output Source Select<para>This function specifies or retrieves the video output source. The output source allows selecting between processed video data, unprocessed video data, and a variety of ramp patterns.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_VIDEO_OUTPUT_SOURCE_RAW</term>
                        <term>LEP_VIDEO_OUTPUT_SOURCE_FRAME_4</term>
                        <term>LEP_VIDEO_OUTPUT_SOURCE_COOKED</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> OEM <strong>0x0800</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x2C </strong></para>
                <para>With Set <strong>0x2D</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetOemVideoOutputSource()</strong>
                        </term>
                        <term>Updates <strong>oemVideoOutputSourcePtr</strong> with the Camera’s current video output format selection.</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetOemVideoOutputSource()</strong>
                        </term>
                        <term>Updates the Camera’s current video output format with the contents of <strong>oemVideoOutputSource</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>oemVideoOutputSourcePtr)
oemVideoOutputSource)
/* Video Output Source Selection
*/
typedef enum LEP_OEM_VIDEO_OUTPUT_SOURCE_TAG
{
/* Before video processing. */
/* Post video processing - NORMAL MODE */
/* Software Ramp pattern - increase in X, Y */
/* Software Constant value pattern */
/* Software Ramp pattern - increase in X only */
/* Software Ramp pattern - increase in Y only */
/* Software Ramp pattern - uses custom settings */
/* Additions to support frame averaging, freeze frame, and data buffers
*/
// Average, Capture frame
// Freeze-Frame Buffer
/* RESERVED BUFFERS
*/
// Reserved DATA Buffer
// Reserved DATA Buffer
// Reserved DATA Buffer
// Reserved DATA Buffer
// Reserved DATA Buffer
LEP_END_VIDEO_OUTPUT_SOURCE
}LEP_OEM_VIDEO_OUTPUT_SOURCE_E, *LEP_OEM_VIDEO_OUTPUT_SOURCE_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Oem.GetVideoOutputSource">
            <summary>OEM Video Output Source Select<para>This function specifies or retrieves the video output source. The output source allows selecting between processed video data, unprocessed video data, and a variety of ramp patterns.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_VIDEO_OUTPUT_SOURCE_RAW</term>
                        <term>LEP_VIDEO_OUTPUT_SOURCE_FRAME_4</term>
                        <term>LEP_VIDEO_OUTPUT_SOURCE_COOKED</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> OEM <strong>0x0800</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x2C </strong></para>
                <para>With Set <strong>0x2D</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetOemVideoOutputSource()</strong>
                        </term>
                        <term>Updates <strong>oemVideoOutputSourcePtr</strong> with the Camera’s current video output format selection.</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetOemVideoOutputSource()</strong>
                        </term>
                        <term>Updates the Camera’s current video output format with the contents of <strong>oemVideoOutputSource</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>oemVideoOutputSourcePtr)
oemVideoOutputSource)
/* Video Output Source Selection
*/
typedef enum LEP_OEM_VIDEO_OUTPUT_SOURCE_TAG
{
/* Before video processing. */
/* Post video processing - NORMAL MODE */
/* Software Ramp pattern - increase in X, Y */
/* Software Constant value pattern */
/* Software Ramp pattern - increase in X only */
/* Software Ramp pattern - increase in Y only */
/* Software Ramp pattern - uses custom settings */
/* Additions to support frame averaging, freeze frame, and data buffers
*/
// Average, Capture frame
// Freeze-Frame Buffer
/* RESERVED BUFFERS
*/
// Reserved DATA Buffer
// Reserved DATA Buffer
// Reserved DATA Buffer
// Reserved DATA Buffer
// Reserved DATA Buffer
LEP_END_VIDEO_OUTPUT_SOURCE
}LEP_OEM_VIDEO_OUTPUT_SOURCE_E, *LEP_OEM_VIDEO_OUTPUT_SOURCE_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Oem.GetVideoOutputFormatChecked">
            <summary>OEM Video Output Format Select<para>This function provides the method to specify or retrieve the current video output format. In the current revision, only RGB888 and RAW14 are valid formats.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_VIDEO_OUTPUT_FORMAT_RAW8</term>
                        <term>LEP_VIDEO_OUTPUT_FORMAT_RAW8_6</term>
                        <term>LEP_VIDEO_OUTPUT_FORMAT_RAW14</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> OEM <strong>0x0800</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x28 </strong></para>
                <para>With Set <strong>0x29</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetOemVideoOutputFormat()</strong>
                        </term>
                        <term>Updates <strong>oemVideoOutputFormatPtr</strong> with the Camera’s current video output format selection.</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetOemVideoOutputFormat()</strong>
                        </term>
                        <term>Updates the Camera’s current video output format with the contents of <strong>oemVideoOutputFormat</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetOemVideoOutputFormat(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
oemVideoOutputFormatPtr)
LEP_RESULT LEP_SetOemVideoOutputFormat(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
oemVideoOutputFormat)
/* Video Output Format Selection
*/
typedef enum LEP_OEM_VIDEO_OUTPUT_FORMAT_TAG
{
// To be supported in later release
// To be supported in later release
// To be supported in later release
// SUPPORTED in this release
// To be supported in later release
// To be supported in later release
// To be supported in later release
// SUPPORTED in this release
// To be supported in later release
// To be supported in later release
// To be supported in later release
// To be supported in later release
// To be supported in later release
// To be supported in later release
// To be supported in later release
LEP_END_VIDEO_OUTPUT_FORMAT
}LEP_OEM_VIDEO_OUTPUT_FORMAT_E, *LEP_OEM_VIDEO_OUTPUT_FORMAT_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Oem.GetVideoOutputFormat">
            <summary>OEM Video Output Format Select<para>This function provides the method to specify or retrieve the current video output format. In the current revision, only RGB888 and RAW14 are valid formats.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_VIDEO_OUTPUT_FORMAT_RAW8</term>
                        <term>LEP_VIDEO_OUTPUT_FORMAT_RAW8_6</term>
                        <term>LEP_VIDEO_OUTPUT_FORMAT_RAW14</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> OEM <strong>0x0800</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x28 </strong></para>
                <para>With Set <strong>0x29</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetOemVideoOutputFormat()</strong>
                        </term>
                        <term>Updates <strong>oemVideoOutputFormatPtr</strong> with the Camera’s current video output format selection.</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetOemVideoOutputFormat()</strong>
                        </term>
                        <term>Updates the Camera’s current video output format with the contents of <strong>oemVideoOutputFormat</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetOemVideoOutputFormat(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
oemVideoOutputFormatPtr)
LEP_RESULT LEP_SetOemVideoOutputFormat(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
oemVideoOutputFormat)
/* Video Output Format Selection
*/
typedef enum LEP_OEM_VIDEO_OUTPUT_FORMAT_TAG
{
// To be supported in later release
// To be supported in later release
// To be supported in later release
// SUPPORTED in this release
// To be supported in later release
// To be supported in later release
// To be supported in later release
// SUPPORTED in this release
// To be supported in later release
// To be supported in later release
// To be supported in later release
// To be supported in later release
// To be supported in later release
// To be supported in later release
// To be supported in later release
LEP_END_VIDEO_OUTPUT_FORMAT
}LEP_OEM_VIDEO_OUTPUT_FORMAT_E, *LEP_OEM_VIDEO_OUTPUT_FORMAT_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Oem.GetVideoOutputEnableChecked">
            <summary>OEM Video Output Enable<para>This function enables or disables the video output independent of output channel.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_VIDEO_OUTPUT_DISABLE</term>
                        <term>LEP_VIDEO_OUTPUT_ENABLE</term>
                        <term>LEP_VIDEO_OUTPUT_ENABLE</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> OEM <strong>0x0800</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x24 </strong></para>
                <para>With Set <strong>0x25</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetOemVideoOutputEnable()</strong>
                        </term>
                        <term>Updates <strong>oemVideoOutputEnablePtr</strong> with the Camera’s current video output enable.</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetOemVideoOutputEnable()</strong>
                        </term>
                        <term>Updates the Camera’s current video output enable with the contents of <strong>oemVideoOutputEnable</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetOemVideoOutputEnable(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
oemVideoOutputEnablePtr)
LEP_RESULT LEP_SetOemVideoOutputEnable(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
oemVideoOutputEnable)
/* Video Output Enable Enum
*/
typedef enum LEP_OEM_VIDEO_OUTPUT_ENABLE_TAG
{
LEP_VIDEO_OUTPUT_DISABLE = 0,
LEP_VIDEO_OUTPUT_ENABLE,
LEP_END_VIDEO_OUTPUT_ENABLE
}LEP_OEM_VIDEO_OUTPUT_ENABLE_E, *LEP_OEM_VIDEO_OUTPUT_ENABLE_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Oem.GetVideoOutputEnable">
            <summary>OEM Video Output Enable<para>This function enables or disables the video output independent of output channel.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_VIDEO_OUTPUT_DISABLE</term>
                        <term>LEP_VIDEO_OUTPUT_ENABLE</term>
                        <term>LEP_VIDEO_OUTPUT_ENABLE</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> OEM <strong>0x0800</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x24 </strong></para>
                <para>With Set <strong>0x25</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>Enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetOemVideoOutputEnable()</strong>
                        </term>
                        <term>Updates <strong>oemVideoOutputEnablePtr</strong> with the Camera’s current video output enable.</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetOemVideoOutputEnable()</strong>
                        </term>
                        <term>Updates the Camera’s current video output enable with the contents of <strong>oemVideoOutputEnable</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetOemVideoOutputEnable(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
oemVideoOutputEnablePtr)
LEP_RESULT LEP_SetOemVideoOutputEnable(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
oemVideoOutputEnable)
/* Video Output Enable Enum
*/
typedef enum LEP_OEM_VIDEO_OUTPUT_ENABLE_TAG
{
LEP_VIDEO_OUTPUT_DISABLE = 0,
LEP_VIDEO_OUTPUT_ENABLE,
LEP_END_VIDEO_OUTPUT_ENABLE
}LEP_OEM_VIDEO_OUTPUT_ENABLE_E, *LEP_OEM_VIDEO_OUTPUT_ENABLE_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Oem.GetSoftwareVersionChecked">
            <summary>OEM Camera Software Revision<para>This function returns the Camera’s software revision for both software processors in the Camera. The Camera’s Software revision is composed of 3 fields: a major version, minor version, and a build number for each processor. Each of the 3 fields is 8-bits.</para><para><strong>SDK Module ID:</strong> OEM <strong>0x0800</strong></para><para><strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x20</strong></para><para><strong>SDK Data Length:</strong> Get <strong>4</strong> size of <strong>LEP_OEM_SW_VERSION_T</strong> data type</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetOemSoftwareVersion()</strong>
                        </term>
                        <term>Updates <strong>oemSoftwareVersionPtr</strong> with the Camera’s Software Revision.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetOemSoftwareVersion( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_SW_VERSION_T *oemSoftwareVersionPtr )
/* Software Version ID: A (24 bit depth) identifier for
** the software version stored in OTP.
*/
typedef struct LEP_OEM_SW_VERSION_TAG
{
LEP_UINT8 gpp_major;
LEP_UINT8 gpp_minor;
LEP_UINT8 gpp_build;
LEP_UINT8 dsp_major;
LEP_UINT8 dsp_minor;
LEP_UINT8 dsp_build;
LEP_UINT16 reserved;
}LEP_OEM_SW_VERSION_T, *LEP_OEM_SW_VERSION_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Oem.GetSoftwareVersion">
            <summary>OEM Camera Software Revision<para>This function returns the Camera’s software revision for both software processors in the Camera. The Camera’s Software revision is composed of 3 fields: a major version, minor version, and a build number for each processor. Each of the 3 fields is 8-bits.</para><para><strong>SDK Module ID:</strong> OEM <strong>0x0800</strong></para><para><strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x20</strong></para><para><strong>SDK Data Length:</strong> Get <strong>4</strong> size of <strong>LEP_OEM_SW_VERSION_T</strong> data type</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetOemSoftwareVersion()</strong>
                        </term>
                        <term>Updates <strong>oemSoftwareVersionPtr</strong> with the Camera’s Software Revision.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetOemSoftwareVersion( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_SW_VERSION_T *oemSoftwareVersionPtr )
/* Software Version ID: A (24 bit depth) identifier for
** the software version stored in OTP.
*/
typedef struct LEP_OEM_SW_VERSION_TAG
{
LEP_UINT8 gpp_major;
LEP_UINT8 gpp_minor;
LEP_UINT8 gpp_build;
LEP_UINT8 dsp_major;
LEP_UINT8 dsp_minor;
LEP_UINT8 dsp_build;
LEP_UINT16 reserved;
}LEP_OEM_SW_VERSION_T, *LEP_OEM_SW_VERSION_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Oem.GetCustPartNumberChecked">
            <summary>OEM Customer Part Number<para>This function gets the Customer Part Number. This part number is previously written into the Camera OTP during factory calibration.</para><para>The Customer Part Number is a 32-byte string identifier unique to a specific configuration of the Camera module.</para><para>This command requires the Host to allocate the memory buffer before calling this function. The address to this memory block should be passed in as <strong>oemPartNumberPtr</strong></para><para><strong>SDK Module ID:</strong> OEM <strong>0x0800</strong></para><para><strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x38 </strong></para><para><strong>SDK Data Length:</strong> Get <strong>16</strong> 32-byte string</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetOemCustPartNumber()</strong>
                        </term>
                        <term>Updates <strong>oemPartNumberPtr</strong> with the Camera’s current Customer Part Number.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetOemCustPartNumber( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_PART_NUMBER_T_PTR oemPartNumberPtr )
/* Part Number: A (32 byte string) identifier unique to a
** Specific configuration of module; essentially a module
** Configuration ID.
*/
typedef LEP_CHAR8 *LEP_OEM_PART_NUMBER_T, *LEP_OEM_PART_NUMBER_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Oem.GetCustPartNumber">
            <summary>OEM Customer Part Number<para>This function gets the Customer Part Number. This part number is previously written into the Camera OTP during factory calibration.</para><para>The Customer Part Number is a 32-byte string identifier unique to a specific configuration of the Camera module.</para><para>This command requires the Host to allocate the memory buffer before calling this function. The address to this memory block should be passed in as <strong>oemPartNumberPtr</strong></para><para><strong>SDK Module ID:</strong> OEM <strong>0x0800</strong></para><para><strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x38 </strong></para><para><strong>SDK Data Length:</strong> Get <strong>16</strong> 32-byte string</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetOemCustPartNumber()</strong>
                        </term>
                        <term>Updates <strong>oemPartNumberPtr</strong> with the Camera’s current Customer Part Number.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetOemCustPartNumber( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_PART_NUMBER_T_PTR oemPartNumberPtr )
/* Part Number: A (32 byte string) identifier unique to a
** Specific configuration of module; essentially a module
** Configuration ID.
*/
typedef LEP_CHAR8 *LEP_OEM_PART_NUMBER_T, *LEP_OEM_PART_NUMBER_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Oem.GetFlirPartNumberChecked">
            <summary>OEM FLIR Systems Part Number<para>This function returns FLIR Systems’ Camera Part Number. The Camera Part Number is a 32-byte string identifier unique to a specific configuration of the Camera module.</para><para>This command requires the Host to allocate the memory buffer before calling this function. The address to this memory block should be passed in as <strong>oemPartNumberPtr</strong></para><para><strong>SDK Module ID:</strong> OEM <strong>0x0800</strong></para><para><strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x1C</strong></para><para><strong>SDK Data Length:</strong> Get <strong>16</strong> 32-byte string</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetOemFlirPartNumber()</strong>
                        </term>
                        <term>Updates <strong>oemPartNumberPtr</strong> with the Camera’s FLIR Systems Part Number.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetOemFlirPartNumber( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_PART_NUMBER_T_PTR oemPartNumberPtr )
/* Part Number: A (32 byte string) identifier unique to a
** specific configuration of module; essentially a module
** Configuration ID.
*/
typedef LEP_CHAR8 *LEP_OEM_PART_NUMBER_T, *LEP_OEM_PART_NUMBER_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Oem.GetFlirPartNumber">
            <summary>OEM FLIR Systems Part Number<para>This function returns FLIR Systems’ Camera Part Number. The Camera Part Number is a 32-byte string identifier unique to a specific configuration of the Camera module.</para><para>This command requires the Host to allocate the memory buffer before calling this function. The address to this memory block should be passed in as <strong>oemPartNumberPtr</strong></para><para><strong>SDK Module ID:</strong> OEM <strong>0x0800</strong></para><para><strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x1C</strong></para><para><strong>SDK Data Length:</strong> Get <strong>16</strong> 32-byte string</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetOemFlirPartNumber()</strong>
                        </term>
                        <term>Updates <strong>oemPartNumberPtr</strong> with the Camera’s FLIR Systems Part Number.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetOemFlirPartNumber( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_PART_NUMBER_T_PTR oemPartNumberPtr )
/* Part Number: A (32 byte string) identifier unique to a
** specific configuration of module; essentially a module
** Configuration ID.
*/
typedef LEP_CHAR8 *LEP_OEM_PART_NUMBER_T, *LEP_OEM_PART_NUMBER_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Oem.RunUserDefaultsRestoreChecked">
            <summary>OEM Restore User Defaults<para>This function will restore the OEM user defaults from OTP if OTP was previously written with these defaults. If user defaults were not previously written, an error code is returned.</para><para><strong>SDK Module ID:</strong> OEM <strong>0x0800</strong></para><para><strong>SDK Command ID:</strong> Base <strong />With Run <strong>0x62</strong></para><para><strong>SDK Data Length:</strong> Run <strong>0</strong> size a run command argument</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.0, 3.5</term>
                        <term>
                            <strong>LEP_RunOemUserDefaultsRestore()</strong>
                        </term>
                        <term>Restore the OEM user defaults from OTP if OTP was previously written with these defaults</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_RunOemUserDefaultsRestore(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr);</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Oem.RunUserDefaultsRestore">
            <summary>OEM Restore User Defaults<para>This function will restore the OEM user defaults from OTP if OTP was previously written with these defaults. If user defaults were not previously written, an error code is returned.</para><para><strong>SDK Module ID:</strong> OEM <strong>0x0800</strong></para><para><strong>SDK Command ID:</strong> Base <strong />With Run <strong>0x62</strong></para><para><strong>SDK Data Length:</strong> Run <strong>0</strong> size a run command argument</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 2.5, 3.0, 3.5</term>
                        <term>
                            <strong>LEP_RunOemUserDefaultsRestore()</strong>
                        </term>
                        <term>Restore the OEM user defaults from OTP if OTP was previously written with these defaults</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_RunOemUserDefaultsRestore(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr);</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Oem.RunFFCNormalizationChecked(System.UInt16)">
            <summary>OEM Run FFC Normalization Frames – Aggregate Command<para>This is an aggregate command that executes the FFC Normalization using a parameter to specify the FFC target value explicitly. This command does use the number of frames to average as specified by the SYS Number of frames to average (see 4.4.21).</para><para>Executing this command causes the camera to execute the FFC Normalization. The FFC target value is specified by parameter to this function. This command does not use the current target value in the Camera.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>0</term>
                        <term>16383</term>
                        <term>8192</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_RunOemFFCNormalization()</strong>
                        </term>
                        <term>Executes the FFC normalization using the FFC target value specified by parameter to this function<em><strong>. Aggregate command.</strong></em></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_RunOemFFCNormalization( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_FFC_NORMALIZATION_TARGET_T ffcTarget )
typedef LEP_UINT16 LEP_OEM_FFC_NORMALIZATION_TARGET_T, *LEP_OEM_FFC_NORMALIZATION_TARGET_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Oem.RunFFCNormalization(System.UInt16)">
            <summary>OEM Run FFC Normalization Frames – Aggregate Command<para>This is an aggregate command that executes the FFC Normalization using a parameter to specify the FFC target value explicitly. This command does use the number of frames to average as specified by the SYS Number of frames to average (see 4.4.21).</para><para>Executing this command causes the camera to execute the FFC Normalization. The FFC target value is specified by parameter to this function. This command does not use the current target value in the Camera.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>0</term>
                        <term>16383</term>
                        <term>8192</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_RunOemFFCNormalization()</strong>
                        </term>
                        <term>Executes the FFC normalization using the FFC target value specified by parameter to this function<em><strong>. Aggregate command.</strong></em></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_RunOemFFCNormalization( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_OEM_FFC_NORMALIZATION_TARGET_T ffcTarget )
typedef LEP_UINT16 LEP_OEM_FFC_NORMALIZATION_TARGET_T, *LEP_OEM_FFC_NORMALIZATION_TARGET_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Oem.RunRebootChecked">
            <summary>OEM Run Camera Re-Boot<para>This function commands the Camera to re-boot. The Camera is first shutdown, and then restarts automatically.</para><para><strong>SDK Module ID:</strong> OEM <strong>0x0800</strong></para><para><strong>SDK Command ID:</strong> Base <strong />With Run <strong>0x42</strong></para><para><strong>SDK Data Length:</strong> Run <strong>0</strong> size a run command argument</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_RunOemReboot()</strong>
                        </term>
                        <term>Issues a run Camera Re-Boot command to the Camera.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_RunOemReboot(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr);</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Oem.RunReboot">
            <summary>OEM Run Camera Re-Boot<para>This function commands the Camera to re-boot. The Camera is first shutdown, and then restarts automatically.</para><para><strong>SDK Module ID:</strong> OEM <strong>0x0800</strong></para><para><strong>SDK Command ID:</strong> Base <strong />With Run <strong>0x42</strong></para><para><strong>SDK Data Length:</strong> Run <strong>0</strong> size a run command argument</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_RunOemReboot()</strong>
                        </term>
                        <term>Issues a run Camera Re-Boot command to the Camera.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_RunOemReboot(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr);</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Oem.RunPowerOnChecked">
            <summary>OEM Power On<para>This function sends the Power On command to the camera to turn the Camera ON once the camera was shutdown using the LEP_RunOemPowerDown() command (see 4.6.3). The power ON command is executed by the SDK (not the camera) by writing a ZERO (0x0000) to the Camera I2C Device ID (see 2.1.3). This will turn the camera ON if the power down and reset pins are NOT asserted.</para><para>Note that this command is not fully supported. It works the first time, after that, a power cycle is required.</para><para><strong>SDK Module ID:</strong> OEM <strong>0x0800</strong></para><para><strong>SDK Command ID:</strong> Base <strong>N/A</strong></para><para><strong>SDK Data Length:</strong> Run <strong>N/A</strong> size a run command argument</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_RunOemPowerOn()</strong>
                        </term>
                        <term>Issues a Camera Power Down command to the Camera</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_RunOemPowerOn(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr);</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Oem.RunPowerOn">
            <summary>OEM Power On<para>This function sends the Power On command to the camera to turn the Camera ON once the camera was shutdown using the LEP_RunOemPowerDown() command (see 4.6.3). The power ON command is executed by the SDK (not the camera) by writing a ZERO (0x0000) to the Camera I2C Device ID (see 2.1.3). This will turn the camera ON if the power down and reset pins are NOT asserted.</para><para>Note that this command is not fully supported. It works the first time, after that, a power cycle is required.</para><para><strong>SDK Module ID:</strong> OEM <strong>0x0800</strong></para><para><strong>SDK Command ID:</strong> Base <strong>N/A</strong></para><para><strong>SDK Data Length:</strong> Run <strong>N/A</strong> size a run command argument</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_RunOemPowerOn()</strong>
                        </term>
                        <term>Issues a Camera Power Down command to the Camera</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_RunOemPowerOn(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr);</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Oem.RunPowerDownChecked">
            <summary>OEM Power Down<para>This function sends the Power Down command to the camera to effectively shut the Camera off. The camera will respond with LEP_OK if command received correctly and then place the Camera into a power down or OFF mode after a small delay. Power Down is identical to the Camera s mode; both place the Camera into the OFF state.</para><para>To turn the Camera back ON using software, the Host must perform the following sequence:</para></summary>
            <remarks>
                <list>
                    <item>
                        <para>Let the ASIC hold the DATA line (SDA) low</para>
                    </item>
                    <item>
                        <para>Issue a single clock pulse. This Is required for the ASIC to de-assert the DATA line.</para>
                    </item>
                    <item>
                        <para>Call <strong>LEP_RunOemPowerOn()</strong> (see 4.6.2). This function will write a ZERO (0x0000) to the Camera Device ID to turn the Camera ON.</para>
                    </item>
                </list>
                <para>This will bring the Camera out of Power Down.</para>
                <para>
                    <strong>SDK Module ID:</strong> OEM <strong>0x0800</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Run <strong>0x02</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Run <strong>0</strong> size a run command argument</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_RunOemPowerDown()</strong>
                        </term>
                        <term>Issues a Camera Power Down command to the Camera</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_RunOemPowerDown(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr);
</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Oem.RunPowerDown">
            <summary>OEM Power Down<para>This function sends the Power Down command to the camera to effectively shut the Camera off. The camera will respond with LEP_OK if command received correctly and then place the Camera into a power down or OFF mode after a small delay. Power Down is identical to the Camera s mode; both place the Camera into the OFF state.</para><para>To turn the Camera back ON using software, the Host must perform the following sequence:</para></summary>
            <remarks>
                <list>
                    <item>
                        <para>Let the ASIC hold the DATA line (SDA) low</para>
                    </item>
                    <item>
                        <para>Issue a single clock pulse. This Is required for the ASIC to de-assert the DATA line.</para>
                    </item>
                    <item>
                        <para>Call <strong>LEP_RunOemPowerOn()</strong> (see 4.6.2). This function will write a ZERO (0x0000) to the Camera Device ID to turn the Camera ON.</para>
                    </item>
                </list>
                <para>This will bring the Camera out of Power Down.</para>
                <para>
                    <strong>SDK Module ID:</strong> OEM <strong>0x0800</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Run <strong>0x02</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Run <strong>0</strong> size a run command argument</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_RunOemPowerDown()</strong>
                        </term>
                        <term>Issues a Camera Power Down command to the Camera</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_RunOemPowerDown(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr);
</code>
            </remarks>
        </member>
        <member name="T:Lepton.CCI.Oem">
            <summary>
This module provides additional camera configuration, control, information and status of the camera system. This includes more specific version information about the camera. This module also provides OEMs with filter controls, power controls, and video output configuration and control.
</summary>
        </member>
        <member name="M:Lepton.CCI.Agc.SetHeqLinearPercentChecked(System.UInt16)">
            <summary>AGC HEQ Linear Percent<para>This parameter controls the camera AGC HEQ algorithm’s linear percent. The linear percent parameter fills holes in the histogram with pixels to avoid undesirable compression in 8-bit irradiance levels. Similar to the low clip limit, pixels are added to each full bin and to an additional number of empty bins following full bins. The linear percent parameter is more automatic than allowing the user to specify the low clip limit; the linear percent adjusts low clip limit based on the scene content and the desired percentage of total pixels in the histogram.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>0</term>
                        <term>100</term>
                        <term>20</term>
                        <term>percent</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> AGC <strong>0x0100</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x4C</strong></para>
                <para>With Set <strong>0x4D</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>1</strong> size of <strong>LEP_UINT16</strong> data type</para>
                <para>Set <strong>1</strong> size of <strong>LEP_UINT16</strong> data type</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <strong>Lepton 3.0</strong>
                        </term>
                        <term>
                            <strong>LEP_GetAgcHeqLinearPercent()</strong>
                        </term>
                        <term>Updates <strong>agcHeqLinearPercentPtr</strong> with the Camera’s current AGC HEQ Linear Percent value</term>
                    </item>
                    <item>
                        <term>
                            <strong>Lepton 3.0</strong>
                        </term>
                        <term>LEP_SetAgcHeqLinearPercent<strong>()</strong></term>
                        <term>Sets Camera’s current AGC HEQ Linear Percent to <strong>agcHeqLinearPercent</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetAgcHeqLinearPercent( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_UINT16 *agcHeqLinearPercentPtr)
LEP_RESULT LEP_SetAgcHeqLinearPercent( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_UINT16 agcHeqLinearPercent)</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Agc.SetHeqLinearPercent(System.UInt16)">
            <summary>AGC HEQ Linear Percent<para>This parameter controls the camera AGC HEQ algorithm’s linear percent. The linear percent parameter fills holes in the histogram with pixels to avoid undesirable compression in 8-bit irradiance levels. Similar to the low clip limit, pixels are added to each full bin and to an additional number of empty bins following full bins. The linear percent parameter is more automatic than allowing the user to specify the low clip limit; the linear percent adjusts low clip limit based on the scene content and the desired percentage of total pixels in the histogram.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>0</term>
                        <term>100</term>
                        <term>20</term>
                        <term>percent</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> AGC <strong>0x0100</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x4C</strong></para>
                <para>With Set <strong>0x4D</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>1</strong> size of <strong>LEP_UINT16</strong> data type</para>
                <para>Set <strong>1</strong> size of <strong>LEP_UINT16</strong> data type</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <strong>Lepton 3.0</strong>
                        </term>
                        <term>
                            <strong>LEP_GetAgcHeqLinearPercent()</strong>
                        </term>
                        <term>Updates <strong>agcHeqLinearPercentPtr</strong> with the Camera’s current AGC HEQ Linear Percent value</term>
                    </item>
                    <item>
                        <term>
                            <strong>Lepton 3.0</strong>
                        </term>
                        <term>LEP_SetAgcHeqLinearPercent<strong>()</strong></term>
                        <term>Sets Camera’s current AGC HEQ Linear Percent to <strong>agcHeqLinearPercent</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetAgcHeqLinearPercent( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_UINT16 *agcHeqLinearPercentPtr)
LEP_RESULT LEP_SetAgcHeqLinearPercent( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_UINT16 agcHeqLinearPercent)</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Agc.SetCalcEnableStateChecked(Lepton.CCI.Agc.Enable)">
            <summary>AGC Calculation Enable State<para>This parameter controls the camera AGC calculations operations. If enabled, the current video histogram and AGC policy will be calculated for each input frame. If disabled, then no AGC calculations are performed and the current state of the ITT is preserved. For smooth AGC on /off operation, it is recommended to have this enabled.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_AGC_DISABLE</term>
                        <term>LEP_AGC_ENABLE</term>
                        <term>LEP_AGC_DISABLE</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> AGC <strong>0x0100</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x48</strong></para>
                <para>With Set <strong>0x49</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 1.5, 1.6, 2.0, 2.5</term>
                        <term>
                            <strong>LEP_GetAgcCalcEnableState()</strong>
                        </term>
                        <term>Updates <strong>agcCalculationEnableStatePtr</strong> with the Camera’s current AGC Calculation enable state</term>
                    </item>
                    <item>
                        <term>Lepton 1.5, 1.6, 2.0, 2.5</term>
                        <term>LEP_SetAgcCalcEnableState<strong>()</strong></term>
                        <term>Sets Camera’s current AGC Calculation enable state to <strong>agcCalculationEnableState</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetAgcCalcEnableState( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_AGC_ENABLE_E_PTR agcCalculationEnableStatePtr )
LEP_RESULT LEP_SetAgcCalcEnableState( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_AGC_ENABLE_E agcCalculationEnableState )
/* AGC Enable Enum
*/
typedef enum LEP_AGC_ENABLE_TAG
{
LEP_AGC_DISABLE=0,
LEP_AGC_ENABLE,
LEP_END_AGC_ENABLE
}LEP_AGC_ENABLE_E, *LEP_AGC_ENABLE_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Agc.SetCalcEnableState(Lepton.CCI.Agc.Enable)">
            <summary>AGC Calculation Enable State<para>This parameter controls the camera AGC calculations operations. If enabled, the current video histogram and AGC policy will be calculated for each input frame. If disabled, then no AGC calculations are performed and the current state of the ITT is preserved. For smooth AGC on /off operation, it is recommended to have this enabled.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_AGC_DISABLE</term>
                        <term>LEP_AGC_ENABLE</term>
                        <term>LEP_AGC_DISABLE</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> AGC <strong>0x0100</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x48</strong></para>
                <para>With Set <strong>0x49</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 1.5, 1.6, 2.0, 2.5</term>
                        <term>
                            <strong>LEP_GetAgcCalcEnableState()</strong>
                        </term>
                        <term>Updates <strong>agcCalculationEnableStatePtr</strong> with the Camera’s current AGC Calculation enable state</term>
                    </item>
                    <item>
                        <term>Lepton 1.5, 1.6, 2.0, 2.5</term>
                        <term>LEP_SetAgcCalcEnableState<strong>()</strong></term>
                        <term>Sets Camera’s current AGC Calculation enable state to <strong>agcCalculationEnableState</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetAgcCalcEnableState( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_AGC_ENABLE_E_PTR agcCalculationEnableStatePtr )
LEP_RESULT LEP_SetAgcCalcEnableState( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_AGC_ENABLE_E agcCalculationEnableState )
/* AGC Enable Enum
*/
typedef enum LEP_AGC_ENABLE_TAG
{
LEP_AGC_DISABLE=0,
LEP_AGC_ENABLE,
LEP_END_AGC_ENABLE
}LEP_AGC_ENABLE_E, *LEP_AGC_ENABLE_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Agc.SetHeqScaleFactorChecked(Lepton.CCI.Agc.HeqScaleFactor)">
            <summary>AGC HEQ Output Scale Factor<para>This parameter specifies the output format for HEQ as either 8-bits (values range 0 to 255), or 14-bit (values range from 0 to 16383).</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <strong>LEP_AGC_SCALE_TO_8_BITS</strong>
                        </term>
                        <term>
                            <strong>LEP_AGC_SCALE_TO_14_BITS</strong>
                        </term>
                        <term>
                            <strong>LEP_AGC_SCALE_TO_8_BITS</strong>
                        </term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> AGC <strong>0x0100</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x44</strong></para>
                <para>With Set <strong>0x45</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 1.5, 1.6, 2.0, 2.5</term>
                        <term>
                            <strong>LEP_GetAgcHeqScaleFactor()</strong>
                        </term>
                        <term>Updates <strong>scaleFactorPtr</strong> with the Camera’s current AGC HEQ Output Scale Factor</term>
                    </item>
                    <item>
                        <term>Lepton 1.5, 1.6, 2.0, 2.5</term>
                        <term>
                            <strong>LEP_SetAgcHeqScaleFactor()</strong>
                        </term>
                        <term>Sets Camera’s current AGC HEQ Output Scale Factor to <strong>scaleFactor</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetAgcHeqScaleFactor (LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_AGC_HEQ_SCALE_FACTOR_E_PTR scaleFactorPtr)
LEP_RESULT LEP_SetAgcHeqScaleFactor (LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_AGC_HEQ_SCALE_FACTOR_E scaleFactor)
/* AGC Output Scale Factor Structure
*/
typedef enum LEP_AGC_SCALE_FACTOR_E_TAG
{
LEP_AGC_SCALE_TO_8_BITS = 0,
LEP_AGC_SCALE_TO_14_BITS,
LEP_AGC_END_SCALE_TO
}LEP_AGC_HEQ_SCALE_FACTOR_E, *LEP_AGC_HEQ_SCALE_FACTOR_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Agc.SetHeqScaleFactor(Lepton.CCI.Agc.HeqScaleFactor)">
            <summary>AGC HEQ Output Scale Factor<para>This parameter specifies the output format for HEQ as either 8-bits (values range 0 to 255), or 14-bit (values range from 0 to 16383).</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <strong>LEP_AGC_SCALE_TO_8_BITS</strong>
                        </term>
                        <term>
                            <strong>LEP_AGC_SCALE_TO_14_BITS</strong>
                        </term>
                        <term>
                            <strong>LEP_AGC_SCALE_TO_8_BITS</strong>
                        </term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> AGC <strong>0x0100</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x44</strong></para>
                <para>With Set <strong>0x45</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 1.5, 1.6, 2.0, 2.5</term>
                        <term>
                            <strong>LEP_GetAgcHeqScaleFactor()</strong>
                        </term>
                        <term>Updates <strong>scaleFactorPtr</strong> with the Camera’s current AGC HEQ Output Scale Factor</term>
                    </item>
                    <item>
                        <term>Lepton 1.5, 1.6, 2.0, 2.5</term>
                        <term>
                            <strong>LEP_SetAgcHeqScaleFactor()</strong>
                        </term>
                        <term>Sets Camera’s current AGC HEQ Output Scale Factor to <strong>scaleFactor</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetAgcHeqScaleFactor (LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_AGC_HEQ_SCALE_FACTOR_E_PTR scaleFactorPtr)
LEP_RESULT LEP_SetAgcHeqScaleFactor (LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_AGC_HEQ_SCALE_FACTOR_E scaleFactor)
/* AGC Output Scale Factor Structure
*/
typedef enum LEP_AGC_SCALE_FACTOR_E_TAG
{
LEP_AGC_SCALE_TO_8_BITS = 0,
LEP_AGC_SCALE_TO_14_BITS,
LEP_AGC_END_SCALE_TO
}LEP_AGC_HEQ_SCALE_FACTOR_E, *LEP_AGC_HEQ_SCALE_FACTOR_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Agc.SetHeqEmptyCountChecked(System.UInt16)">
            <summary>AGC HEQ Empty Counts<para>This parameter specifies the maximum number of pixels in a bin that will be interpreted as an empty bin. Histogram bins with this number of pixels or less will be processed as an empty bin.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>0</term>
                        <term>2^14 -1</term>
                        <term>2</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> AGC <strong>0x0100</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x3C</strong></para>
                <para>With Set <strong>0x3D</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>1</strong> size of <strong>LEP_UINT16</strong> data type</para>
                <para>Set <strong>1</strong> size of <strong>LEP_UINT16</strong> data type</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 1.5, 1.6, 2.0, 2.5</term>
                        <term>
                            <strong>LEP_GetAgcHeqEmptyCount()</strong>
                        </term>
                        <term>Updates <strong>emptyCountPtr</strong> with the Camera’s current HEQ transfer function’s bin empty count</term>
                    </item>
                    <item>
                        <term>Lepton 1.5, 1.6, 2.0, 2.5</term>
                        <term>
                            <strong>LEP_SetAgcHeqEmptyCount()</strong>
                        </term>
                        <term>Sets Camera’s current HEQ transfer function’s bin empty count to <strong>emptyCount</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetAgcHeqEmptyCount(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_AGC_HEQ_EMPTY_COUNT_T_PTR emptyCountPtr)
LEP_RESULT LEP_SetAgcHeqEmptyCount(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_AGC_HEQ_EMPTY_COUNT_T emptyCount)</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Agc.SetHeqEmptyCount(System.UInt16)">
            <summary>AGC HEQ Empty Counts<para>This parameter specifies the maximum number of pixels in a bin that will be interpreted as an empty bin. Histogram bins with this number of pixels or less will be processed as an empty bin.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>0</term>
                        <term>2^14 -1</term>
                        <term>2</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> AGC <strong>0x0100</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x3C</strong></para>
                <para>With Set <strong>0x3D</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>1</strong> size of <strong>LEP_UINT16</strong> data type</para>
                <para>Set <strong>1</strong> size of <strong>LEP_UINT16</strong> data type</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 1.5, 1.6, 2.0, 2.5</term>
                        <term>
                            <strong>LEP_GetAgcHeqEmptyCount()</strong>
                        </term>
                        <term>Updates <strong>emptyCountPtr</strong> with the Camera’s current HEQ transfer function’s bin empty count</term>
                    </item>
                    <item>
                        <term>Lepton 1.5, 1.6, 2.0, 2.5</term>
                        <term>
                            <strong>LEP_SetAgcHeqEmptyCount()</strong>
                        </term>
                        <term>Sets Camera’s current HEQ transfer function’s bin empty count to <strong>emptyCount</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetAgcHeqEmptyCount(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_AGC_HEQ_EMPTY_COUNT_T_PTR emptyCountPtr)
LEP_RESULT LEP_SetAgcHeqEmptyCount(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_AGC_HEQ_EMPTY_COUNT_T emptyCount)</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Agc.SetHeqClipLimitLowChecked(System.UInt16)">
            <summary>AGC HEQ Clip Limit Low<para>This parameter defines an artificial population that is added to every non-empty histogram bin. In other words, if the Clip Limit Low is set to <em>L</em>, a bin with an actual population of <em>X</em> will have an effective population of <em>L</em> + <em>X.</em> y empty bin that is nearby a populated bin will be given an artificial population of <em>L</em>. The effect of higher values is to provide a more linear transfer function; lower values provide a more non-linear (equalized) transfer function. This command is deprecated for Lepton 3 (replaced by Linear Percent).</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>0</term>
                        <term>1024</term>
                        <term>512</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> AGC <strong>0x0100</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x30</strong></para>
                <para>With Set <strong>0x31</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>1</strong> size of <strong>LEP_UINT16</strong> data type</para>
                <para>Set <strong>1</strong> size of <strong>LEP_UINT16</strong> data type</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 1.5, 1.6, 2.0, 2.5</term>
                        <term>
                            <strong>LEP_GetAgcHeqClipLimitLow()</strong>
                        </term>
                        <term>Updates <strong>agcHeqClipLimitLowPtr</strong> with the Camera’s current HEQ level Low value</term>
                    </item>
                    <item>
                        <term>Lepton 1.5, 1.6, 2.0, 2.5</term>
                        <term>
                            <strong>LEP_SetAgcHeqClipLimitLow()</strong>
                        </term>
                        <term>Sets Camera’s current HEQ level Low value to <strong>agcHeqClipLimitLow</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetAgcHeqClipLimitLow(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_UINT16 *agcHeqClipLimitLowPtr)
LEP_RESULT LEP_SetAgcHeqClipLimitLow(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_UINT16 agcHeqClipLimitLow)</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Agc.SetHeqClipLimitLow(System.UInt16)">
            <summary>AGC HEQ Clip Limit Low<para>This parameter defines an artificial population that is added to every non-empty histogram bin. In other words, if the Clip Limit Low is set to <em>L</em>, a bin with an actual population of <em>X</em> will have an effective population of <em>L</em> + <em>X.</em> y empty bin that is nearby a populated bin will be given an artificial population of <em>L</em>. The effect of higher values is to provide a more linear transfer function; lower values provide a more non-linear (equalized) transfer function. This command is deprecated for Lepton 3 (replaced by Linear Percent).</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>0</term>
                        <term>1024</term>
                        <term>512</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> AGC <strong>0x0100</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x30</strong></para>
                <para>With Set <strong>0x31</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>1</strong> size of <strong>LEP_UINT16</strong> data type</para>
                <para>Set <strong>1</strong> size of <strong>LEP_UINT16</strong> data type</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 1.5, 1.6, 2.0, 2.5</term>
                        <term>
                            <strong>LEP_GetAgcHeqClipLimitLow()</strong>
                        </term>
                        <term>Updates <strong>agcHeqClipLimitLowPtr</strong> with the Camera’s current HEQ level Low value</term>
                    </item>
                    <item>
                        <term>Lepton 1.5, 1.6, 2.0, 2.5</term>
                        <term>
                            <strong>LEP_SetAgcHeqClipLimitLow()</strong>
                        </term>
                        <term>Sets Camera’s current HEQ level Low value to <strong>agcHeqClipLimitLow</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetAgcHeqClipLimitLow(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_UINT16 *agcHeqClipLimitLowPtr)
LEP_RESULT LEP_SetAgcHeqClipLimitLow(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_UINT16 agcHeqClipLimitLow)</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Agc.SetHeqClipLimitHighChecked(System.UInt16)">
            <summary>AGC HEQ Clip Limit High<para>This parameter defines the maximum number of pixels allowed to accumulate in any given histogram bin. Any additional pixels in a given bin are clipped. The effect of this parameter is to limit the influence of highly-populated bins on the resulting HEQ transformation function.</para><para><strong>Lepton 1.5, 1.6, 2.0, 2.5</strong></para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>0</term>
                        <term>4,800</term>
                        <term>4,800</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>Lepton 3.0, 3.5</strong>
                </para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>0</term>
                        <term>19,200</term>
                        <term>19,200</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> AGC <strong>0x0100</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x2C</strong></para>
                <para>With Set <strong>0x2D</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>1</strong> size of <strong>LEP_UINT16</strong> data type</para>
                <para>Set <strong>1</strong> size of <strong>LEP_UINT16</strong> data type</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetAgcHeqClipLimitHigh()</strong>
                        </term>
                        <term>Updates <strong>agcHeqClipLimitHighPtr</strong> with the Camera’s current HEQ level high value</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetAgcHeqClipLimitHigh()</strong>
                        </term>
                        <term>Sets Camera’s current HEQ level high value to <strong>agcHeqClipLimitHigh</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetAgcHeqClipLimitHigh(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_UINT16 *agcHeqClipLimitHighPtr)
LEP_RESULT LEP_SetAgcHeqClipLimitHigh(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_UINT16 agcHeqClipLimitHigh)</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Agc.SetHeqClipLimitHigh(System.UInt16)">
            <summary>AGC HEQ Clip Limit High<para>This parameter defines the maximum number of pixels allowed to accumulate in any given histogram bin. Any additional pixels in a given bin are clipped. The effect of this parameter is to limit the influence of highly-populated bins on the resulting HEQ transformation function.</para><para><strong>Lepton 1.5, 1.6, 2.0, 2.5</strong></para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>0</term>
                        <term>4,800</term>
                        <term>4,800</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>Lepton 3.0, 3.5</strong>
                </para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>0</term>
                        <term>19,200</term>
                        <term>19,200</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> AGC <strong>0x0100</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x2C</strong></para>
                <para>With Set <strong>0x2D</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>1</strong> size of <strong>LEP_UINT16</strong> data type</para>
                <para>Set <strong>1</strong> size of <strong>LEP_UINT16</strong> data type</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetAgcHeqClipLimitHigh()</strong>
                        </term>
                        <term>Updates <strong>agcHeqClipLimitHighPtr</strong> with the Camera’s current HEQ level high value</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetAgcHeqClipLimitHigh()</strong>
                        </term>
                        <term>Sets Camera’s current HEQ level high value to <strong>agcHeqClipLimitHigh</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetAgcHeqClipLimitHigh(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_UINT16 *agcHeqClipLimitHighPtr)
LEP_RESULT LEP_SetAgcHeqClipLimitHigh(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_UINT16 agcHeqClipLimitHigh)</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Agc.SetHeqDampingFactorChecked(System.UInt16)">
            <summary>AGC HEQ Dampening Factor<para>This parameter is the amount of temporal dampening applied to the HEQ transformation function. An IIR filter of the form (<em>N</em>/256) * <strong>previous</strong> + ((256-<em>N</em>)/256) * <strong>current</strong> is applied , and the HEQ dampening factor represents the value N in the equation, i.e., a value that applies to the amount of influence the previous HEQ transformation function has on the current function. . The lower the value of N the higher the influence of the current video frame whereas the higher the value of N the more influence the previous damped transfer function has.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>0</term>
                        <term>256</term>
                        <term>64</term>
                        <term>N/A</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> AGC <strong>0x0100</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x24</strong></para>
                <para>With Set <strong>0x25</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>1</strong> size of <strong>LEP_UINT16</strong> data type</para>
                <para>Set <strong>1</strong> size of <strong>LEP_UINT16</strong> data type</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetAgcHeqDampingFactor()</strong>
                        </term>
                        <term>Updates <strong>agcHeqDampingFactorPtr</strong> with the Camera’s current HEQ dampening factor</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetAgcHeqDampingFactor()</strong>
                        </term>
                        <term>Sets Camera’s current HEQ dampening factor to <strong>agcHeqDampingFactor</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetAgcHeqDampingFactor(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_UINT16 *agcHeqDampingFactorPtr)
LEP_RESULT LEP_SetAgcHeqDampingFactor(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_UINT16 gcHeqDampingFactor)</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Agc.SetHeqDampingFactor(System.UInt16)">
            <summary>AGC HEQ Dampening Factor<para>This parameter is the amount of temporal dampening applied to the HEQ transformation function. An IIR filter of the form (<em>N</em>/256) * <strong>previous</strong> + ((256-<em>N</em>)/256) * <strong>current</strong> is applied , and the HEQ dampening factor represents the value N in the equation, i.e., a value that applies to the amount of influence the previous HEQ transformation function has on the current function. . The lower the value of N the higher the influence of the current video frame whereas the higher the value of N the more influence the previous damped transfer function has.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>0</term>
                        <term>256</term>
                        <term>64</term>
                        <term>N/A</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> AGC <strong>0x0100</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x24</strong></para>
                <para>With Set <strong>0x25</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>1</strong> size of <strong>LEP_UINT16</strong> data type</para>
                <para>Set <strong>1</strong> size of <strong>LEP_UINT16</strong> data type</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetAgcHeqDampingFactor()</strong>
                        </term>
                        <term>Updates <strong>agcHeqDampingFactorPtr</strong> with the Camera’s current HEQ dampening factor</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetAgcHeqDampingFactor()</strong>
                        </term>
                        <term>Sets Camera’s current HEQ dampening factor to <strong>agcHeqDampingFactor</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetAgcHeqDampingFactor(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_UINT16 *agcHeqDampingFactorPtr)
LEP_RESULT LEP_SetAgcHeqDampingFactor(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_UINT16 gcHeqDampingFactor)</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Agc.SetROIChecked(Lepton.CCI.Agc.Roi)">
            <summary>AGC ROI Select<para>The AGC algorithms utilize a histogram, which is collected from within a specified rectangular window or Region of Interest (ROI). This region is defined by 4 parameters: start column, start row, end column, and end row. The region is adjustable from full window to a sub-window.</para><para><strong>Lepton 1.5, 1.6, 2.0, 2.5</strong></para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Dimension</strong>
                        </term>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>
Value</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <para>
                                <para>start column</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>&lt; = endCol</term>
                        <term>0</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>start row</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>&lt; endRow</term>
                        <term>0</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>end column</para>
                            </para>
                        </term>
                        <term>&gt;= startCol</term>
                        <term>79</term>
                        <term>79</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>end row</para>
                            </para>
                        </term>
                        <term>&gt;= startRow</term>
                        <term>59</term>
                        <term>59</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>Lepton 3.0, 3.5</strong>
                </para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Dimension</strong>
                        </term>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>
Value</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <para>
                                <para>start column</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>&lt; = endCol</term>
                        <term>0</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>start row</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>&lt; endRow</term>
                        <term>0</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>end column</para>
                            </para>
                        </term>
                        <term>&gt;= startCol</term>
                        <term>159</term>
                        <term>159</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>end row</para>
                            </para>
                        </term>
                        <term>&gt;= startRow</term>
                        <term>119</term>
                        <term>119</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> AGC <strong>0x0100</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x08</strong></para>
                <para>With Set <strong>0x09</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>4</strong> size of <strong>LEP_AGC_ROI_T</strong> data type</para>
                <para>Set <strong>4</strong> size of <strong>LEP_AGC_ROI_T</strong> data type</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetAgcROI()</strong>
                        </term>
                        <term>Updates <strong>agcROIPtr</strong> with the Camera’s current AGC ROI</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetAgcROI()</strong>
                        </term>
                        <term>Sets Camera’s current AGC ROI to <strong>agcROI</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetAgcROI(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_AGC_ROI_T_PTR agcROIPtr)
LEP_RESULT LEP_SetAgcROI(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_AGC_ROI_T agcROI)
/* AGC ROI Structure
*/
typedef struct LEP_AGC_ROI_TAG
{
LEP_UINT16 startCol;
LEP_UINT16 startRow;
LEP_UINT16 endCol;
LEP_UINT16 endRow;
}LEP_AGC_ROI_T, *LEP_AGC_ROI_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Agc.SetROI(Lepton.CCI.Agc.Roi)">
            <summary>AGC ROI Select<para>The AGC algorithms utilize a histogram, which is collected from within a specified rectangular window or Region of Interest (ROI). This region is defined by 4 parameters: start column, start row, end column, and end row. The region is adjustable from full window to a sub-window.</para><para><strong>Lepton 1.5, 1.6, 2.0, 2.5</strong></para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Dimension</strong>
                        </term>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>
Value</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <para>
                                <para>start column</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>&lt; = endCol</term>
                        <term>0</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>start row</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>&lt; endRow</term>
                        <term>0</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>end column</para>
                            </para>
                        </term>
                        <term>&gt;= startCol</term>
                        <term>79</term>
                        <term>79</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>end row</para>
                            </para>
                        </term>
                        <term>&gt;= startRow</term>
                        <term>59</term>
                        <term>59</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>Lepton 3.0, 3.5</strong>
                </para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Dimension</strong>
                        </term>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>
Value</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <para>
                                <para>start column</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>&lt; = endCol</term>
                        <term>0</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>start row</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>&lt; endRow</term>
                        <term>0</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>end column</para>
                            </para>
                        </term>
                        <term>&gt;= startCol</term>
                        <term>159</term>
                        <term>159</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>end row</para>
                            </para>
                        </term>
                        <term>&gt;= startRow</term>
                        <term>119</term>
                        <term>119</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> AGC <strong>0x0100</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x08</strong></para>
                <para>With Set <strong>0x09</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>4</strong> size of <strong>LEP_AGC_ROI_T</strong> data type</para>
                <para>Set <strong>4</strong> size of <strong>LEP_AGC_ROI_T</strong> data type</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetAgcROI()</strong>
                        </term>
                        <term>Updates <strong>agcROIPtr</strong> with the Camera’s current AGC ROI</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetAgcROI()</strong>
                        </term>
                        <term>Sets Camera’s current AGC ROI to <strong>agcROI</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetAgcROI(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_AGC_ROI_T_PTR agcROIPtr)
LEP_RESULT LEP_SetAgcROI(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_AGC_ROI_T agcROI)
/* AGC ROI Structure
*/
typedef struct LEP_AGC_ROI_TAG
{
LEP_UINT16 startCol;
LEP_UINT16 startRow;
LEP_UINT16 endCol;
LEP_UINT16 endRow;
}LEP_AGC_ROI_T, *LEP_AGC_ROI_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Agc.SetPolicyChecked(Lepton.CCI.Agc.Policy)">
            <summary>AGC Policy Select<para>The camera supports 2 AGC policies to process incoming video data, histogram equalization (HEQ) and linear histogram stretch. This command sets and retrieves the AGC policy.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <strong>LEP_AGC_LINEAR</strong>
                        </term>
                        <term>
                            <strong>LEP_AGC_HEQ</strong>
                        </term>
                        <term>
                            <strong>LEP_AGC_HEQ</strong>
                        </term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> AGC <strong>0x0100</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x04</strong></para>
                <para>With Set <strong>0x05</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetAgcPolicy()</strong>
                        </term>
                        <term>Updates <strong>agcPolicyPtr</strong> with the Camera’s current AGC policy.</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetAgcPolicy()</strong>
                        </term>
                        <term>Sets Camera’s current AGC policy to <strong>agcPolicy</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetAgcPolicy(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_AGC_POLICY_E_PTR agcPolicyPtr)
LEP_RESULT LEP_SetAgcPolicy(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_AGC_POLICY_E agcPolicy)
/* AGC Policy Enum
*/
typedef enum LEP_AGC_POLICY_TAG
{
LEP_AGC_LINEAR=0,
LEP_AGC_HEQ,
LEP_END_AGC_POLICY
}LEP_AGC_POLICY_E, *LEP_AGC_POLICY_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Agc.SetPolicy(Lepton.CCI.Agc.Policy)">
            <summary>AGC Policy Select<para>The camera supports 2 AGC policies to process incoming video data, histogram equalization (HEQ) and linear histogram stretch. This command sets and retrieves the AGC policy.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <strong>LEP_AGC_LINEAR</strong>
                        </term>
                        <term>
                            <strong>LEP_AGC_HEQ</strong>
                        </term>
                        <term>
                            <strong>LEP_AGC_HEQ</strong>
                        </term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> AGC <strong>0x0100</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x04</strong></para>
                <para>With Set <strong>0x05</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetAgcPolicy()</strong>
                        </term>
                        <term>Updates <strong>agcPolicyPtr</strong> with the Camera’s current AGC policy.</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetAgcPolicy()</strong>
                        </term>
                        <term>Sets Camera’s current AGC policy to <strong>agcPolicy</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetAgcPolicy(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_AGC_POLICY_E_PTR agcPolicyPtr)
LEP_RESULT LEP_SetAgcPolicy(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_AGC_POLICY_E agcPolicy)
/* AGC Policy Enum
*/
typedef enum LEP_AGC_POLICY_TAG
{
LEP_AGC_LINEAR=0,
LEP_AGC_HEQ,
LEP_END_AGC_POLICY
}LEP_AGC_POLICY_E, *LEP_AGC_POLICY_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Agc.SetEnableStateChecked(Lepton.CCI.Agc.Enable)">
            <summary>AGC Enable and Disable<para>To turn AGC ON is to enable AGC processing. Disabling the AGC will turn the AGC processing OFF and the video data will not be optimized for scene contrast. This command sets and retrieves the AGC state.</para><para>Note that the Focus metric (see 4.5.3) must be disabled when AGC is enabled.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <strong>LEP_AGC_DISABLE</strong>
                        </term>
                        <term>
                            <strong>LEP_AGC_ENABLE</strong>
                        </term>
                        <term>
                            <strong>LEP_AGC_DISABLE</strong>
                        </term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> AGC <strong>0x0100</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong>0x00</strong></para>
                <para>
                    <para>With Get <strong>0x00 </strong></para>
                </para>
                <para>With Set <strong>0x01</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetAgcEnableState()</strong>
                        </term>
                        <term>Updates <strong>agcEnableStatePtr</strong> with the Camera’s current AGC enable state.</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetAgcEnableState()</strong>
                        </term>
                        <term>Sets Camera’s current AGC enable state to <strong>agcEnableState</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetAgcEnableState(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_AGC_ENABLE_E_PTR agcEnableStatePtr)
LEP_RESULT LEP_SetAgcEnableState(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_AGC_ENABLE_E agcEnableState)
/* AGC Enable Enum
*/
typedef enum LEP_AGC_ENABLE_TAG
{
LEP_AGC_DISABLE=0,
LEP_AGC_ENABLE,
LEP_END_AGC_ENABLE
}LEP_AGC_ENABLE_E, *LEP_AGC_ENABLE_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Agc.SetEnableState(Lepton.CCI.Agc.Enable)">
            <summary>AGC Enable and Disable<para>To turn AGC ON is to enable AGC processing. Disabling the AGC will turn the AGC processing OFF and the video data will not be optimized for scene contrast. This command sets and retrieves the AGC state.</para><para>Note that the Focus metric (see 4.5.3) must be disabled when AGC is enabled.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <strong>LEP_AGC_DISABLE</strong>
                        </term>
                        <term>
                            <strong>LEP_AGC_ENABLE</strong>
                        </term>
                        <term>
                            <strong>LEP_AGC_DISABLE</strong>
                        </term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> AGC <strong>0x0100</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong>0x00</strong></para>
                <para>
                    <para>With Get <strong>0x00 </strong></para>
                </para>
                <para>With Set <strong>0x01</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetAgcEnableState()</strong>
                        </term>
                        <term>Updates <strong>agcEnableStatePtr</strong> with the Camera’s current AGC enable state.</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetAgcEnableState()</strong>
                        </term>
                        <term>Sets Camera’s current AGC enable state to <strong>agcEnableState</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetAgcEnableState(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_AGC_ENABLE_E_PTR agcEnableStatePtr)
LEP_RESULT LEP_SetAgcEnableState(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_AGC_ENABLE_E agcEnableState)
/* AGC Enable Enum
*/
typedef enum LEP_AGC_ENABLE_TAG
{
LEP_AGC_DISABLE=0,
LEP_AGC_ENABLE,
LEP_END_AGC_ENABLE
}LEP_AGC_ENABLE_E, *LEP_AGC_ENABLE_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Agc.GetHeqLinearPercentChecked">
            <summary>AGC HEQ Linear Percent<para>This parameter controls the camera AGC HEQ algorithm’s linear percent. The linear percent parameter fills holes in the histogram with pixels to avoid undesirable compression in 8-bit irradiance levels. Similar to the low clip limit, pixels are added to each full bin and to an additional number of empty bins following full bins. The linear percent parameter is more automatic than allowing the user to specify the low clip limit; the linear percent adjusts low clip limit based on the scene content and the desired percentage of total pixels in the histogram.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>0</term>
                        <term>100</term>
                        <term>20</term>
                        <term>percent</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> AGC <strong>0x0100</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x4C</strong></para>
                <para>With Set <strong>0x4D</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>1</strong> size of <strong>LEP_UINT16</strong> data type</para>
                <para>Set <strong>1</strong> size of <strong>LEP_UINT16</strong> data type</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <strong>Lepton 3.0</strong>
                        </term>
                        <term>
                            <strong>LEP_GetAgcHeqLinearPercent()</strong>
                        </term>
                        <term>Updates <strong>agcHeqLinearPercentPtr</strong> with the Camera’s current AGC HEQ Linear Percent value</term>
                    </item>
                    <item>
                        <term>
                            <strong>Lepton 3.0</strong>
                        </term>
                        <term>LEP_SetAgcHeqLinearPercent<strong>()</strong></term>
                        <term>Sets Camera’s current AGC HEQ Linear Percent to <strong>agcHeqLinearPercent</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetAgcHeqLinearPercent( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_UINT16 *agcHeqLinearPercentPtr)
LEP_RESULT LEP_SetAgcHeqLinearPercent( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_UINT16 agcHeqLinearPercent)</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Agc.GetHeqLinearPercent">
            <summary>AGC HEQ Linear Percent<para>This parameter controls the camera AGC HEQ algorithm’s linear percent. The linear percent parameter fills holes in the histogram with pixels to avoid undesirable compression in 8-bit irradiance levels. Similar to the low clip limit, pixels are added to each full bin and to an additional number of empty bins following full bins. The linear percent parameter is more automatic than allowing the user to specify the low clip limit; the linear percent adjusts low clip limit based on the scene content and the desired percentage of total pixels in the histogram.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>0</term>
                        <term>100</term>
                        <term>20</term>
                        <term>percent</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> AGC <strong>0x0100</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x4C</strong></para>
                <para>With Set <strong>0x4D</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>1</strong> size of <strong>LEP_UINT16</strong> data type</para>
                <para>Set <strong>1</strong> size of <strong>LEP_UINT16</strong> data type</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <strong>Lepton 3.0</strong>
                        </term>
                        <term>
                            <strong>LEP_GetAgcHeqLinearPercent()</strong>
                        </term>
                        <term>Updates <strong>agcHeqLinearPercentPtr</strong> with the Camera’s current AGC HEQ Linear Percent value</term>
                    </item>
                    <item>
                        <term>
                            <strong>Lepton 3.0</strong>
                        </term>
                        <term>LEP_SetAgcHeqLinearPercent<strong>()</strong></term>
                        <term>Sets Camera’s current AGC HEQ Linear Percent to <strong>agcHeqLinearPercent</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetAgcHeqLinearPercent( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_UINT16 *agcHeqLinearPercentPtr)
LEP_RESULT LEP_SetAgcHeqLinearPercent( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_UINT16 agcHeqLinearPercent)</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Agc.GetCalcEnableStateChecked">
            <summary>AGC Calculation Enable State<para>This parameter controls the camera AGC calculations operations. If enabled, the current video histogram and AGC policy will be calculated for each input frame. If disabled, then no AGC calculations are performed and the current state of the ITT is preserved. For smooth AGC on /off operation, it is recommended to have this enabled.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_AGC_DISABLE</term>
                        <term>LEP_AGC_ENABLE</term>
                        <term>LEP_AGC_DISABLE</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> AGC <strong>0x0100</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x48</strong></para>
                <para>With Set <strong>0x49</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 1.5, 1.6, 2.0, 2.5</term>
                        <term>
                            <strong>LEP_GetAgcCalcEnableState()</strong>
                        </term>
                        <term>Updates <strong>agcCalculationEnableStatePtr</strong> with the Camera’s current AGC Calculation enable state</term>
                    </item>
                    <item>
                        <term>Lepton 1.5, 1.6, 2.0, 2.5</term>
                        <term>LEP_SetAgcCalcEnableState<strong>()</strong></term>
                        <term>Sets Camera’s current AGC Calculation enable state to <strong>agcCalculationEnableState</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetAgcCalcEnableState( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_AGC_ENABLE_E_PTR agcCalculationEnableStatePtr )
LEP_RESULT LEP_SetAgcCalcEnableState( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_AGC_ENABLE_E agcCalculationEnableState )
/* AGC Enable Enum
*/
typedef enum LEP_AGC_ENABLE_TAG
{
LEP_AGC_DISABLE=0,
LEP_AGC_ENABLE,
LEP_END_AGC_ENABLE
}LEP_AGC_ENABLE_E, *LEP_AGC_ENABLE_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Agc.GetCalcEnableState">
            <summary>AGC Calculation Enable State<para>This parameter controls the camera AGC calculations operations. If enabled, the current video histogram and AGC policy will be calculated for each input frame. If disabled, then no AGC calculations are performed and the current state of the ITT is preserved. For smooth AGC on /off operation, it is recommended to have this enabled.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>LEP_AGC_DISABLE</term>
                        <term>LEP_AGC_ENABLE</term>
                        <term>LEP_AGC_DISABLE</term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> AGC <strong>0x0100</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x48</strong></para>
                <para>With Set <strong>0x49</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 1.5, 1.6, 2.0, 2.5</term>
                        <term>
                            <strong>LEP_GetAgcCalcEnableState()</strong>
                        </term>
                        <term>Updates <strong>agcCalculationEnableStatePtr</strong> with the Camera’s current AGC Calculation enable state</term>
                    </item>
                    <item>
                        <term>Lepton 1.5, 1.6, 2.0, 2.5</term>
                        <term>LEP_SetAgcCalcEnableState<strong>()</strong></term>
                        <term>Sets Camera’s current AGC Calculation enable state to <strong>agcCalculationEnableState</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetAgcCalcEnableState( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_AGC_ENABLE_E_PTR agcCalculationEnableStatePtr )
LEP_RESULT LEP_SetAgcCalcEnableState( LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_AGC_ENABLE_E agcCalculationEnableState )
/* AGC Enable Enum
*/
typedef enum LEP_AGC_ENABLE_TAG
{
LEP_AGC_DISABLE=0,
LEP_AGC_ENABLE,
LEP_END_AGC_ENABLE
}LEP_AGC_ENABLE_E, *LEP_AGC_ENABLE_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Agc.GetHeqScaleFactorChecked">
            <summary>AGC HEQ Output Scale Factor<para>This parameter specifies the output format for HEQ as either 8-bits (values range 0 to 255), or 14-bit (values range from 0 to 16383).</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <strong>LEP_AGC_SCALE_TO_8_BITS</strong>
                        </term>
                        <term>
                            <strong>LEP_AGC_SCALE_TO_14_BITS</strong>
                        </term>
                        <term>
                            <strong>LEP_AGC_SCALE_TO_8_BITS</strong>
                        </term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> AGC <strong>0x0100</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x44</strong></para>
                <para>With Set <strong>0x45</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 1.5, 1.6, 2.0, 2.5</term>
                        <term>
                            <strong>LEP_GetAgcHeqScaleFactor()</strong>
                        </term>
                        <term>Updates <strong>scaleFactorPtr</strong> with the Camera’s current AGC HEQ Output Scale Factor</term>
                    </item>
                    <item>
                        <term>Lepton 1.5, 1.6, 2.0, 2.5</term>
                        <term>
                            <strong>LEP_SetAgcHeqScaleFactor()</strong>
                        </term>
                        <term>Sets Camera’s current AGC HEQ Output Scale Factor to <strong>scaleFactor</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetAgcHeqScaleFactor (LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_AGC_HEQ_SCALE_FACTOR_E_PTR scaleFactorPtr)
LEP_RESULT LEP_SetAgcHeqScaleFactor (LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_AGC_HEQ_SCALE_FACTOR_E scaleFactor)
/* AGC Output Scale Factor Structure
*/
typedef enum LEP_AGC_SCALE_FACTOR_E_TAG
{
LEP_AGC_SCALE_TO_8_BITS = 0,
LEP_AGC_SCALE_TO_14_BITS,
LEP_AGC_END_SCALE_TO
}LEP_AGC_HEQ_SCALE_FACTOR_E, *LEP_AGC_HEQ_SCALE_FACTOR_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Agc.GetHeqScaleFactor">
            <summary>AGC HEQ Output Scale Factor<para>This parameter specifies the output format for HEQ as either 8-bits (values range 0 to 255), or 14-bit (values range from 0 to 16383).</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <strong>LEP_AGC_SCALE_TO_8_BITS</strong>
                        </term>
                        <term>
                            <strong>LEP_AGC_SCALE_TO_14_BITS</strong>
                        </term>
                        <term>
                            <strong>LEP_AGC_SCALE_TO_8_BITS</strong>
                        </term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> AGC <strong>0x0100</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x44</strong></para>
                <para>With Set <strong>0x45</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 1.5, 1.6, 2.0, 2.5</term>
                        <term>
                            <strong>LEP_GetAgcHeqScaleFactor()</strong>
                        </term>
                        <term>Updates <strong>scaleFactorPtr</strong> with the Camera’s current AGC HEQ Output Scale Factor</term>
                    </item>
                    <item>
                        <term>Lepton 1.5, 1.6, 2.0, 2.5</term>
                        <term>
                            <strong>LEP_SetAgcHeqScaleFactor()</strong>
                        </term>
                        <term>Sets Camera’s current AGC HEQ Output Scale Factor to <strong>scaleFactor</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetAgcHeqScaleFactor (LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_AGC_HEQ_SCALE_FACTOR_E_PTR scaleFactorPtr)
LEP_RESULT LEP_SetAgcHeqScaleFactor (LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_AGC_HEQ_SCALE_FACTOR_E scaleFactor)
/* AGC Output Scale Factor Structure
*/
typedef enum LEP_AGC_SCALE_FACTOR_E_TAG
{
LEP_AGC_SCALE_TO_8_BITS = 0,
LEP_AGC_SCALE_TO_14_BITS,
LEP_AGC_END_SCALE_TO
}LEP_AGC_HEQ_SCALE_FACTOR_E, *LEP_AGC_HEQ_SCALE_FACTOR_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Agc.GetHeqEmptyCountChecked">
            <summary>AGC HEQ Empty Counts<para>This parameter specifies the maximum number of pixels in a bin that will be interpreted as an empty bin. Histogram bins with this number of pixels or less will be processed as an empty bin.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>0</term>
                        <term>2^14 -1</term>
                        <term>2</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> AGC <strong>0x0100</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x3C</strong></para>
                <para>With Set <strong>0x3D</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>1</strong> size of <strong>LEP_UINT16</strong> data type</para>
                <para>Set <strong>1</strong> size of <strong>LEP_UINT16</strong> data type</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 1.5, 1.6, 2.0, 2.5</term>
                        <term>
                            <strong>LEP_GetAgcHeqEmptyCount()</strong>
                        </term>
                        <term>Updates <strong>emptyCountPtr</strong> with the Camera’s current HEQ transfer function’s bin empty count</term>
                    </item>
                    <item>
                        <term>Lepton 1.5, 1.6, 2.0, 2.5</term>
                        <term>
                            <strong>LEP_SetAgcHeqEmptyCount()</strong>
                        </term>
                        <term>Sets Camera’s current HEQ transfer function’s bin empty count to <strong>emptyCount</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetAgcHeqEmptyCount(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_AGC_HEQ_EMPTY_COUNT_T_PTR emptyCountPtr)
LEP_RESULT LEP_SetAgcHeqEmptyCount(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_AGC_HEQ_EMPTY_COUNT_T emptyCount)</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Agc.GetHeqEmptyCount">
            <summary>AGC HEQ Empty Counts<para>This parameter specifies the maximum number of pixels in a bin that will be interpreted as an empty bin. Histogram bins with this number of pixels or less will be processed as an empty bin.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>0</term>
                        <term>2^14 -1</term>
                        <term>2</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> AGC <strong>0x0100</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x3C</strong></para>
                <para>With Set <strong>0x3D</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>1</strong> size of <strong>LEP_UINT16</strong> data type</para>
                <para>Set <strong>1</strong> size of <strong>LEP_UINT16</strong> data type</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 1.5, 1.6, 2.0, 2.5</term>
                        <term>
                            <strong>LEP_GetAgcHeqEmptyCount()</strong>
                        </term>
                        <term>Updates <strong>emptyCountPtr</strong> with the Camera’s current HEQ transfer function’s bin empty count</term>
                    </item>
                    <item>
                        <term>Lepton 1.5, 1.6, 2.0, 2.5</term>
                        <term>
                            <strong>LEP_SetAgcHeqEmptyCount()</strong>
                        </term>
                        <term>Sets Camera’s current HEQ transfer function’s bin empty count to <strong>emptyCount</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetAgcHeqEmptyCount(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_AGC_HEQ_EMPTY_COUNT_T_PTR emptyCountPtr)
LEP_RESULT LEP_SetAgcHeqEmptyCount(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_AGC_HEQ_EMPTY_COUNT_T emptyCount)</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Agc.GetHeqClipLimitLowChecked">
            <summary>AGC HEQ Clip Limit Low<para>This parameter defines an artificial population that is added to every non-empty histogram bin. In other words, if the Clip Limit Low is set to <em>L</em>, a bin with an actual population of <em>X</em> will have an effective population of <em>L</em> + <em>X.</em> y empty bin that is nearby a populated bin will be given an artificial population of <em>L</em>. The effect of higher values is to provide a more linear transfer function; lower values provide a more non-linear (equalized) transfer function. This command is deprecated for Lepton 3 (replaced by Linear Percent).</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>0</term>
                        <term>1024</term>
                        <term>512</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> AGC <strong>0x0100</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x30</strong></para>
                <para>With Set <strong>0x31</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>1</strong> size of <strong>LEP_UINT16</strong> data type</para>
                <para>Set <strong>1</strong> size of <strong>LEP_UINT16</strong> data type</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 1.5, 1.6, 2.0, 2.5</term>
                        <term>
                            <strong>LEP_GetAgcHeqClipLimitLow()</strong>
                        </term>
                        <term>Updates <strong>agcHeqClipLimitLowPtr</strong> with the Camera’s current HEQ level Low value</term>
                    </item>
                    <item>
                        <term>Lepton 1.5, 1.6, 2.0, 2.5</term>
                        <term>
                            <strong>LEP_SetAgcHeqClipLimitLow()</strong>
                        </term>
                        <term>Sets Camera’s current HEQ level Low value to <strong>agcHeqClipLimitLow</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetAgcHeqClipLimitLow(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_UINT16 *agcHeqClipLimitLowPtr)
LEP_RESULT LEP_SetAgcHeqClipLimitLow(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_UINT16 agcHeqClipLimitLow)</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Agc.GetHeqClipLimitLow">
            <summary>AGC HEQ Clip Limit Low<para>This parameter defines an artificial population that is added to every non-empty histogram bin. In other words, if the Clip Limit Low is set to <em>L</em>, a bin with an actual population of <em>X</em> will have an effective population of <em>L</em> + <em>X.</em> y empty bin that is nearby a populated bin will be given an artificial population of <em>L</em>. The effect of higher values is to provide a more linear transfer function; lower values provide a more non-linear (equalized) transfer function. This command is deprecated for Lepton 3 (replaced by Linear Percent).</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>0</term>
                        <term>1024</term>
                        <term>512</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> AGC <strong>0x0100</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x30</strong></para>
                <para>With Set <strong>0x31</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>1</strong> size of <strong>LEP_UINT16</strong> data type</para>
                <para>Set <strong>1</strong> size of <strong>LEP_UINT16</strong> data type</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>Lepton 1.5, 1.6, 2.0, 2.5</term>
                        <term>
                            <strong>LEP_GetAgcHeqClipLimitLow()</strong>
                        </term>
                        <term>Updates <strong>agcHeqClipLimitLowPtr</strong> with the Camera’s current HEQ level Low value</term>
                    </item>
                    <item>
                        <term>Lepton 1.5, 1.6, 2.0, 2.5</term>
                        <term>
                            <strong>LEP_SetAgcHeqClipLimitLow()</strong>
                        </term>
                        <term>Sets Camera’s current HEQ level Low value to <strong>agcHeqClipLimitLow</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetAgcHeqClipLimitLow(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_UINT16 *agcHeqClipLimitLowPtr)
LEP_RESULT LEP_SetAgcHeqClipLimitLow(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_UINT16 agcHeqClipLimitLow)</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Agc.GetHeqClipLimitHighChecked">
            <summary>AGC HEQ Clip Limit High<para>This parameter defines the maximum number of pixels allowed to accumulate in any given histogram bin. Any additional pixels in a given bin are clipped. The effect of this parameter is to limit the influence of highly-populated bins on the resulting HEQ transformation function.</para><para><strong>Lepton 1.5, 1.6, 2.0, 2.5</strong></para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>0</term>
                        <term>4,800</term>
                        <term>4,800</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>Lepton 3.0, 3.5</strong>
                </para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>0</term>
                        <term>19,200</term>
                        <term>19,200</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> AGC <strong>0x0100</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x2C</strong></para>
                <para>With Set <strong>0x2D</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>1</strong> size of <strong>LEP_UINT16</strong> data type</para>
                <para>Set <strong>1</strong> size of <strong>LEP_UINT16</strong> data type</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetAgcHeqClipLimitHigh()</strong>
                        </term>
                        <term>Updates <strong>agcHeqClipLimitHighPtr</strong> with the Camera’s current HEQ level high value</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetAgcHeqClipLimitHigh()</strong>
                        </term>
                        <term>Sets Camera’s current HEQ level high value to <strong>agcHeqClipLimitHigh</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetAgcHeqClipLimitHigh(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_UINT16 *agcHeqClipLimitHighPtr)
LEP_RESULT LEP_SetAgcHeqClipLimitHigh(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_UINT16 agcHeqClipLimitHigh)</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Agc.GetHeqClipLimitHigh">
            <summary>AGC HEQ Clip Limit High<para>This parameter defines the maximum number of pixels allowed to accumulate in any given histogram bin. Any additional pixels in a given bin are clipped. The effect of this parameter is to limit the influence of highly-populated bins on the resulting HEQ transformation function.</para><para><strong>Lepton 1.5, 1.6, 2.0, 2.5</strong></para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>0</term>
                        <term>4,800</term>
                        <term>4,800</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>Lepton 3.0, 3.5</strong>
                </para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>0</term>
                        <term>19,200</term>
                        <term>19,200</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> AGC <strong>0x0100</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x2C</strong></para>
                <para>With Set <strong>0x2D</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>1</strong> size of <strong>LEP_UINT16</strong> data type</para>
                <para>Set <strong>1</strong> size of <strong>LEP_UINT16</strong> data type</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetAgcHeqClipLimitHigh()</strong>
                        </term>
                        <term>Updates <strong>agcHeqClipLimitHighPtr</strong> with the Camera’s current HEQ level high value</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetAgcHeqClipLimitHigh()</strong>
                        </term>
                        <term>Sets Camera’s current HEQ level high value to <strong>agcHeqClipLimitHigh</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetAgcHeqClipLimitHigh(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_UINT16 *agcHeqClipLimitHighPtr)
LEP_RESULT LEP_SetAgcHeqClipLimitHigh(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_UINT16 agcHeqClipLimitHigh)</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Agc.GetHeqDampingFactorChecked">
            <summary>AGC HEQ Dampening Factor<para>This parameter is the amount of temporal dampening applied to the HEQ transformation function. An IIR filter of the form (<em>N</em>/256) * <strong>previous</strong> + ((256-<em>N</em>)/256) * <strong>current</strong> is applied , and the HEQ dampening factor represents the value N in the equation, i.e., a value that applies to the amount of influence the previous HEQ transformation function has on the current function. . The lower the value of N the higher the influence of the current video frame whereas the higher the value of N the more influence the previous damped transfer function has.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>0</term>
                        <term>256</term>
                        <term>64</term>
                        <term>N/A</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> AGC <strong>0x0100</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x24</strong></para>
                <para>With Set <strong>0x25</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>1</strong> size of <strong>LEP_UINT16</strong> data type</para>
                <para>Set <strong>1</strong> size of <strong>LEP_UINT16</strong> data type</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetAgcHeqDampingFactor()</strong>
                        </term>
                        <term>Updates <strong>agcHeqDampingFactorPtr</strong> with the Camera’s current HEQ dampening factor</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetAgcHeqDampingFactor()</strong>
                        </term>
                        <term>Sets Camera’s current HEQ dampening factor to <strong>agcHeqDampingFactor</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetAgcHeqDampingFactor(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_UINT16 *agcHeqDampingFactorPtr)
LEP_RESULT LEP_SetAgcHeqDampingFactor(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_UINT16 gcHeqDampingFactor)</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Agc.GetHeqDampingFactor">
            <summary>AGC HEQ Dampening Factor<para>This parameter is the amount of temporal dampening applied to the HEQ transformation function. An IIR filter of the form (<em>N</em>/256) * <strong>previous</strong> + ((256-<em>N</em>)/256) * <strong>current</strong> is applied , and the HEQ dampening factor represents the value N in the equation, i.e., a value that applies to the amount of influence the previous HEQ transformation function has on the current function. . The lower the value of N the higher the influence of the current video frame whereas the higher the value of N the more influence the previous damped transfer function has.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>0</term>
                        <term>256</term>
                        <term>64</term>
                        <term>N/A</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> AGC <strong>0x0100</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x24</strong></para>
                <para>With Set <strong>0x25</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>1</strong> size of <strong>LEP_UINT16</strong> data type</para>
                <para>Set <strong>1</strong> size of <strong>LEP_UINT16</strong> data type</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetAgcHeqDampingFactor()</strong>
                        </term>
                        <term>Updates <strong>agcHeqDampingFactorPtr</strong> with the Camera’s current HEQ dampening factor</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetAgcHeqDampingFactor()</strong>
                        </term>
                        <term>Sets Camera’s current HEQ dampening factor to <strong>agcHeqDampingFactor</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetAgcHeqDampingFactor(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_UINT16 *agcHeqDampingFactorPtr)
LEP_RESULT LEP_SetAgcHeqDampingFactor(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_UINT16 gcHeqDampingFactor)</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Agc.GetHistogramStatisticsChecked">
            <summary>AGC Histogram Statistics<para>The AGC algorithms use the image histogram as input. This attribute returns the current Histogram statistics of minimum intensity, maximum intensity, mean intensity, and the number of pixels processed within the defined AGC ROI. This command is Read-only.</para><para><strong>Lepton 1.5, 1.6, 2.0, 2.5</strong></para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Dimension</strong>
                        </term>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <para>
                                <para>minimum intensity</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>2^14 -1</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>maximum intensity</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>2^14 -1</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>mean intensity</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>2^14 -1</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>number of pixels</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>4,800</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>Lepton 3.0, 3.5</strong>
                </para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Dimension</strong>
                        </term>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <para>
                                <para>minimum intensity</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>2^14 -1</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>maximum intensity</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>2^14 -1</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>mean intensity</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>2^14 -1</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>number of pixels</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>19,200</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> AGC <strong>0x0100</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x0C</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>4</strong> size of <strong>LEP_AGC_HISTOGRAM_STATISTICS_T</strong> data type</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetAgcHistogramStatistics()</strong>
                        </term>
                        <term>Updates <strong>agcHistogramStatisticsPtr</strong> with the Camera’s current AGC Histogram statistics</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetAgcHistogramStatistics(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_AGC_HISTOGRAM_STATISTICS_T_PTR
*agcHistogramStatisticsPtr)
/* AGC Histogram Statistics Structure
*/
typedef struct LEP_AGC_HISTOGRAM_STATISTICS_TAG
{
LEP_UINT16 minIntensity;
LEP_UINT16 maxIntensity;
LEP_UINT16 meanIntensity;
LEP_UINT16 numPixels;
}LEP_AGC_HISTOGRAM_STATISTICS_T, *LEP_AGC_HISTOGRAM_STATISTICS_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Agc.GetHistogramStatistics">
            <summary>AGC Histogram Statistics<para>The AGC algorithms use the image histogram as input. This attribute returns the current Histogram statistics of minimum intensity, maximum intensity, mean intensity, and the number of pixels processed within the defined AGC ROI. This command is Read-only.</para><para><strong>Lepton 1.5, 1.6, 2.0, 2.5</strong></para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Dimension</strong>
                        </term>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <para>
                                <para>minimum intensity</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>2^14 -1</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>maximum intensity</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>2^14 -1</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>mean intensity</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>2^14 -1</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>number of pixels</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>4,800</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>Lepton 3.0, 3.5</strong>
                </para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Dimension</strong>
                        </term>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <para>
                                <para>minimum intensity</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>2^14 -1</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>maximum intensity</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>2^14 -1</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>mean intensity</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>2^14 -1</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>number of pixels</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>19,200</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> AGC <strong>0x0100</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x0C</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>4</strong> size of <strong>LEP_AGC_HISTOGRAM_STATISTICS_T</strong> data type</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetAgcHistogramStatistics()</strong>
                        </term>
                        <term>Updates <strong>agcHistogramStatisticsPtr</strong> with the Camera’s current AGC Histogram statistics</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetAgcHistogramStatistics(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_AGC_HISTOGRAM_STATISTICS_T_PTR
*agcHistogramStatisticsPtr)
/* AGC Histogram Statistics Structure
*/
typedef struct LEP_AGC_HISTOGRAM_STATISTICS_TAG
{
LEP_UINT16 minIntensity;
LEP_UINT16 maxIntensity;
LEP_UINT16 meanIntensity;
LEP_UINT16 numPixels;
}LEP_AGC_HISTOGRAM_STATISTICS_T, *LEP_AGC_HISTOGRAM_STATISTICS_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Agc.GetROIChecked">
            <summary>AGC ROI Select<para>The AGC algorithms utilize a histogram, which is collected from within a specified rectangular window or Region of Interest (ROI). This region is defined by 4 parameters: start column, start row, end column, and end row. The region is adjustable from full window to a sub-window.</para><para><strong>Lepton 1.5, 1.6, 2.0, 2.5</strong></para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Dimension</strong>
                        </term>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>
Value</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <para>
                                <para>start column</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>&lt; = endCol</term>
                        <term>0</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>start row</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>&lt; endRow</term>
                        <term>0</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>end column</para>
                            </para>
                        </term>
                        <term>&gt;= startCol</term>
                        <term>79</term>
                        <term>79</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>end row</para>
                            </para>
                        </term>
                        <term>&gt;= startRow</term>
                        <term>59</term>
                        <term>59</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>Lepton 3.0, 3.5</strong>
                </para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Dimension</strong>
                        </term>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>
Value</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <para>
                                <para>start column</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>&lt; = endCol</term>
                        <term>0</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>start row</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>&lt; endRow</term>
                        <term>0</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>end column</para>
                            </para>
                        </term>
                        <term>&gt;= startCol</term>
                        <term>159</term>
                        <term>159</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>end row</para>
                            </para>
                        </term>
                        <term>&gt;= startRow</term>
                        <term>119</term>
                        <term>119</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> AGC <strong>0x0100</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x08</strong></para>
                <para>With Set <strong>0x09</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>4</strong> size of <strong>LEP_AGC_ROI_T</strong> data type</para>
                <para>Set <strong>4</strong> size of <strong>LEP_AGC_ROI_T</strong> data type</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetAgcROI()</strong>
                        </term>
                        <term>Updates <strong>agcROIPtr</strong> with the Camera’s current AGC ROI</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetAgcROI()</strong>
                        </term>
                        <term>Sets Camera’s current AGC ROI to <strong>agcROI</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetAgcROI(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_AGC_ROI_T_PTR agcROIPtr)
LEP_RESULT LEP_SetAgcROI(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_AGC_ROI_T agcROI)
/* AGC ROI Structure
*/
typedef struct LEP_AGC_ROI_TAG
{
LEP_UINT16 startCol;
LEP_UINT16 startRow;
LEP_UINT16 endCol;
LEP_UINT16 endRow;
}LEP_AGC_ROI_T, *LEP_AGC_ROI_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Agc.GetROI">
            <summary>AGC ROI Select<para>The AGC algorithms utilize a histogram, which is collected from within a specified rectangular window or Region of Interest (ROI). This region is defined by 4 parameters: start column, start row, end column, and end row. The region is adjustable from full window to a sub-window.</para><para><strong>Lepton 1.5, 1.6, 2.0, 2.5</strong></para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Dimension</strong>
                        </term>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>
Value</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <para>
                                <para>start column</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>&lt; = endCol</term>
                        <term>0</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>start row</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>&lt; endRow</term>
                        <term>0</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>end column</para>
                            </para>
                        </term>
                        <term>&gt;= startCol</term>
                        <term>79</term>
                        <term>79</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>end row</para>
                            </para>
                        </term>
                        <term>&gt;= startRow</term>
                        <term>59</term>
                        <term>59</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>Lepton 3.0, 3.5</strong>
                </para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Dimension</strong>
                        </term>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>
Value</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <para>
                                <para>start column</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>&lt; = endCol</term>
                        <term>0</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>start row</para>
                            </para>
                        </term>
                        <term>0</term>
                        <term>&lt; endRow</term>
                        <term>0</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>end column</para>
                            </para>
                        </term>
                        <term>&gt;= startCol</term>
                        <term>159</term>
                        <term>159</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                    <item>
                        <term>
                            <para>
                                <para>end row</para>
                            </para>
                        </term>
                        <term>&gt;= startRow</term>
                        <term>119</term>
                        <term>119</term>
                        <term>pixels</term>
                        <term>1</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> AGC <strong>0x0100</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x08</strong></para>
                <para>With Set <strong>0x09</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>4</strong> size of <strong>LEP_AGC_ROI_T</strong> data type</para>
                <para>Set <strong>4</strong> size of <strong>LEP_AGC_ROI_T</strong> data type</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetAgcROI()</strong>
                        </term>
                        <term>Updates <strong>agcROIPtr</strong> with the Camera’s current AGC ROI</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetAgcROI()</strong>
                        </term>
                        <term>Sets Camera’s current AGC ROI to <strong>agcROI</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetAgcROI(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_AGC_ROI_T_PTR agcROIPtr)
LEP_RESULT LEP_SetAgcROI(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_AGC_ROI_T agcROI)
/* AGC ROI Structure
*/
typedef struct LEP_AGC_ROI_TAG
{
LEP_UINT16 startCol;
LEP_UINT16 startRow;
LEP_UINT16 endCol;
LEP_UINT16 endRow;
}LEP_AGC_ROI_T, *LEP_AGC_ROI_T_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Agc.GetPolicyChecked">
            <summary>AGC Policy Select<para>The camera supports 2 AGC policies to process incoming video data, histogram equalization (HEQ) and linear histogram stretch. This command sets and retrieves the AGC policy.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <strong>LEP_AGC_LINEAR</strong>
                        </term>
                        <term>
                            <strong>LEP_AGC_HEQ</strong>
                        </term>
                        <term>
                            <strong>LEP_AGC_HEQ</strong>
                        </term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> AGC <strong>0x0100</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x04</strong></para>
                <para>With Set <strong>0x05</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetAgcPolicy()</strong>
                        </term>
                        <term>Updates <strong>agcPolicyPtr</strong> with the Camera’s current AGC policy.</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetAgcPolicy()</strong>
                        </term>
                        <term>Sets Camera’s current AGC policy to <strong>agcPolicy</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetAgcPolicy(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_AGC_POLICY_E_PTR agcPolicyPtr)
LEP_RESULT LEP_SetAgcPolicy(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_AGC_POLICY_E agcPolicy)
/* AGC Policy Enum
*/
typedef enum LEP_AGC_POLICY_TAG
{
LEP_AGC_LINEAR=0,
LEP_AGC_HEQ,
LEP_END_AGC_POLICY
}LEP_AGC_POLICY_E, *LEP_AGC_POLICY_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Agc.GetPolicy">
            <summary>AGC Policy Select<para>The camera supports 2 AGC policies to process incoming video data, histogram equalization (HEQ) and linear histogram stretch. This command sets and retrieves the AGC policy.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <strong>LEP_AGC_LINEAR</strong>
                        </term>
                        <term>
                            <strong>LEP_AGC_HEQ</strong>
                        </term>
                        <term>
                            <strong>LEP_AGC_HEQ</strong>
                        </term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> AGC <strong>0x0100</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong />With Get <strong>0x04</strong></para>
                <para>With Set <strong>0x05</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetAgcPolicy()</strong>
                        </term>
                        <term>Updates <strong>agcPolicyPtr</strong> with the Camera’s current AGC policy.</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetAgcPolicy()</strong>
                        </term>
                        <term>Sets Camera’s current AGC policy to <strong>agcPolicy</strong>.</term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetAgcPolicy(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_AGC_POLICY_E_PTR agcPolicyPtr)
LEP_RESULT LEP_SetAgcPolicy(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_AGC_POLICY_E agcPolicy)
/* AGC Policy Enum
*/
typedef enum LEP_AGC_POLICY_TAG
{
LEP_AGC_LINEAR=0,
LEP_AGC_HEQ,
LEP_END_AGC_POLICY
}LEP_AGC_POLICY_E, *LEP_AGC_POLICY_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Agc.GetEnableStateChecked">
            <summary>AGC Enable and Disable<para>To turn AGC ON is to enable AGC processing. Disabling the AGC will turn the AGC processing OFF and the video data will not be optimized for scene contrast. This command sets and retrieves the AGC state.</para><para>Note that the Focus metric (see 4.5.3) must be disabled when AGC is enabled.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <strong>LEP_AGC_DISABLE</strong>
                        </term>
                        <term>
                            <strong>LEP_AGC_ENABLE</strong>
                        </term>
                        <term>
                            <strong>LEP_AGC_DISABLE</strong>
                        </term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> AGC <strong>0x0100</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong>0x00</strong></para>
                <para>
                    <para>With Get <strong>0x00 </strong></para>
                </para>
                <para>With Set <strong>0x01</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetAgcEnableState()</strong>
                        </term>
                        <term>Updates <strong>agcEnableStatePtr</strong> with the Camera’s current AGC enable state.</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetAgcEnableState()</strong>
                        </term>
                        <term>Sets Camera’s current AGC enable state to <strong>agcEnableState</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetAgcEnableState(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_AGC_ENABLE_E_PTR agcEnableStatePtr)
LEP_RESULT LEP_SetAgcEnableState(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_AGC_ENABLE_E agcEnableState)
/* AGC Enable Enum
*/
typedef enum LEP_AGC_ENABLE_TAG
{
LEP_AGC_DISABLE=0,
LEP_AGC_ENABLE,
LEP_END_AGC_ENABLE
}LEP_AGC_ENABLE_E, *LEP_AGC_ENABLE_E_PTR;</code>
            </remarks>
        </member>
        <member name="M:Lepton.CCI.Agc.GetEnableState">
            <summary>AGC Enable and Disable<para>To turn AGC ON is to enable AGC processing. Disabling the AGC will turn the AGC processing OFF and the video data will not be optimized for scene contrast. This command sets and retrieves the AGC state.</para><para>Note that the Focus metric (see 4.5.3) must be disabled when AGC is enabled.</para></summary>
            <remarks>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Minimum Value</strong>
                        </term>
                        <term>
                            <strong>Maximum Value</strong>
                        </term>
                        <term>
                            <strong>Default Setting</strong>
                        </term>
                        <term>
                            <strong>Units</strong>
                        </term>
                        <term>
                            <strong>Scale factor</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>
                            <strong>LEP_AGC_DISABLE</strong>
                        </term>
                        <term>
                            <strong>LEP_AGC_ENABLE</strong>
                        </term>
                        <term>
                            <strong>LEP_AGC_DISABLE</strong>
                        </term>
                        <term>N/A</term>
                        <term>N/A</term>
                    </item>
                </list>
                <para>
                    <strong>SDK Module ID:</strong> AGC <strong>0x0100</strong></para>
                <para>
                    <strong>SDK Command ID:</strong> Base <strong>0x00</strong></para>
                <para>
                    <para>With Get <strong>0x00 </strong></para>
                </para>
                <para>With Set <strong>0x01</strong></para>
                <para>
                    <strong>SDK Data Length:</strong> Get <strong>2</strong> size on an <strong>enum</strong> data type on a 32-bit machine</para>
                <para>Set <strong>2</strong> size on an <strong>enum</strong> data type on a 32-bit machine</para>
                <list type="table">
                    <listheader>
                        <term>
                            <strong>Compatibility</strong>
                        </term>
                        <term>
                            <strong>C-SDK Commands</strong>
                        </term>
                        <term>
                            <strong>Description</strong>
                        </term>
                    </listheader>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_GetAgcEnableState()</strong>
                        </term>
                        <term>Updates <strong>agcEnableStatePtr</strong> with the Camera’s current AGC enable state.</term>
                    </item>
                    <item>
                        <term>All Lepton Configurations</term>
                        <term>
                            <strong>LEP_SetAgcEnableState()</strong>
                        </term>
                        <term>Sets Camera’s current AGC enable state to <strong>agcEnableState</strong></term>
                    </item>
                </list>
                <para>C SDK Interface:</para>
                <code>LEP_RESULT LEP_GetAgcEnableState(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_AGC_ENABLE_E_PTR agcEnableStatePtr)
LEP_RESULT LEP_SetAgcEnableState(LEP_CAMERA_PORT_DESC_T_PTR portDescPtr,
LEP_AGC_ENABLE_E agcEnableState)
/* AGC Enable Enum
*/
typedef enum LEP_AGC_ENABLE_TAG
{
LEP_AGC_DISABLE=0,
LEP_AGC_ENABLE,
LEP_END_AGC_ENABLE
}LEP_AGC_ENABLE_E, *LEP_AGC_ENABLE_E_PTR;</code>
            </remarks>
        </member>
        <member name="T:Lepton.CCI.Agc">
            <summary>
This module provides command and control of the video output Automatic Gain Control (AGC) operation. The cameraâ€™s video data may be processed to provide an optimum scene contrast using one of two policies: HEQ-Histogram Equalization, or by Linear Histogram stretching. This module provides commands to enable, select, and control the AGC processing.
</summary>
        </member>
        <member name="M:Lepton.CCI.#ctor(Lepton.Unit.UVC)">
            <summary>
Construct a <c>CCI</c> which connects the the Lepton over the given port.
</summary>
        </member>
        <member name="F:Lepton.CCI.SDKVersion">
            <summary>
The version of the SDK currently in use
</summary>
        </member>
        <member name="T:Lepton.CCI.LeptonError">
            <summary>
Base class for errors originating from the device itself
</summary>
        </member>
        <member name="T:Lepton.CCI.DisconnectedError">
            <summary>
Attempted to communicate with a disconnected device
</summary>
        </member>
        <member name="P:Lepton.CCI.Handle.MonikerPath">
Can be used with MkParseDisplayName to instantiate the camera

</member>
        <member name="T:Lepton.CCI.UnknownError">
Class to represent unknown errors, such as the errors 
that show up when calling normal SDK commands. 

</member>
        <member name="T:Lepton.CCI">
            <summary>
The <c>CCI</c> handles getting and setting values on the lepton as well as 
running commands. The commands that can be run on the lepton are grouped into
collections. There are radiometric commands (<see cref="T:Lepton.CCI.Rad" />), gain control commands (<see cref="T:Lepton.CCI.Agc" />),
system commands (<see cref="T:Lepton.CCI.Sys" />), advanced commands (<see cref="T:Lepton.CCI.Oem" />), and video commands (<see cref="T:Lepton.CCI.Vid" />). 
<c>CCI</c> instances have instances of these classes in their <see cref="F:Lepton.CCI.rad" />, <see cref="F:Lepton.CCI.agc" />,
<see cref="F:Lepton.CCI.sys" />, <see cref="F:Lepton.CCI.oem" />, and <see cref="F:Lepton.CCI.vid" /> fields. 
</summary>
            <example>
                <code>
var devices = Lepton.CCI.GetDevices();
// get the first device
var device = devices[0];
lepton = device.Open();
Console.WriteLine(lepton.sys.GetCameraUpTime());
</code>
            </example>
        </member>
        <member name="M:LEP_SetAgcEnableState(Lepton.Unit.UVC,LEP_AGC_ENABLE_TAG)">
Sets the current AGC Enable state on the Camera.  The 
AGC enable state turns AGC On (enabled) or OFF (disabled).

@param agcEnableState 
            Specifies the enable state to set the camera' AGC
            Range:
               LEP_AGC_DISABLE=0
               LEP_AGC_ENABLE =1

@return LEP_OK if all goes well, otherwise an error code.

</member>
        <member name="M:LEP_SetAttributeChecked(Lepton.Unit.UVC,System.UInt16,System.UInt16*,System.UInt16)">
Sets the value of a camera attribute.

@return 

</member>
        <member name="M:LEP_SetAttribute(Lepton.Unit.UVC,System.UInt16,System.UInt16*,System.UInt16)">
Sets the value of a camera attribute.

@return 

</member>
        <member name="M:LEP_GetAttribute(Lepton.Unit.UVC,System.UInt16,System.UInt16*,System.UInt16)">
EXPORTED PUBLIC FUNCTIONS                                                *
</member>
        <member name="M:LEP_RunOemStandby(Lepton.Unit.UVC)">
Places the Camera into the Stand By condition.

@param portDescPtr

@return 

</member>
        <member name="T:_exception">
PRIVATE MODULE FUNCTIONS                                                 *
</member>
        <member name="M:LEP_RunOemStandbyChecked(Lepton.Unit.UVC)">
 Places the Camera into the Stand By condition.

 @param portDescPtr

 @return

</member>
        <member name="M:LEP_RunOemPowerDownChecked(Lepton.Unit.UVC)">
 Power Down the Camera by asserting the POWERDOWN condition.

 @param portDescPtr

 @return

</member>
        <member name="M:LEP_SetAgcEnableStateChecked(Lepton.Unit.UVC,LEP_AGC_ENABLE_TAG)">
 Sets the current AGC Enable state on the Camera.  The
 AGC enable state turns AGC On (enabled) or OFF (disabled).

 @param agcEnableState
             Specifies the enable state to set the camera' AGC
             Range:
                LEP_AGC_DISABLE=0
                LEP_AGC_ENABLE =1

 @return LEP_OK if all goes well, otherwise an error code.

</member>
        <member name="M:LEP_GetAgcEnableStateChecked(Lepton.Unit.UVC,LEP_AGC_ENABLE_TAG*)">
 Retrieves the current AGC Enable state from the Camera. The
 AGC enable state turns AGC On (enabled) or OFF (disabled).

 @param agcEnableStatePtr
               Pointer to variable to update with the camera's
               current state.
               Range:
                  LEP_AGC_DISABLE=0
                  LEP_AGC_ENABLE =1

 @return LEP_OK if all goes well, otherwise an error code.

</member>
        <member name="M:LEP_SelectDevice(Lepton.Unit.UVC,LEP_PROTOCOL_DEVICE_E_TAG)">
EXPORTED PUBLIC FUNCTIONS                                                *
</member>
        <member name="F:sdkVersion">
EXPORTED DEFINES                                                         *
EXPORTED PUBLIC DATA                                                     *

LOCAL DEFINES                                                            *
LOCAL TYPE DEFINITIONS                                                   *
PRIVATE DATA DECLARATIONS                                                *
EXPORTED PUBLIC DATA                                                     *
</member>
        <member name="T:LEP_SDK_VERSION_TAG">
INCLUDE FILES                                                            *
If defined then the CCI and SPI port drivers require opening
and closing with each access; otherwise the ports are opened 
once and left open for future accesses 

EXPORTED TYPEDEFS                                                        *

If defined then the CCI and SPI port drivers require opening
and closing with each access; otherwise the ports are opened 
once and left open for future accesses 

EXPORTED TYPEDEFS                                                        *
</member>
        <member name="M:LEP_GetVidPolarity(Lepton.Unit.UVC,LEP_POLARITY_E_TAG*)">
EXPORTED PUBLIC DATA                                                     *
EXPORTED PUBLIC FUNCTIONS                                                *

LOCAL DEFINES                                                            *
LOCAL TYPE DEFINITIONS                                                   *
PRIVATE DATA DECLARATIONS                                                *
PRIVATE FUNCTION DECLARATIONS                                            *
EXPORTED PUBLIC DATA                                                     *
EXPORTED PUBLIC FUNCTIONS                                                *
</member>
        <member name="D:LEP_VID_FOCUS_METRIC_T">
INCLUDE FILES                                                            *
EXPORTED DEFINES                                                         *
EXPORTED TYPE DEFINITIONS                                                *
</member>
        <member name="M:LEP_RunSysPing(Lepton.Unit.UVC)">
EXPORTED PUBLIC DATA                                                     *
EXPORTED PUBLIC FUNCTIONS                                                *

LOCAL DEFINES                                                            *
LOCAL TYPE DEFINITIONS                                                   *
PRIVATE DATA DECLARATIONS                                                *
PRIVATE FUNCTION DECLARATIONS                                            *
EXPORTED PUBLIC DATA                                                     *
EXPORTED PUBLIC FUNCTIONS                                                *
</member>
        <member name="D:LEP_SYS_FLIR_SERIAL_NUMBER_T">
INCLUDE FILES                                                            *
EXPORTED DEFINES                                                         *
EXPORTED TYPE DEFINITIONS                                                *
</member>
        <member name="M:LEP_GetRadTShutterMode(Lepton.Unit.UVC,LEP_RAD_TS_MODE_E_TAG*)">
EXPORTED PUBLIC DATA DECLARATIONS                                        *
EXPORTED PUBLIC FUNCTIONS                                                *

LOCAL DEFINES                                                            *
LOCAL TYPE DEFINITIONS                                                   *
PRIVATE DATA DECLARATIONS                                                *
PRIVATE FUNCTION DECLARATIONS                                            *
EXPORTED PUBLIC DATA                                                     *
EXPORTED PUBLIC FUNCTIONS                                                *
</member>
        <member name="D:LEP_RAD_RS_T">
INCLUDE FILES                                                            *
EXPORTED DEFINES                                                         *
EXPORTED TYPE DEFINITIONS                                                *
</member>
        <member name="M:LEP_RunOemPowerDown(Lepton.Unit.UVC)">
EXPORTED PUBLIC DATA                                                     *
EXPORTED PUBLIC FUNCTIONS                                                *

LOCAL DEFINES                                                            *
LOCAL TYPE DEFINITIONS                                                   *
PRIVATE DATA DECLARATIONS                                                *
PRIVATE FUNCTION DECLARATIONS                                            *
EXPORTED PUBLIC DATA                                                     *
Power Down the Camera by asserting the POWERDOWN condition.

@param portDescPtr

@return 

</member>
        <member name="D:LEP_OEM_MASK_REVISION_T">
INCLUDE FILES                                                            *
EXPORTED DEFINES                                                         *
EXPORTED TYPE DEFINITIONS                                                *
</member>
        <member name="M:LEP_GetAgcEnableState(Lepton.Unit.UVC,LEP_AGC_ENABLE_TAG*)">
EXPORTED PUBLIC DATA                                                     *
EXPORTED PUBLIC FUNCTIONS                                                *

LOCAL DEFINES                                                            *
LOCAL TYPE DEFINITIONS                                                   *
PRIVATE DATA DECLARATIONS                                                *
PRIVATE FUNCTION DECLARATIONS                                            *
EXPORTED PUBLIC DATA                                                     *
EXPORTED PUBLIC FUNCTIONS                                                *
Retrieves the current AGC Enable state from the Camera. The 
AGC enable state turns AGC On (enabled) or OFF (disabled).   

@param agcEnableStatePtr
              Pointer to variable to update with the camera's
              current state.
              Range:
                 LEP_AGC_DISABLE=0
                 LEP_AGC_ENABLE =1

@return LEP_OK if all goes well, otherwise an error code.

</member>
        <member name="D:LEP_AGC_HEQ_EMPTY_COUNT_T">
EXPORTED DEFINES                                                         *
EXPORTED TYPE DEFINITIONS                                                *

INCLUDE FILES                                                            *
EXPORTED DEFINES                                                         *
EXPORTED TYPE DEFINITIONS                                                *
</member>
        <member name="T:Result">
INCLUDE FILES                                                            *
EXPORTED DEFINES                                                         *
EXPORTED TYPE DEFINITIONS                                                *
</member>
        <member name="D:LEP_UINT8">
EXPORTED DEFINES                                                         *
EXPORTED TYPE DEFINITIONS                                                *

INCLUDE FILES                                                            *
EXPORTED DEFINES                                                         *
EXPORTED TYPE DEFINITIONS                                                *
</member>
    </members>
</doc>